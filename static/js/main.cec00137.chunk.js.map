{"version":3,"sources":["components/access/roles.js","components/access/permissions.js","components/img/logo2.png","components/usersidecomponents/Navbar.jsx","components/usersidecomponents/Login.jsx","components/usersidecomponents/ProductCard.jsx","components/usersidecomponents/RecipeCard.jsx","components/usersidecomponents/Homepage.jsx","components/usersidecomponents/About.jsx","components/usersidecomponents/ProductSidebar.jsx","components/usersidecomponents/Products.jsx","components/usersidecomponents/RecipeSidebar.jsx","components/usersidecomponents/Recipes.jsx","components/usersidecomponents/ProductDetails.jsx","components/usersidecomponents/RecipeDetailsRow.jsx","components/usersidecomponents/RecipeDetails.jsx","components/usersidecomponents/UserAccountDetails.jsx","components/usersidecomponents/ShoppingCartRow.jsx","components/usersidecomponents/ShoppingCart.jsx","components/usersidecomponents/RegisterPage.jsx","components/usersidecomponents/UserDetailSidebar.jsx","components/usersidecomponents/PaypalButton.jsx","components/usersidecomponents/Payment.jsx","components/usersidecomponents/Search.jsx","components/usersidecomponents/SuccessfulOrder.jsx","components/adminsidecomponents/AdminLogin.jsx","components/adminsidecomponents/AdminProductDetails.jsx","components/adminsidecomponents/EditProducts.jsx","components/adminsidecomponents/ProductCardAdmin.jsx","components/adminsidecomponents/AdminProductsHomePage.jsx","components/adminsidecomponents/EditProductCategories.jsx","components/adminsidecomponents/ProductSearch.jsx","components/adminsidecomponents/AdminProducts.jsx","components/adminsidecomponents/RecipeCardAdmin.jsx","components/adminsidecomponents/AdminRecipeDetails.jsx","components/adminsidecomponents/EditRecipes.jsx","components/adminsidecomponents/RecipeSearch.jsx","components/adminsidecomponents/AdminRecipeDetails2.jsx","components/adminsidecomponents/EditRecipeCategoriesRow.jsx","components/adminsidecomponents/EditRecipeCategories.jsx","components/adminsidecomponents/EditRecipes2Row.jsx","components/adminsidecomponents/EditRecipes2.jsx","components/adminsidecomponents/EditIngredientProd.jsx","components/adminsidecomponents/AdminRecipes.jsx","components/adminsidecomponents/AdminOrderRow.jsx","components/adminsidecomponents/AdminOrders.jsx","components/adminsidecomponents/EditAdminProfile.jsx","components/adminsidecomponents/AdminProfile.jsx","components/adminsidecomponents/ManageAdminRow.jsx","components/adminsidecomponents/ManageAdmins.jsx","components/adminsidecomponents/ManageUserRow.jsx","components/adminsidecomponents/ManageUsers.jsx","components/adminsidecomponents/ManageDiscountCodeRow.jsx","components/adminsidecomponents/ManageDiscountCode.jsx","components/adminsidecomponents/AddAdmins.jsx","components/adminsidecomponents/AddDiscount.jsx","components/adminsidecomponents/CreatePasswordAdmin.jsx","components/adminsidecomponents/AdminOrderDetails.jsx","components/adminsidecomponents/EditDiscountDetails.jsx","components/adminsidecomponents/AdminSidebar.jsx","components/adminsidecomponents/EditAdmins.jsx","components/adminsidecomponents/AdminSearch.jsx","components/adminsidecomponents/UserSearch.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","actions","CREATE_PRODUCTS","EDIT_PRODUCTS","VIEW_PRODUCTS","DELETE_PRODUCTS","CREATE_RECIPES","EDIT_RECIPES","VIEW_RECIPES","DELETE_RECIPES","CREATE_ORDERS","EDIT_ORDERS","VIEW_ORDERS","DELETE_ORDERS","CREATE_DISCOUNT","EDIT_DISCOUNT","VIEW_DISCOUNT","DELETE_DISCOUNT","CREATE_ADMIN","EDIT_ADMIN","VIEW_ADMIN","DELETE_ADMIN","CREATE_USER","EDIT_USER","VIEW_USER","DELETE_USER","roles","ROOT_ADMIN","OPERATIONS","CONTENT","USER","perm","require","access","Map","set","user","action","JSON","parse","console","log","access_right","has","get","includes","Navigation","useState","newSearch","setNewSearch","setCartItems","useEffect","user_id","window","localStorage","getItem","fetch","then","res","json","err","length","catch","activeStyleNavbar","color","borderBottom","Navbar","className","sticky","Brand","to","activeStyle","textDecoration","Image","src","logo","Toggle","Collapse","id","Nav","Row","Form","inline","Col","FormControl","onChange","e","target","value","type","placeholder","style","padding","Button","onClick","clear","location","href","Login","email","setEmail","password","setPassword","token","setToken","letValidate","setLetValidate","userInfo","setUserInfo","show","setShow","handleClose","cartItems","setItem","stringify","getSecretByEmail","sendEmail","from","subject","text","html","alert","data","method","headers","body","getCart","getCartItemByUserId","cart_id","addCart","insertId","Promise","resolve","reject","map","cartItem","letAdd","item","stock_id","updateCartItem","quantity","cartitem_id","addCartItem","removeItem","VerifyModal","Modal","onHide","Header","closeButton","Title","Body","Container","Footer","variant","fluid","md","span","offset","onSubmit","preventDefault","undefined","result","temp_secret_key","secret_key","jwttoken","Group","size","controlId","Label","Control","autoFocus","marginBottom","margin","paddingLeft","paddingRight","disabled","block","ProductCard","name","img","price","Card","Img","paddingBottom","Subtitle","parseFloat","toFixed","RecipeCard","desc","prep_time","cooking_time","backgroundColor","Homepage","products","recipes","getRecipeDetail","getIngredientDetail","links","names","textAlign","paddingTop","display","justifyContent","duration","pauseOnHover","width","alignItems","image","index","height","About","marginLeft","marginTop","Breadcrumb","Item","active","Table","bordered","ProductSidebar","pcat","psubcat","catArray","setCatArray","subcatArray","setSubcatArray","SidebarHeader","catObjIndex","catObj","catString","catArrayInner","pcat_name","replace","trim","split","join","toLowerCase","linkString","a","toUpperCase","Accordion","SidebarOption","catVal","subcatVal","subcatObjIndex","subcatObj","subcatString","subcatArrayInner","psubcat_name","b","flush","indexCat","eventKey","indexSubcat","pcat_id","Product","catId","setCatId","subcatId","setSubcatId","productUnderCategory","setProductUnderCategory","productUnderSubcategory","setProductUnderSubcategory","useLocation","history","useHistory","categoryStr","setCategoryStr","subcategoryStr","setSubcategoryStr","getProductByCategory","getProductBySubcategory","ProductCardMap","product_id","product_name","product_img","stock_price","stock_size","ProductCategoryCardMap","category","useParams","toString","getProductCategoryIdFromPath","product","ProductSubcategoryCardMap","subcategory","psubcat_id","CategoryBreadcrumb","SubcategoryBreadcrumb","exact","path","xs","lg","RecipeSidebar","rcat","categories","rcat_name","rcat_name2","rcat_id","Recipes","recipesByCategory","setRecipesByCategory","getRecipeByCategory","RecipeCardMap","recipeArray","recipe","visibility_start_date","visibility_end_date","today","Date","currentDate","getDate","currentMonth","getMonth","recipeMonthStart","parseInt","slice","recipeMonthEnd","recipeDateStart","recipeDateEnd","filter","recipe_id","recipe_img","recipe_name","recipe_desc","RecipeCategoryCardMap","catIdFrmPath","getRecipeCategoryIdFromPath","ProductDetails","addcart","setAddcart","itemQuantity","setItemQuantity","productStocks","setProductStocks","productCategory","setProductCategory","productSubCategory","setProductSubCategory","productName","setProductName","productImg","setProductImg","productDesc","setProductDesc","stockId","setStockId","stockPrice","setStockPrice","stockSize","setStockSize","catLink","setCatLink","subcatLink","setSubcatLink","cartId","getProductStockById","setCategoryLink","setSubcategoryLink","product_desc","addtoCart","push","AddLocal","savedItems","i","SubcatBreadcrumb","nilTest","RegExp","test","BreadcrumbItem","DropdownButton","title","productStock","Dropdown","RecipeDetailsRow","ingredientProd","onToggle","imgstyle","checked","swapped","setSwapped","ingredients","setIngredients","recipeItems","ingredient_name","Check","defaultChecked","ingredientprod_id","ingredient_id","handleCheck","ingredient","swap","setStates","RecipeDetails","setRecipeDetail","ingredientProds","setIngredientProds","unsoldIngredients","setUnsoldIngredients","recipeCategory","setRecipeCategory","steps","setSteps","getIngredientsbyRecipeId","getRecipeById","getRecipeCategoryById","getUnsoldIngredientsRecipeId","getIngredientProductStockByRecipeId","output","arr","ingredientProduct","recipe_step","categoryName","newitem","addAllItems","savedItem","addToCart","optional","ingredient_qty","flexDirection","step","Array","isArray","unsoldIngredient","UserOrderRow","sn","invoice","cdate","total","number","customer","status","ddate","AccountDetails","oldPassword","setOldPassword","newPassword","setNewPassword","cfmNewPassword","setCfmNewPassword","address","setAddress","postalCode","setPostalCode","unitNo","setUnitNo","firstName","setFirstName","lastName","setLastName","pContactNo","setPContactNo","sContactNo","setSContactNo","editPassword","setEditPassword","editEmail","setEditEmail","editAddress","setEditAddress","editPostalCode","setEditPostalCode","editUnitNo","setEditUnitNo","editFirstName","setEditFirstName","editLastName","setEditLastName","editPContactNo","setEditPContactNo","editSContactNo","setEditSContactNo","getUserById","first_name","last_name","postal_code","pcontact_no","scontact_no","unit_no","reload","ConfirmSubmitPopup","close","plaintext","readOnly","forEach","bool","marginRight","modal","closeOnDocumentClick","trigger","open","required","OrderHistory","orderHistory","setOrderHistory","orderItems","setOrderItems","getOrderHistByUserId","authorization","order","getOrderItemByOrderId","order_id","striped","hover","orders","invoice_id","created_at","toUTCString","substring","total_amount","delivery_date","delivery_time_range","UserAccountDetails","ShoppingCartRow","cartitem","updateSummary","itemNo","setItemNo","setCartItem","deleteCartItembyId","splice","lengthOfCartItems","ConfirmDeletePopup","alt","minusFromSession","newCartItem","addToSession","ShoppingCart","subTotal","setSubTotal","subtotal","cart","useCallback","Number","speakeasy","RegisterPage","newPass","setNewPass","cfmPass","setCfmPass","letVerify","setLetVerify","tempSecret","setTempSecret","verified","setVerified","newPassInputText","setNewPassInputText","cfmPassInputText","setCfmPassInputText","lengthFailText","setLengthFailText","minimumOneSmallLetterFailText","setMinimumOneSmallLetterFailText","minimumOneBigLetterFailText","setMinimumOneBigLetterFailText","minimumOneNumberFailText","setMinimumOneNumberFailText","minimumOneSpecialCharacterFailText","setMinimumOneSpecialCharacterFailText","nonAllowedSpecialCharacterFoundText","setNonAllowedSpecialCharacterFoundText","newPassMainRegexFail","setNewPassMainRegexFail","passwordValidateBoolean","setPasswordValidateBoolean","registerUser","mainPasswordRegEx","allowedSpecialCharactersRegEx","nonAlphaNumericRegEx","nonNumberRegEx","smallLetterRegEx","bigLetterRegEx","smallLetterArray","bigLetterArray","numberArray","specialCharacterArray","specialAllowedCharacterArray","inputString","inputStringArray","passwordInitialValidation","txt","specialCharacterRegEx","arrayCharacter","inputFailRegEx","validateNewPassword","checkUserEmail","generateSecret","base32","maxLength","UserDetailSidebar","pathname","PaypalButton","orderInfo","paypalRef","useRef","orderInsert","deleteCartbyUserId","createOrder","createOrderItem","jsonCartItems","paypal","Buttons","create","intent","purchase_units","onApprove","capture","orderData","orderID","toISOString","substr","amount","shipping_address","unit","items","itemData","item_price","userResult","toDateString","jsonCartItem","onError","render","current","ref","Payment","pay","setPay","startDate","setStartDate","unitnum","setUnitnum","postcode","setPostcode","time","setTime","setItems","setDisplay","totalAmt","setTotalAmt","discount","setDiscount","discountCode","setDiscountCode","setOrder","setOrderInfo","x","unit_amount","currency_code","description","currency","breakdown","item_total","shipping","selected","date","discount_amount","Search","setProducts","setRecipes","productSearch","setProductSearch","recipeSearch","setRecipeSearch","productActive","setProductActive","recipeActive","setRecipeActive","search","searchProduct","searchRecipe","SearchedProducts","SearchedRecipes","SuccessfulOrder","setTotal","setDate","AdminLogin","adminInfo","setAdminInfo","admin_id","AdminProductDetails","setProductDescription","setProductImage","imgname","setImgName","stock_sizes","setStockSizes","stock_prices","setStockPrices","productCategories","setProductCategories","productSubCategories","setProductSubCategories","getAllProductCategories","as","accept","file","content","fileUrl","EditProducts","edit","setEdit","stock","setStock","newPrice","setNewPrice","newSize","setNewSize","setProductCategoryName","setProductSubCategoryName","getProductById","getAllProductSubCategories","getProductCategorybyId","getProductSubCategorybyId","editName","setEditName","editDescription","setEditDescription","setEditCategory","setEditSubcategory","editImage","setEditImage","admin_name","defaultValue","label","colspan","ProductCardAdmin","deleteFunction","AdminProductsHomepage","setSearch","deleteProductbyId","EditProductCategories","add","setAdd","newCategory","setNewCategory","newSubCategory","setNewSubCategory","productSubcategory","setProductSubcategory","CustomToggle","children","decoratedOnClick","useAccordionButton","clasName","ListGroupItem","ListGroup","ProductSearch","getProductDetail","onSearch","AdminProducts","productsSearch","setProductsSearch","RecipeCardAdmin","Text","AdminRecipeDetails","setRecipeName","setPrepTime","setCookingTime","setRecipeDescription","recipe_img_url","setRecipeImage","setRecipeStep","visibility","setVisibility","setVisibilityStart","setVisibilityEnd","setInsertId","recipeCategories","setRecipeCategories","getAllRecipeCategories","createRecipe","rows","EditRecipes","setVisibilityStartDate","setVisibilityEndDate","setRecipeCategoryName","getRecipeCategoryByid","editPrepTime","setEditPrepTime","editCookingTime","setEditCookingTime","editSteps","setEditSteps","editVisibility","setEditVisibility","editStart","setEditStart","editEnd","setEditEnd","RecipeSearch","AdminRecipeDetails2","setProduct","setProductId","click","setClick","setIngredientName","setIngredientQty","setSwap","setOptional","setIngredientId","next","setNext","getIngredientbyRecipeId","EditRecipeCategoriesRow","editCat","setEditCat","catName","setCatName","updateRecipeCategoryById","deleteRecipeCategorybyId","EditRecipeCategories","addRecipeCategory","EditRecipes2Row","qty","EditRecipes2","EditIngredientProd","setRecipeId","ingredientprod","setIngredientprod","getIngredientProdbyIngredientId","getIngredientbyIngredientId","updateIngredientbyId","AdminRecipesHomepage","AdminRecipes","recipeDetail","recipesSearch","setRecipesSearch","AdminOrderRow","AdminOrders","setOrders","EditAdminProfile","setCurrentPass","ConfirmPopup","updateAdminPasswordbyId","goBack","AdminProfile","admin","setAdmin","getAdminbyId","ManageAdminRow","admins","getAdminDetail","ManageAdmins","ManageUserRow","pcontact","scontact","code","ManageUsers","users","ManageDiscountCodeRow","discount_id","discount_name","discount_code","ManageDiscountCode","discounts","setDiscounts","getDiscounts","deleteBtn","AddAdmin","accessRight","setAccessRight","addAdmin","AddDiscount","setDiscountName","setDiscountAmount","setDiscountBoolean","addDiscount","validAmount","amountValueString","discountAmountValidation","htmlFor","CreatePasswordAdmin","AdminOrderDetails","setDeliveryDate","updateOrderByOrderId","getOrderNamebyOrderId","orderItem","EditDiscountDetails","getDiscountById","editCode","setEditCode","editAmount","setEditAmount","checkAccess","AdminSidebar","EditAdmins","AdminSearch","setAdmins","searchAdmin","UserSearch","setUsers","searchUser","App","setOrderDetail","setProductStock","getUserRecentOrder","getAdmins","getAllProducts","getAllProductStock","getAllRecipes","AdminRoutes","UserRoutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cec00137.chunk.js","sourcesContent":["const actions = {\r\n    //Products actions\r\n    CREATE_PRODUCTS: \"CREATE_PRODUCTS\",\r\n    EDIT_PRODUCTS: \"EDIT_PRODUCTS\",\r\n    VIEW_PRODUCTS: \"VIEW_PRODUCTS\",\r\n    DELETE_PRODUCTS: \"DELETE_PRODUCTS\",\r\n\r\n    //Recipes actions\r\n    CREATE_RECIPES: \"CREATE_RECIPES\",\r\n    EDIT_RECIPES: \"EDIT_RECIPES\",\r\n    VIEW_RECIPES: \"VIEW_RECIPES\",\r\n    DELETE_RECIPES: \"DELETE_RECIPES\",\r\n\r\n    //Orders actions\r\n    CREATE_ORDERS: \"CREATE_ORDERS\",\r\n    EDIT_ORDERS: \"EDIT_ORDERS\",\r\n    VIEW_ORDERS: \"VIEW_ORDERS\",\r\n    DELETE_ORDERS: \"DELETE_ORDERS\",\r\n\r\n    //Discount actions\r\n    CREATE_DISCOUNT: \"CREATE_DISCOUNT\",\r\n    EDIT_DISCOUNT: \"EDIT_DISCOUNT\",\r\n    VIEW_DISCOUNT: \"VIEW_DISCOUNT\",\r\n    DELETE_DISCOUNT: \"DELETE_DISCOUNT\",\r\n\r\n    //Admin actions\r\n    CREATE_ADMIN: \"CREATE_ADMIN\",\r\n    EDIT_ADMIN: \"EDIT_ADMIN\",\r\n    VIEW_ADMIN: \"VIEW_ADMIN\",\r\n    DELETE_ADMIN: \"DELETE_ADMIN\",\r\n\r\n    //User actions\r\n    CREATE_USER: \"CREATE_USER\",\r\n    EDIT_USER: \"EDIT_USER\",\r\n    VIEW_USER: \"VIEW_USER\",\r\n    DELETE_USER: \"DELETE_USER\",\r\n}\r\n\r\nconst roles = {\r\n    ROOT_ADMIN: \"ROOT_ADMIN\",\r\n    OPERATIONS: \"OPERATIONS\",\r\n    CONTENT: \"CONTENT\",\r\n    USER: \"USER\",\r\n};\r\n\r\nmodule.exports =  { actions, roles }\r\n\r\n/*\r\ncreate user\r\n- name\r\n- position\r\n\r\npreset role\r\n- operations\r\n    - track order\r\n    - track sales\r\n    - mostly order related things\r\n    - if possible(see shopping cart? + follow up)\r\n\r\n- content\r\n    - product updates\r\n    - inventory updates\r\n    - price update\r\n    - images\r\n*/","const perm = require('./roles')\r\nconst roles = perm.roles\r\nconst actions = perm.actions\r\nconst access = new Map();\r\n\r\n//Products access\r\naccess.set(actions.VIEW_PRODUCTS, [roles.ROOT_ADMIN, roles.OPERATIONS, roles.CONTENT, roles.USER])\r\naccess.set(actions.CREATE_PRODUCTS, [roles.ROOT_ADMIN, roles.CONTENT])\r\naccess.set(actions.EDIT_PRODUCTS, [roles.ROOT_ADMIN, roles.CONTENT])\r\naccess.set(actions.DELETE_PRODUCTS, [roles.ROOT_ADMIN, roles.CONTENT])\r\n\r\n//Recipes access\r\naccess.set(actions.VIEW_RECIPES, [roles.ROOT_ADMIN, roles.OPERATIONS, roles.CONTENT, roles.USER])\r\naccess.set(actions.CREATE_RECIPES, [roles.ROOT_ADMIN, roles.CONTENT])\r\naccess.set(actions.EDIT_RECIPES, [roles.ROOT_ADMIN, roles.CONTENT])\r\naccess.set(actions.DELETE_RECIPES, [roles.ROOT_ADMIN, roles.CONTENT])\r\n\r\n//Orders access\r\naccess.set(actions.VIEW_ORDERS, [roles.ROOT_ADMIN, roles.OPERATIONS])\r\naccess.set(actions.EDIT_ORDERS, [roles.ROOT_ADMIN, roles.OPERATIONS])\r\naccess.set(actions.DELETE_ORDERS, [roles.ROOT_ADMIN, roles.OPERATIONS])\r\n\r\n//Discount access\r\naccess.set(actions.VIEW_DISCOUNT, [roles.ROOT_ADMIN, roles.OPERATIONS])\r\naccess.set(actions.CREATE_DISCOUNT, [roles.ROOT_ADMIN, roles.OPERATIONS])\r\naccess.set(actions.EDIT_DISCOUNT, [roles.ROOT_ADMIN, roles.OPERATIONS])\r\naccess.set(actions.DELETE_DISCOUNT, [roles.ROOT_ADMIN, roles.OPERATIONS])\r\n\r\n//Admin access\r\naccess.set(actions.VIEW_ADMIN, [roles.ROOT_ADMIN])\r\naccess.set(actions.CREATE_ADMIN, [roles.ROOT_ADMIN])\r\naccess.set(actions.EDIT_ADMIN, [roles.ROOT_ADMIN])\r\naccess.set(actions.DELETE_ADMIN, [roles.ROOT_ADMIN])\r\n\r\n//User access\r\naccess.set(actions.VIEW_USER, [roles.ROOT_ADMIN])\r\naccess.set(actions.CREATE_USER, [roles.ROOT_ADMIN])\r\naccess.set(actions.EDIT_USER, [roles.ROOT_ADMIN])\r\naccess.set(actions.DELETE_USER, [roles.ROOT_ADMIN])\r\n\r\nfunction checkAccess(user, action) {\r\n    //console.log(user)\r\n    //console.log(typeof user)\r\n    user = JSON.parse(user)\r\n    console.log(user.access_right)\r\n    console.log(action)\r\n\r\n    if (!user?.access_right) {\r\n        console.log(\"a\")\r\n        return false;\r\n    }\r\n    if (access.has(action)) {\r\n        console.log(\"b\")\r\n        return access.get(action).includes(user.access_right);\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nmodule.exports = checkAccess","export default __webpack_public_path__ + \"static/media/logo2.4ef890c9.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Nav, Navbar, Row, Col, Button, Form, FormControl, Image } from 'react-bootstrap';\r\nimport '../css/navbar.css';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Cart, PersonCircle } from 'react-bootstrap-icons';\r\nimport logo from '../img/logo2.png';\r\n\r\nfunction Navigation() {\r\n    const [newSearch, setNewSearch] = useState(\"\")\r\n    const [cartItems, setCartItems] = useState(0)\r\n\r\n    // const onSearch = () => {\r\n    //     search = newSearch\r\n    //     window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/search/\" + search\r\n    // }\r\n\r\n    const getCartItem = (user_id) => {\r\n        if (user_id === null) {\r\n            // alert('No user logged in')\r\n            if (window.localStorage.getItem('cartItems') != null) setCartItems(JSON.parse(window.localStorage.getItem('cartItems')).length)\r\n            return\r\n        }\r\n        fetch(`https://apibounwe.herokuapp.com/cartuser/${user_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                if(json.err == 'Cart items not found') {\r\n                    return\r\n                }\r\n                setCartItems(json.length)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCartItem(window.localStorage.getItem(\"user_id\"))\r\n    })\r\n    \r\n    const activeStyleNavbar = {\r\n        color: 'white',\r\n        borderBottom: '2px solid #FCA311',\r\n    }\r\n\r\n    const logout = () => {\r\n        window.localStorage.clear()\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/login'\r\n    }\r\n\r\n    return (\r\n        <Navbar className=\"navbar\" sticky=\"top\">\r\n            <Navbar.Brand className=\"navbar__brand\">\r\n                <NavLink\r\n                    className=\"navbar__link--image\"\r\n                    to=\"/home\"\r\n                    activeStyle={{\r\n                        color: 'white',\r\n                        textDecoration: 'none'\r\n                    }}>\r\n                    <Image src={logo} className=\"navbar__logo\" />\r\n                </NavLink>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse className=\"navbar__collapse\" id=\"responsive-navbar-nav\">\r\n                <Nav className=\"navbar__nav mr-auto\">\r\n                    <NavLink\r\n                        className=\"navbar__link\"\r\n                        to=\"/products\"\r\n                        activeStyle={\r\n                            activeStyleNavbar\r\n                        }\r\n                    >\r\n                        Products\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className=\"navbar__link\"\r\n                        to=\"/recipes\"\r\n                        activeStyle={\r\n                            activeStyleNavbar\r\n                        }\r\n                    >\r\n                        Recipes\r\n                    </NavLink>\r\n                    <NavLink\r\n                        className=\"navbar__link\"\r\n                        to=\"/aboutus\"\r\n                        activeStyle={\r\n                            activeStyleNavbar\r\n                        }\r\n                    >\r\n                        About Us\r\n                    </NavLink>\r\n                    {localStorage.getItem('access_right') != null ?\r\n                        <NavLink\r\n                            className=\"navbar__link\"\r\n                            to=\"/adminprofile\"\r\n                            activeStyle={{\r\n                                activeStyleNavbar\r\n                            }}\r\n                        >\r\n                            Switch to Admin Side (Only for Admins)\r\n                        </NavLink>\r\n                        : null\r\n                    }\r\n                    <Row className=\"navbar__row\">\r\n                        <Form className=\"navbar__form\" inline>\r\n                            <Row className=\"navbar__form-row\">\r\n                                <Col className=\"navbar__form-col\">\r\n                                    <FormControl onChange={(e) => setNewSearch(e.target.value)} type=\"text\" className=\"navbar__searchbar\"\r\n                                        placeholder=\"Search\" value={newSearch} />\r\n                                </Col>\r\n                                <Col className=\"navbar__form-col navbar__form-col--button\" style={{ padding: 0 }}>\r\n                                    <Link to={`/search/${newSearch}`}><Button className=\"navbar__button\" type=\"submit\">Search</Button></Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        {localStorage.getItem('access_right') == null ?\r\n                            <span className=\"user-span__padding\"></span>\r\n                            : null\r\n                        }\r\n                        <Row className=\"navbar__end-row\">\r\n                            <Link className=\"navbar__icon-link\" to=\"/shoppingcart\">\r\n                                <span className=\"navbar__icon-span\">\r\n                                    <Cart className=\"navbar__icon\" />\r\n                                    {/* {cartItems != 0 ? <h6 className=\"navbar__icon-indicator\">{cartItems}</h6> : null} */}\r\n                                </span>\r\n                            </Link>\r\n                            {window.localStorage.getItem(\"user_id\") == null ?\r\n                                null :\r\n                                <Link className=\"navbar__icon-link\" to=\"/useraccountdetails/accountdetails\">\r\n                                    <span className=\"navbar__icon-span\">\r\n                                        <PersonCircle className=\"navbar__icon\" />\r\n                                    </span>\r\n                                </Link>\r\n                            }\r\n                            {window.localStorage.getItem(\"user_id\") == null ?\r\n                                <Link to=\"/login\">\r\n                                    <Button className=\"navbar__button\">\r\n                                        Login | Sign Up\r\n                                    </Button>\r\n                                </Link> : <Link to=\"/login\">\r\n                                    <Button className=\"navbar__button\" onClick={() => logout()}>\r\n                                        Logout\r\n                                    </Button>\r\n                                </Link>}\r\n                        </Row>\r\n                        {/* <Col className=\"navbar__form-icon-col\">\r\n                            <Link className=\"navbar__icon-link\" to=\"/shoppingcart\">\r\n                                <span className=\"navbar__icon-span\">\r\n                                    <Cart className=\"navbar__icon\"/>\r\n                                </span>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col className=\"navbar__form-icon-col\">\r\n                            <Link className=\"navbar__icon-link\" to=\"/useraccountdetails/accountdetails\">\r\n                                <span className=\"navbar__icon-span\">\r\n                                    <PersonCircle className=\"navbar__icon\" />\r\n                                </span>\r\n                            </Link>\r\n                        </Col> */}\r\n                        {/* <Link className=\"navbar__icon-link\" to=\"/shoppingcart\">\r\n                            <span className=\"navbar__icon-span\">\r\n                                <Cart className=\"navbar__icon\"/>\r\n                            </span>\r\n                        </Link>\r\n                        <Link className=\"navbar__icon-link\" to=\"/useraccountdetails/accountdetails\">\r\n                            <span className=\"navbar__icon-span\">\r\n                                <PersonCircle className=\"navbar__icon\" />\r\n                            </span>\r\n                        </Link> */}\r\n                    </Row>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n\r\n\r\n        // <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\r\n        // <Navbar.Brand ><Link className=\"brand\" to=\"/\">Ninemars Enterprise</Link></Navbar.Brand>\r\n        // <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        // <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        //     <Nav className=\"mr-auto\">\r\n        //     <Form inline>\r\n        //         <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n        //     </Form>\r\n        //     <Button>Manage Categories</Button>\r\n        //     <Link to=\"/login\"><Button>Add Products</Button></Link>\r\n        // </Navbar.Collapse>\r\n        // </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Container, Row, Col, Modal } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\nimport '../css/login.css';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n\r\n    const [letValidate, setLetValidate] = useState(false)\r\n\r\n    const [userInfo, setUserInfo] = useState({})\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    let cartItems = JSON.parse(window.localStorage.getItem('cartItems'))\r\n    if (cartItems === null) localStorage.setItem('cartItems', JSON.stringify([]))\r\n    const validateForm = () => {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    //Login with email and password\r\n    const login = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/userLogin`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                //If email of password is wrong\r\n                if (json.err != undefined) {\r\n                    alert(json.err)\r\n                    return\r\n                }\r\n                // alert(JSON.stringify(json))\r\n                //Store the user's information in userInfo state\r\n                setUserInfo({\r\n                    user_id: json.result[0].user_id, email: json.result[0].email,\r\n                    temp_secret_key: json.result[0].temp_secret_key, secret_key: json.result[0].secret_key,\r\n                    jwttoken: json.jwttoken\r\n                })\r\n                //Call the function to generate a 6 digit token\r\n                getSecretByEmail(json.result[0].email)\r\n                setLetValidate(true)\r\n            }).catch((err) => {\r\n                alert(`Error at login: ${err}`);\r\n            });\r\n    }\r\n\r\n    //Generate a 6 digit token using the email\r\n    const getSecretByEmail = (email) => {\r\n        fetch(`https://apibounwe.herokuapp.com/userToken/${email}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                //Call the function to send the 6 digit token to user, uncomment when you need to use\r\n                sendEmail({\r\n                    from: 'eugenekeezl20.19@ichat.sp.edu.sg', to: email,\r\n                    subject: 'Sending u a 6-digit token to validate', text: JSON.stringify(json),\r\n                    html: `<h3><b>2 Factor Authentication token</b></h3>\r\n                    <p>Here's your 6-digit code to login to your account:</p>\r\n                    <p><b>${json.token}</b></p>\r\n                    <p>It will expire <b>5 minutes from now</b></p>`\r\n                })\r\n                // alert(JSON.stringify(json))\r\n            }).catch((err) => {\r\n                alert(`Error at getSecretByEmail: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //Send an email to the user(Currently only can send to emails that I verify in AWS SES cause still in sandbox,\r\n    //to send to anyone need finish doing and hosting the website to submit request to AWS for review)\r\n    const sendEmail = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/sendEmail`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                alert('An email has been sent to you')\r\n            }).catch((err) => {\r\n                alert(`Error at sendEmail(Login): ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //Validate the user's entered 6 digit token\r\n    const validateToken = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/userValidate`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                if (json) {\r\n                    setLetValidate(false)\r\n                    //Get cart by user id\r\n                    getCart(userInfo.user_id)\r\n                    window.localStorage.setItem(\"user_id\", userInfo.user_id)\r\n                    window.localStorage.setItem(\"jwttoken\", userInfo.jwttoken)\r\n                    return\r\n                }\r\n                alert(\"Incorrect 6-digit code\")\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //Get cart\r\n    const getCart = (user_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/cart/${user_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                if (json.err == \"User/Cart not found\") {\r\n                    // alert(json.err)\r\n                    //If there is no shopping cart for logged in user, create one\r\n                    addCart({ user_id: user_id })\r\n                    return\r\n                }\r\n                getCartItemByUserId(user_id)\r\n                window.localStorage.setItem('cartId', json[0].cart_id)\r\n            }).catch((err) => {\r\n                alert(`Error at getCart: ${err}`);\r\n            });\r\n    }\r\n\r\n    //Create cart if no cart is found for the logged in user\r\n    const addCart = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/cart`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                // alert(JSON.stringify(json))\r\n                window.localStorage.setItem('cartId', json.insertId)\r\n                window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/home'\r\n            }).catch((err) => {\r\n                alert(`Error at addCart: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //Get cart item by user id \r\n    const getCartItemByUserId = (user_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            if (user_id === null) {\r\n                return\r\n            }\r\n            fetch(`https://apibounwe.herokuapp.com/cartuser/${user_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // alert(JSON.stringify(json))\r\n                    if (json.err == \"Cart items not found\") {\r\n                        json = []\r\n                    }\r\n                    cartItems = JSON.parse(window.localStorage.getItem('cartItems'))\r\n                    if (cartItems.length == 0) {\r\n                        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/home'\r\n                    } else {\r\n                        cartItems.map((cartItem) => {\r\n                            let letAdd = true\r\n                            json.map((item) => {\r\n                                if (cartItem.stock_id == item.stock_id) {\r\n                                    updateCartItem({\r\n                                        stock_id: cartItem.stock_id, quantity: (cartItem.quantity + item.quantity),\r\n                                        cartitem_id: item.cartitem_id\r\n                                    })\r\n                                    letAdd = false\r\n                                }\r\n                            })\r\n                            if (letAdd) {\r\n                                addCartItem({ cart_id: localStorage.getItem('cartId'), stock_id: cartItem.stock_id, \r\n                                quantity: cartItem.quantity })\r\n                            }\r\n                        })\r\n                        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/home'\r\n                        localStorage.removeItem('cartItems')\r\n                    }\r\n                    resolve(json)\r\n                }).catch((err) => {\r\n                    alert(`Error at getCartItemByUser: ${err}`)\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n    }\r\n\r\n    const addCartItem = (data) => {\r\n        alert(JSON.stringify(data))\r\n        fetch(`https://apibounwe.herokuapp.com/cartitem`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => res.json())\r\n            .then((json) => {\r\n            }).catch((err) => {\r\n                alert(`Error at addCartItem: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n    const updateCartItem = (data) => {\r\n        alert(JSON.stringify(data))\r\n        fetch(`https://apibounwe.herokuapp.com/cartitem`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => res.json())\r\n            .then((json) => {\r\n            }).catch((err) => {\r\n                alert(`Error at updateCartItem: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        login({ email, password })\r\n    }\r\n\r\n    const VerifyModal = () => {\r\n        return (\r\n            <>\r\n\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal title</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container>\r\n\r\n                        </Container>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\">Understood</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className=\"user-container user-container--login\" fluid>\r\n            <Row className=\"user-row user-row--login--header\" className=\"user-row\">\r\n                <Col className=\"user-col user-col--login--header\" md={{span:4,offset:4}}>\r\n                    <span className=\"user-span__login user-span__login--header\">Login</span>\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"user-row\">\r\n                {/* <Col className=\"user-col-blank\">\r\n                </Col> */}\r\n                <Col className=\"user-col user-col--login\" md={{span:4,offset:4}}>\r\n                    <div className=\"user-card user-card--login\">\r\n                        <Form className=\"user-form user-form--login\" onSubmit={onSubmit}>\r\n                            <Form.Group className=\"user-form__input-container\" size=\"lg\" controlId=\"email\">\r\n                                <Form.Label className=\"user-form__label\">Email</Form.Label>\r\n                                <Form.Control\r\n                                    autoFocus\r\n                                    style={{marginBottom:'2vh'}} \r\n                                    className=\"user-form__input\"\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"user-form__input-container\" size=\"lg\" controlId=\"password\">\r\n                                <Form.Label className=\"user-form__label\">Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    className=\"user-form__input\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button style={{ margin:'5vh 7.5vw 3.5vh', paddingLeft:'3vw', paddingRight: '3vw'}} className=\"user-form__button user-form__button-login\" variant=\"success\" type=\"submit\" disabled={!validateForm()}>\r\n                                Login\r\n                            </Button>\r\n                            <br/>\r\n                            <Link style={{margin: '0 5.75vw'}} className=\"user-link user-link--login-register\" to=\"/register\">\r\n                                New User? Create Account\r\n                            </Link>\r\n                            {/* <Button variant=\"primary\" block size=\"lg\" onClick={handleShow}>\r\n                                Launch modal\r\n                            </Button> */}\r\n                            <VerifyModal />\r\n                            {letValidate ? <div>\r\n                                <Form.Group className=\"user-form__input-container\" size=\"lg\" controlId=\"text\">\r\n                                    <Form.Label className=\"user-form__label\">6-digit code</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        className=\"user-form__input\"\r\n                                        value={token}\r\n                                        onChange={(e) => setToken(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button className=\"user-form__button\" block size=\"lg\"\r\n                                    onClick={() => validateToken({\r\n                                        temp_secret_key: userInfo.temp_secret_key,\r\n                                        secret_key: userInfo.secret_key, token: token,\r\n                                        email: userInfo.email\r\n                                    })}>\r\n                                    Verify\r\n                                </Button>\r\n                            </div> : null}\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n                {/* <Col className=\"user-col-blank\">\r\n                </Col> */}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport { Card, Col } from 'react-bootstrap'\r\nimport '../css/itemcard.css'\r\n\r\nfunction ProductCard({ name, img, price, size }) {\r\n    return (\r\n            <Col style={{padding:0}} className=\"user-item-card__col\">\r\n                <Card className=\"user-item-card\">\r\n                    <Card.Img variant=\"top\" className=\"user-item-card__image\" src={img} />\r\n                    <Card.Body style={{paddingBottom: '0'}} className=\"user-item-card__body\">\r\n                        <Card.Title style={{marginBottom:'0'}} className=\"user-item-card__title\"><span className=\"user-item-card__span user-item-card__span--bold\">{name}</span></Card.Title>\r\n                    </Card.Body>\r\n                    <Card.Body className=\"user-item-card__body\">\r\n                        <Card.Subtitle className=\"user-item-card__subtitle\">${parseFloat(price).toFixed(2)} | {size}</Card.Subtitle>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React from 'react'\r\nimport { Card, Col } from 'react-bootstrap'\r\nimport '../css/itemcard.css'\r\n\r\nfunction RecipeCard({ img, name, desc, prep_time, cooking_time, id}) {    \r\n    return (\r\n        <Col style={{padding: '0'}} className=\"user-item-card__col\">\r\n            <Card style={{backgroundColor:'white'}} className=\"user-item-card\">\r\n                <Card.Img className=\"user-item-card__image\" variant=\"top\" src={img}/>\r\n                <Card.Body className=\"user-item-card__body\">\r\n                    <Card.Title style={{ marginBottom: '0'}} className=\"user-item-card__title\"><span className=\"user-item-card__span user-item-card__span--bold\">{name}</span></Card.Title>\r\n                    <Card.Subtitle className=\"user-item-card__subtitle user-item-card__subtitle--recipe\">Preparation Time: {prep_time}</Card.Subtitle>\r\n                    <Card.Subtitle className=\"user-item-card__subtitle user-item-card__subtitle--recipe\">Cooking Time: {cooking_time}</Card.Subtitle>\r\n                    <Card.Subtitle className=\"user-item-card__subtitle user-item-card__subtitle--recipe\">Serves 4 pax</Card.Subtitle>\r\n                    <Card.Subtitle className=\"user-item-card__subtitle user-item-card__subtitle--recipe\">{desc}</Card.Subtitle>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default RecipeCard;","import React from 'react'\r\nimport ProductCard from './ProductCard.jsx'\r\nimport RecipeCard from './RecipeCard.jsx'\r\nimport { Row, Container, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Slide } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css'\r\nimport '../css/homepage.css';\r\n\r\nconst Homepage = ({ products, recipes, getRecipeDetail, getIngredientDetail }) => {\r\n    let images = ['https://res.cloudinary.com/dptmkjeww/image/upload/v1630051304/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_vvmz44.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051328/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_1_eiaexe.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051354/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_2_hrxxbw.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051365/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_3_wvltyx.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051384/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_4_optdnr.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051399/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_5_ke2dww.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051411/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_6_mtxdc1.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051423/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_7_hy8deh.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051435/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_8_fydwxv.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051446/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_9_dgtd7i.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051486/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_10_zo0hbt.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051499/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_11_azxmgm.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051512/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_12_rwu569.jpg',\r\n        'https://res.cloudinary.com/dptmkjeww/image/upload/v1630051517/proposals/WhatsApp_Image_2021-08-27_at_15.23.10_13_pubflx.jpg']\r\n\r\n    let links = ['/productdetails/162', '/productdetails/15', '/productdetails/14', '/productdetails/36', '/productdetails/38',\r\n        '/productdetails/32', '/productdetails/6', '/productdetails/21', '/productdetails/164', '/productdetails/30', '/productdetails/12',\r\n        '/productdetails/20', '/productdetails/8', '/productdetails/10'];\r\n\r\n    let names = ['Black Pepper Seed', 'Black Chick Peas', `White Chick Peas`, 'Cinnamon Sticks', 'Cloves',\r\n        'Cummin Seed', 'Green Beans', 'Groundnuts', 'Motchai / Lab Lab Beans', 'Mustard Seeds', 'Masoor Dhall Split',\r\n        'Roasted Gram Dhall', 'Toor Dhall', 'Urid Whole Dhall']\r\n    return (\r\n        <Container>\r\n            <h3 style={{ textAlign: \"center\", paddingBottom: '30px', paddingTop: '10px' }}><b>Welcome to Ninemars</b></h3>\r\n            <div style={{display: 'block', justifyContent: 'center'}}>\r\n                <Slide duration={3000} pauseOnHover={false} style={{width: '70%', margin: 'auto', display: 'block', justifyContent: 'center', \r\n                                alignItems: 'center'}}>\r\n                    {images.map((image, index) => (\r\n                        <div className=\"each-slide\" >\r\n                            <Link to={links[index]}>\r\n                                <img src={image} style={{width: '100%'}} height={'550px'}/>\r\n                            </Link>\r\n                            <span className=\"user-span__homepage-slide\">{names[index]}</span>\r\n                        </div>\r\n                    ))}\r\n                </Slide>\r\n            </div>\r\n            {/* <Col xs={6}>\r\n                    <h2 className=\"user-header\">Today's special products</h2>\r\n                    <Row className=\"user-row\">\r\n                        {products.map((product) => (\r\n                            <Link to={\"/productdetails/\" + product.product_id}>\r\n                                <ProductCard key={product.product_id} name={product.product_name} img={product.product_img} />\r\n                            </Link>\r\n                        ))}\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <h2 className=\"user-header\">Today's special recipes</h2>\r\n                    <Row className=\"user-row\">\r\n                        {recipes.map((recipes) => (\r\n                            <RecipeCard key={recipes.recipe_id} id={recipes.recipe_id} img={recipes.recipe_img} name={recipes.recipe_name}\r\n                                desc={recipes.recipe_desc} prep_time={recipes.prep_time} cooking_time={recipes.cooking_time} getRecipeDetail={getRecipeDetail} getIngredientDetail={getIngredientDetail} />\r\n                        ))}\r\n                    </Row>\r\n                </Col> */}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react'\r\nimport { Row, Table, Container } from \"react-bootstrap\";\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport '../css/aboutus.css';\r\n\r\nconst About = () => {\r\n    return (\r\n        <Container style={{ marginLeft: '1.5vw', marginTop:'3.5vh'}} className=\"user-container user-container--text-color\" fluid>\r\n            <Row className=\"user-row\">\r\n                <Breadcrumb className=\"user-breadcrumb\">\r\n                    <Breadcrumb.Item className=\"user-breadcrumb__link\" href=\"/home\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item className=\"user-breadcrumb__link\" active>About Us</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row className=\"user-row\">\r\n                <Row className=\"user-inner-row\">\r\n                    <span className=\"user-header\">\r\n                        About Us\r\n                    </span>\r\n                </Row>\r\n                <Row className=\"user-inner-row user-inner-row--overflow\">\r\n                    <div className=\"user-inner-div\">\r\n                        <p className=\"user-text\">NINEMARS ENTERPRISE is an ACRA-registered entity that has been operating for\r\n                            2 years 2 months in Singapore since its incorporation year in 2019. Officially, NINEMARS ENTERPRISE PTE. LTD. is\r\n                            registered as Exempt Private Limited Company with its address in District 23 (Hillview, Dairy Farm, Bukit Panjang,\r\n                            Choa Chu Kang), primarily operates in the sector of \"WHOLESALE TRADE OF A VARIETY OF GOODS WITHOUT A\r\n                            DOMINANT PRODUCT\", SSIC code - 46900</p>\r\n                        <br/>\r\n                        <p className=\"user-text user-text--spacebtwn\">Previously, NINEMARS ENTERPRISE PTE. LTD. also operated under the name of ARANN FOOD PTE. LTD.</p>\r\n                        <br/>\r\n\r\n                        <p className=\"user-text user-text--spacebtwn\">The company appears to be exempted from statutory auditing requirements</p>\r\n\r\n                        <br/>\r\n                        <p className=\"user-text user-text--spacebtwn\">NINEMARS ENTERPRISE PTE. LTD. is a non-listed entity in the private market with no IPO filing</p>\r\n\r\n                        <br/>\r\n                        <p className=\"user-text user-text--spacebtwn\">As of 1 March 2020, the company is not involved in any litigation based on the public records of the Supreme Court of\r\n                            Singapore. This information is provided to the best of our research ability and we make no warranties over any data\r\n                            inaccuracies or omissions.</p>\r\n\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"user-inner-row\">\r\n                    <span className=\"user-header user-header--bottom-margin\">Contact Us</span>\r\n                    <br/>\r\n                    <Table className=\"user-table\" bordered>\r\n                        <tbody className=\"user-table__body\">\r\n                            <tr className=\"user-table__body-row\">\r\n                                <td className=\"user-table__body-data user-table__body-data--header\">Phone</td>\r\n                                <td className=\"user-table__body-data user-table__body-data--text\">+65 6873 0065</td>\r\n                            </tr>                        \r\n                            <tr className=\"user-table__body-row\">\r\n                                <td className=\"user-table__body-data user-table__body-data--header\">Address</td>\r\n                                <td className=\"user-table__body-data user-table__body-data--text\">1 BUKIT BATOK CRESCENT, #05-20, WCEGA PLAZA, Singapore 658064</td>\r\n                            </tr>                        \r\n                            <tr className=\"user-table__body-row\">\r\n                                <td className=\"user-table__body-data user-table__body-data--header\">Postal District</td>\r\n                                <td className=\"user-table__body-data user-table__body-data--text\">District 23 (Hillview, Dairy Farm, Bukit Panjang, Choa Chu Kang)</td>\r\n                            </tr>                        \r\n                        </tbody>\r\n                    </Table>\r\n\r\n                </Row>              \r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, {useState,useEffect} from 'react'\r\nimport {Accordion} from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../css/sidebar.css'\r\n\r\nfunction ProductSidebar({pcat,psubcat}) {\r\n    const [catArray,setCatArray]=useState(pcat);\r\n    const [subcatArray,setSubcatArray]=useState(psubcat);\r\n    \r\n    const activeStyleNavbar =  {\r\n        color: 'HSL(154, 64%, 98%)'\r\n    }\r\n    const activeStyleSubcatNavbar =  {\r\n        color: 'HSL(154, 64%, 98%)'\r\n    }\r\n    \r\n    function linkifyStringArrayCat(){\r\n        catArray.map((catObj,index)=>{\r\n            var catString = '';\r\n            var catArrayInner = [];\r\n            catArrayInner = catArray;\r\n            //take name and cut whitespace and make everything lowercase\r\n            catString = catObj.pcat_name;\r\n            catObj.pcat_name = catString.replace(/\\s+/g, ' ').trim()\r\n            catString = catString.split(' ').join('');\r\n            catString = catString.toLowerCase();\r\n    \r\n            catString = catString.replace(/[^a-zA-Z ]/g, \"\")\r\n            catArrayInner[index].linkString=catString\r\n            setCatArray(catArrayInner)\r\n            //take that value and append to object under a new key \"linkifyString\"      \r\n        })     \r\n    }\r\n    \r\n    function linkifyStringArraySubcat(){\r\n        subcatArray.map((subcatObj,index)=>{\r\n            var subcatString = ''; \r\n            var subcatArrayInner = [];\r\n            subcatArrayInner = subcatArray;\r\n\r\n            //take name and cut whitespace and make everything lowercase (also trim out any unwanted spaces)\r\n            subcatString = subcatObj.psubcat_name;\r\n            subcatObj.psubcat_name = subcatString.replace(/\\s+/g, ' ').trim()\r\n            subcatString = subcatString.split(' ').join('');\r\n            subcatString = subcatString.toLowerCase();\r\n            subcatString = subcatString.replace(/[^a-zA-Z ]/g, \"\")\r\n            subcatArrayInner[index].linkString=subcatString\r\n            setSubcatArray(subcatArrayInner)\r\n\r\n            //take that value and append to object under a new key \"linkifyString\"        \r\n        })        \r\n    }\r\n    \r\n    const SidebarHeader = ({catObjIndex}) =>{\r\n        linkifyStringArrayCat()\r\n        let a = catArray[catObjIndex].pcat_name\r\n        a = a.split('')\r\n        a[0] = a[0].toUpperCase()\r\n        a = a.join('')\r\n        return(\r\n            <>\r\n                <Link \r\n                    activeStyle={activeStyleNavbar} \r\n                    to={`/products/${catArray[catObjIndex].linkString}`}>\r\n                        <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                            <div className=\"sidebar__header-card sidebar__header-card--inactive\"><span className=\"sidebar__header-card-span\">{a}</span></div>\r\n                        </Accordion.Header>\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n    \r\n    const SidebarOption = ({catVal,subcatVal,catObjIndex,subcatObjIndex}) =>{\r\n        linkifyStringArraySubcat()\r\n        let b = subcatArray[subcatObjIndex].psubcat_name\r\n        b = b.split('')\r\n        b[0] = b[0].toUpperCase()\r\n        b = b.join('')\r\n        if(catVal===subcatVal){\r\n            return(\r\n                <Link \r\n                activeStyle={activeStyleNavbar} \r\n                to={`/products/${catArray[catObjIndex].linkString}/${subcatArray[subcatObjIndex].linkString}`}>                    \r\n                    <Accordion.Body className=\"sidebar__body\">\r\n                        <div className=\"sidebar__body-card\">{b}</div>\r\n                    </Accordion.Body>\r\n                </Link>\r\n            )\r\n        } else{\r\n            return null\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Accordion className=\"sidebar\" flush>\r\n                {catArray.map((catObj,indexCat)=>(\r\n                    <Accordion.Item  className=\"sidebar__item\" eventKey={indexCat}>\r\n                        <SidebarHeader catObjIndex={indexCat}/>\r\n                        {subcatArray.map((subcatObj,indexSubcat) => (\r\n                            !subcatObj.psubcat_name.includes('nil') ? \r\n                            <SidebarOption catVal={catObj.pcat_id} subcatVal={subcatObj.pcat_id} catObjIndex={indexCat} subcatObjIndex={indexSubcat}/>\r\n                            : null\r\n                            ))}             \r\n                    </Accordion.Item>             \r\n                ))\r\n                }   \r\n            </Accordion>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductSidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProductCard from './ProductCard.jsx';\r\nimport { Row, Container, Col } from 'react-bootstrap';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport { Link, Switch, Route, useParams, useLocation, useHistory } from 'react-router-dom';\r\nimport ProductSidebar from './ProductSidebar';\r\nimport '../css/itemcard.css'\r\n\r\nexport default function Product({ products, pcat, psubcat }) {\r\n    const [catArray, setCatArray] = useState(pcat);\r\n    const [subcatArray, setSubcatArray] = useState(psubcat);\r\n\r\n    const [catId, setCatId] = useState('');\r\n    const [subcatId, setSubcatId] = useState('');\r\n\r\n    const [productUnderCategory, setProductUnderCategory] = useState([])\r\n    const [productUnderSubcategory, setProductUnderSubcategory] = useState([])\r\n\r\n    let location = useLocation();\r\n    let history = useHistory(); \r\n\r\n    console.log(`Location: ${JSON.stringify(location)}`);\r\n    console.log(`History: ${JSON.stringify(history)}`)\r\n    \r\n\r\n    const [categoryStr, setCategoryStr] = useState('')\r\n    const [subcategoryStr, setSubcategoryStr] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log(\"here\")\r\n        if (catId != '') {\r\n            setProductUnderCategory([])\r\n            getProductByCategory(catId)\r\n        }\r\n    }, [catId])\r\n    useEffect(() => {\r\n        setProductUnderCategory([])\r\n        setProductUnderSubcategory([])\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"here again\")\r\n        console.log((subcatId != '') && (catId != ''))\r\n        if ((subcatId != '') && (catId != '')) {\r\n            setProductUnderSubcategory([])\r\n            getProductBySubcategory(subcatId)\r\n        }\r\n    }, [subcatId, catId])\r\n\r\n    const getProductByCategory = (id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/productbycategory/${id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setProductUnderCategory(json)\r\n                console.log('Product Cat')\r\n                console.log(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getProductBySubcategory = (id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/productbysubcategory/${id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setProductUnderSubcategory(json)\r\n                console.log('Product subcat')\r\n                console.log(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getProductCategoryIdFromPath = (category) => {\r\n        catArray.map((catObj, index) => {\r\n            var catString = '';\r\n            var catArrayInner = [];\r\n            catArrayInner = catArray;\r\n\r\n            catString = catObj.pcat_name;\r\n            catObj.pcat_name = catString.replace(/\\s+/g, ' ').trim()\r\n            catString = catString.split(' ').join('');\r\n            catString = catString.toLowerCase();\r\n\r\n            catString = catString.replace(/[^a-zA-Z ]/g, \"\")\r\n            if (catString === categoryStr && categoryStr === category) {\r\n                console.log(`Success cat! ${index} `)\r\n                setCatId(catObj.pcat_id)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getProductSubcategoryIdFromPath = () => {\r\n        catArray.map((catObj, index) => {\r\n            var catString = '';\r\n\r\n            catString = catObj.pcat_name;\r\n            catObj.pcat_name = catString.replace(/\\s+/g, ' ').trim()\r\n            catString = catString.split(' ').join('');\r\n            catString = catString.toLowerCase();\r\n\r\n            catString = catString.replace(/[^a-zA-Z ]/g, \"\")\r\n            subcatArray.map((subcatObj, index) => {\r\n                var subcatString = '';\r\n\r\n                subcatString = subcatObj.psubcat_name;\r\n                subcatObj.psubcat_name = subcatString.replace(/\\s+/g, ' ').trim()\r\n                subcatString = subcatString.split(' ').join('');\r\n                subcatString = subcatString.toLowerCase();\r\n\r\n                subcatString = subcatString.replace(/[^a-zA-Z ]/g, \"\");\r\n\r\n                if ((catString === categoryStr) && (subcatString === subcategoryStr)) {\r\n                    console.log(`Success subcat! ${index} `)\r\n                    setCatId(subcatObj.pcat_id)\r\n                    setSubcatId(subcatObj.psubcat_id)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const ProductCardMap = () => {\r\n        return (\r\n            <>\r\n                {products.map((products) => (\r\n                    <Link className=\"user-item-card__link\" to={\"/productdetails/\" + products.product_id}>\r\n                        <ProductCard key={products.product_id} id={products.product_id} name={products.product_name}\r\n                            img={products.product_img} price={products.stock_price} size={products.stock_size} />\r\n                    </Link>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n    const ProductCategoryCardMap = () => {\r\n        let { category } = useParams();\r\n        console.log(`Category Path Start ${category}`);\r\n\r\n        if (!(category == null)) {\r\n            setCategoryStr(category.toString())\r\n            console.log(`Category String: ${categoryStr}`)\r\n        } else {\r\n            setCategoryStr('Empty')\r\n            console.log(`Category String: ${categoryStr}`)\r\n        }\r\n\r\n        getProductCategoryIdFromPath(category)\r\n\r\n        console.log(\"hi\" + productUnderCategory.length);\r\n        if(productUnderCategory.length !== 0){\r\n            return (\r\n                <>\r\n                    {productUnderCategory.map((product) => (\r\n                        <Link className=\"user-item-card__link\" to={\"/productdetails/\" + product.product_id}>\r\n                            <ProductCard key={product.product_id} id={product.product_id} name={product.product_name}\r\n                                img={product.product_img} price={product.stock_price} size={product.stock_size} />\r\n                        </Link>\r\n                    ))\r\n                    }\r\n                </>\r\n    \r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <h1>No product in {category} category</h1>\r\n                </>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    const ProductSubcategoryCardMap = () => {\r\n        let { category } = useParams();\r\n        let { subcategory } = useParams();\r\n\r\n        console.log(`Category Path Start ${category}`);\r\n        console.log(`Subcategory Path Start ${subcategory}`);\r\n\r\n        if (!(category == null)) {\r\n            setCategoryStr(category.toString())\r\n            console.log(`Category String: ${categoryStr}`)\r\n        } else {\r\n            setCategoryStr('Empty')\r\n            console.log(`Category String: ${categoryStr}`)\r\n        }\r\n\r\n        if (!(subcategory == null)) {\r\n            setSubcategoryStr(subcategory.toString())\r\n            console.log(`Subcategory String: ${subcategoryStr}`)\r\n        } else {\r\n            setSubcategoryStr('Empty')\r\n            console.log(`Subcategory String: ${subcategoryStr}`)\r\n        }\r\n\r\n        getProductSubcategoryIdFromPath()\r\n\r\n        console.log(\"Product Under SubCategory\");\r\n        console.log(productUnderSubcategory);\r\n\r\n        if(productUnderSubcategory.length !== 0){\r\n            return (\r\n                <>\r\n                    {productUnderSubcategory.map((product, index) => (\r\n                        <Link className=\"user-item-card__link\" to={\"/productdetails/\" + product.product_id}>\r\n                            <ProductCard key={product.product_id} id={product.product_id} name={product.product_name}\r\n                                img={product.product_img} price={product.stock_price} size={product.stock_size} />\r\n                        </Link>\r\n                    ))}\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <h1>No product in {subcategory} subcategory</h1>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const CategoryBreadcrumb = () => {\r\n        let {category}= useParams();\r\n        let categoryStr = '/products/'+category\r\n        return(            \r\n            <Breadcrumb.Item className=\"user-breadcrumb-item\" href={categoryStr} >{category}</Breadcrumb.Item>\r\n        )\r\n    }\r\n\r\n    const SubcategoryBreadcrumb = () => {\r\n        let {subcategory}= useParams();\r\n        let {category}= useParams();\r\n        let subcategoryStr = '/products/'+category+'/'+subcategory\r\n        return(\r\n            <Breadcrumb.Item className=\"user-breadcrumb-item\" href={subcategoryStr} >{subcategory}</Breadcrumb.Item>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/products\">\r\n                <Col xs={2} id=\"sidebar-wrapper-user\">\r\n                    <ProductSidebar pcat={pcat} psubcat={psubcat} />\r\n                </Col>\r\n                <Col xs={10} id=\"page-content-wrapper\">\r\n                    <Container className=\"user-container\" fluid>\r\n                        <Row className=\"user-row\">\r\n                            <Breadcrumb className=\"user-breadcrumb\">\r\n                                <Breadcrumb.Item className=\"user-breadcrumb-item\" href=\"/home\">Home</Breadcrumb.Item>\r\n                                <Breadcrumb.Item className=\"user-breadcrumb-item\" href=\"/products\">Products</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                        </Row>\r\n                        <Row xs={3} md={4} lg={4} className=\"user-row user-row-grid\">\r\n                            <ProductCardMap />\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Route>\r\n            <Route exact path=\"/products/:category\">\r\n                <Col xs={2} id=\"sidebar-wrapper-user\">\r\n                    <ProductSidebar pcat={pcat} psubcat={psubcat} />\r\n                </Col>\r\n                <Col xs={10} id=\"page-content-wrapper\">\r\n                    <Container className=\"user-container\" fluid>\r\n                        <Row className=\"user-row\">\r\n                            <Breadcrumb className=\"user-breadcrumb\">\r\n                                <Breadcrumb.Item className=\"user-breadcrumb-item\" href=\"/home\">Home</Breadcrumb.Item>\r\n                                <Breadcrumb.Item className=\"user-breadcrumb-item\">Products</Breadcrumb.Item>\r\n                                <CategoryBreadcrumb/>\r\n                            </Breadcrumb>\r\n                        </Row>\r\n                        <Row xs={3} md={4} lg={4} className=\"user-row user-row-grid\">\r\n                            <ProductCategoryCardMap />\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Route>\r\n            <Route exact path=\"/products/:category/:subcategory\">\r\n                <Col xs={2} id=\"sidebar-wrapper-user\">\r\n                    <ProductSidebar pcat={pcat} psubcat={psubcat} />\r\n                </Col>\r\n                <Col xs={10} id=\"page-content-wrapper\">\r\n                    <Container className=\"user-container\" fluid>\r\n                        <Row className=\"user-row\">\r\n                            <Breadcrumb className=\"user-breadcrumb\">\r\n                                <Breadcrumb.Item className=\"user-breadcrumb-item\" href=\"/home\">Home</Breadcrumb.Item>\r\n                                <Breadcrumb.Item className=\"user-breadcrumb-item\">Products</Breadcrumb.Item>\r\n                                <CategoryBreadcrumb/>\r\n                                <SubcategoryBreadcrumb/>\r\n                            </Breadcrumb>\r\n                        </Row>\r\n                        <Row xs={3} md={4} lg={4} className=\"user-row user-row-grid\">\r\n                            <ProductSubcategoryCardMap />\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Accordion } from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport '../css/sidebar.css'\r\nimport { CaretDownFill, CaretUpFill } from 'react-bootstrap-icons'\r\n\r\n\r\nfunction RecipeSidebar(rcat) {\r\n    const [categories, setCategories] = useState(rcat.rcat);\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    const activeStyleNavbar = {\r\n        color: 'HSL(154, 64%, 98%)'\r\n    }\r\n\r\n    const SidebarHeader = ({ rcat_name, rcat_id }) => {\r\n        let rcat_name2 = rcat_name.split('')\r\n        rcat_name2[0] = rcat_name2[0].toUpperCase()\r\n        return (\r\n            <>\r\n                <Link\r\n                    activeStyle={activeStyleNavbar}\r\n                    to={`/recipes/${rcat_name}`}>\r\n                    <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                        <div className=\"sidebar__header-card sidebar__header-card--inactive\"><span className=\"sidebar__header-card-span\">{rcat_name2}</span></div>\r\n                    </Accordion.Header>\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Accordion className=\"sidebar\" flush>\r\n                {categories.map((category, index) => (\r\n                    <Accordion.Item className=\"sidebar__item\" eventKey={index}>\r\n                        <SidebarHeader rcat_name={category.rcat_name} rcat_id={category.rcat_id} />\r\n                    </Accordion.Item>\r\n                ))}\r\n            </Accordion>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeSidebar;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Container, Col } from 'react-bootstrap';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { Link, Switch, Route, useParams } from 'react-router-dom';\r\nimport RecipeSidebar from './RecipeSidebar';\r\nimport RecipeCard from './RecipeCard.jsx'\r\n\r\nexport default function Recipes({ recipes, rcat }) {\r\n    const [catArray, setCatArray] = useState(rcat);\r\n    const [catId, setCatId] = useState('');\r\n    const [recipesByCategory, setRecipesByCategory] = useState([])\r\n    useEffect(() => {\r\n        getRecipeByCategory(catId)\r\n    }, [catId])\r\n    const getRecipeByCategory = (id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/recipebycat/${id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setRecipesByCategory(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getRecipeCategoryIdFromPath = (category) => {\r\n        var catIdFrmPath;\r\n        console.log(catIdFrmPath);\r\n        if (catArray.length > 0) {\r\n            catArray.map((catObj, index) => {\r\n                var catString = '';\r\n                catString = catObj.rcat_name;\r\n                catObj.pcat_name = catString.replace(/\\s+/g, ' ').trim()\r\n                catString = catString.split(' ').join('');\r\n                catString = catString.toLowerCase();\r\n\r\n                catString = catString.replace(/[^a-zA-Z ]/g, \"\")\r\n                console.log(`catstring ${catString}`)\r\n                console.log(`category ${category.category.toLowerCase()}`)\r\n                if (catString == category.category.toLowerCase().replace(/\\s+/g, \"\")) {\r\n                    console.log(`Success cat! ${catObj.rcat_id} `)\r\n                    catIdFrmPath = catObj.rcat_id;\r\n                    console.log(`cat id from path ${catIdFrmPath} `)\r\n                } else {\r\n                    console.log('failure')\r\n                }\r\n            })\r\n        } else {\r\n            console.log(`No Categories`);\r\n        }\r\n\r\n        console.log(`cat id from path out ${catIdFrmPath} `)\r\n        return catIdFrmPath\r\n    }\r\n\r\n    const RecipeCardMap = () => {\r\n        var recipeArray = recipes\r\n\r\n        recipeArray = recipeArray.map((recipe) => {\r\n            if (recipe.visibility_start_date != null && recipe.visibility_end_date != null) {\r\n                const today = new Date()\r\n\r\n                const currentDate = today.getDate()\r\n                const currentMonth = today.getMonth() + 1\r\n\r\n                const recipeMonthStart = parseInt((recipe.visibility_start_date).slice(5, 7))\r\n                const recipeMonthEnd = parseInt((recipe.visibility_end_date).slice(5, 7))\r\n                const recipeDateStart = parseInt((recipe.visibility_start_date).slice(8, 10))\r\n                const recipeDateEnd = parseInt((recipe.visibility_end_date).slice(8, 10))\r\n\r\n                const validateMonths = (currentMonth >= recipeMonthStart && currentMonth <= recipeMonthEnd)\r\n\r\n                if (validateMonths) {\r\n                    console.log('Recipe within month')\r\n\r\n\r\n                    if (currentMonth == recipeMonthStart) {\r\n                        if (currentDate < recipeDateStart) {\r\n                            console.log('less than start month date');\r\n                            return ''\r\n                        }\r\n                    }\r\n\r\n                    if (currentMonth == recipeMonthEnd) {\r\n                        if (currentDate > recipeDateEnd) {\r\n                            console.log('more than end month date');\r\n                            return ''\r\n                        }\r\n                    }\r\n\r\n                    console.log('success within function');\r\n                    return recipe\r\n\r\n                } else {\r\n                    console.log('failure outside function');\r\n                    return ''\r\n                }\r\n            } else {\r\n                return recipe\r\n            }\r\n        })\r\n\r\n        recipeArray = recipeArray.filter(e => e);\r\n\r\n        console.log(JSON.stringify(recipeArray))\r\n\r\n        if (recipeArray.length != 0) {\r\n            return (\r\n                <>\r\n                    {recipeArray.map((recipe) => (\r\n                        <Link className=\"user-item-card__link\" to={\"/recipedetails/\" + recipe.recipe_id}>\r\n                            <RecipeCard key={recipe.recipe_id} id={recipe.recipe_id} img={recipe.recipe_img} name={recipe.recipe_name}\r\n                                desc={recipe.recipe_desc} prep_time={recipe.prep_time} cooking_time={recipe.cooking_time} />\r\n                        </Link>\r\n                    ))\r\n                    }\r\n                </>\r\n            )\r\n        } else {\r\n            return <h1>No recipes available this season</h1>\r\n        }\r\n    }\r\n\r\n    const RecipeCategoryCardMap = () => {\r\n        let { category } = useParams();\r\n        console.log(`Category Path Start ${category}`);\r\n\r\n        if (category != null) {\r\n            const result = getRecipeCategoryIdFromPath({ category });\r\n            console.log(`Result is: ${result}`);\r\n            setCatId(result)\r\n            if (result != null) {\r\n                console.log(`Success! Id is: ${result}`);\r\n            }\r\n        }\r\n\r\n        let recipeArray = recipesByCategory\r\n        recipeArray = recipeArray.map((recipe) => {\r\n            if (recipe.visibility_start_date != null && recipe.visibility_end_date != null) {\r\n                const today = new Date()\r\n\r\n                const currentDate = today.getDate()\r\n                const currentMonth = today.getMonth() + 1\r\n\r\n                const recipeMonthStart = parseInt((recipe.visibility_start_date).slice(5, 7))\r\n                const recipeMonthEnd = parseInt((recipe.visibility_end_date).slice(5, 7))\r\n                const recipeDateStart = parseInt((recipe.visibility_start_date).slice(8, 10))\r\n                const recipeDateEnd = parseInt((recipe.visibility_end_date).slice(8, 10))\r\n\r\n                const validateMonths = (currentMonth >= recipeMonthStart && currentMonth <= recipeMonthEnd)\r\n\r\n                if (validateMonths) {\r\n                    console.log('Recipe within month')\r\n\r\n\r\n                    if (currentMonth == recipeMonthStart) {\r\n                        if (currentDate < recipeDateStart) {\r\n                            console.log('less than start month date');\r\n                            return ''\r\n                        }\r\n                    }\r\n\r\n                    if (currentMonth == recipeMonthEnd) {\r\n                        if (currentDate > recipeDateEnd) {\r\n                            console.log('more than end month date');\r\n                            return ''\r\n                        }\r\n                    }\r\n\r\n                    console.log('success within function');\r\n                    return recipe\r\n\r\n                } else {\r\n                    console.log('failure outside function');\r\n                    return ''\r\n                }\r\n            } else {\r\n                return recipe\r\n            }\r\n        })\r\n        recipeArray = recipeArray.filter(e => e);\r\n        if (recipeArray.length != 0) {\r\n            return (\r\n                <>\r\n                    {recipeArray.map((recipe) => (\r\n                        <Link className=\"user-item-card__link\" to={\"/recipedetails/\" + recipe.recipe_id}>\r\n                            <RecipeCard key={recipe.recipe_id} id={recipe.recipe_id} img={recipe.recipe_img} name={recipe.recipe_name}\r\n                                desc={recipe.recipe_desc} prep_time={recipe.prep_time} cooking_time={recipe.cooking_time} />\r\n                        </Link>\r\n                    ))\r\n                    }\r\n                </>\r\n\r\n            )\r\n        } else {\r\n            return <h1>Nothing in {category}...</h1>\r\n        }\r\n    }\r\n\r\n    const CategoryBreadcrumb = () => {\r\n        let { category } = useParams();\r\n        let categoryStr = '/recipes/' + category\r\n        return (\r\n            <Breadcrumb.Item className=\"user-breadcrumb-item\" href={categoryStr} >{category}</Breadcrumb.Item>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/recipes\">\r\n                <Col xs={2} id=\"sidebar-wrapper-user\">\r\n                    <RecipeSidebar rcat={catArray} />\r\n                </Col>\r\n                <Col xs={10} id=\"page-content-wrapper\">\r\n                    <Container className=\"user-container\" fluid>\r\n                        <Row className=\"user-row\">\r\n                            <Breadcrumb className=\"user-breadcrumb\">\r\n                                <Breadcrumb.Item className=\"user-breadcrumb__link-item\" href=\"/home\">Home</Breadcrumb.Item>\r\n                                <Breadcrumb.Item className=\"user-breadcrumb__link-item\" href=\"/recipes\">Recipes</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n                        </Row>\r\n                        <Row xs={3} md={4} lg={4} className=\"user-row user-row-grid\">\r\n                            <RecipeCardMap />\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Route>\r\n            <Route exact path=\"/recipes/:category\">\r\n                <Col xs={2} id=\"sidebar-wrapper-user\">\r\n                    <RecipeSidebar rcat={catArray} />\r\n                </Col>\r\n                <Col xs={10} id=\"page-content-wrapper\">\r\n                    <Container className=\"user-container\" fluid>\r\n                        <Row className=\"user-row\">\r\n                            <Breadcrumb className=\"user-breadcrumb\">\r\n                                <Breadcrumb.Item className=\"user-breadcrumb__link-item\" href=\"/home\">Home</Breadcrumb.Item>\r\n                                <Breadcrumb.Item className=\"user-breadcrumb__link-item\" href=\"/recipes\">Recipes</Breadcrumb.Item>\r\n                                <CategoryBreadcrumb />\r\n                            </Breadcrumb>\r\n                        </Row>\r\n                        <Row xs={3} md={4} lg={4} className=\"user-row user-row-grid\">\r\n                            <RecipeCategoryCardMap />\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col, Image, Dropdown, DropdownButton, Breadcrumb, Button, Form, BreadcrumbItem } from \"react-bootstrap\";\r\nimport { useParams } from 'react-router-dom';\r\nimport '../css/productdetails.css'\r\n\r\nconst ProductDetails = () => {\r\n    let [addcart, setAddcart] = useState(false)\r\n    const [itemQuantity, setItemQuantity] = useState(1)\r\n    const [productStocks, setProductStocks] = useState([])\r\n    const [productCategory, setProductCategory] = useState(\"\")\r\n    const [productSubCategory, setProductSubCategory] = useState(\"\")\r\n    const [productName, setProductName] = useState(\"\")\r\n    const [productImg, setProductImg] = useState(\"\")\r\n    const [productDesc, setProductDesc] = useState(\"\")\r\n    const [stockId, setStockId] = useState(\"\")\r\n    const [stockPrice, setStockPrice] = useState(0)\r\n    const [stockSize, setStockSize] = useState(\"\")\r\n    const [catLink, setCatLink] = useState('')\r\n    const [subcatLink, setSubcatLink] = useState('')\r\n\r\n    let cartItems = JSON.parse(window.localStorage.getItem('cartItems'))\r\n    let cartId = JSON.parse(window.localStorage.getItem('cartId'))\r\n    let { id } = useParams();\r\n    if (cartItems === null) localStorage.setItem('cartItems', JSON.stringify([]))\r\n\r\n    useEffect(() => {\r\n        getProductStockById(id)\r\n        getCartItemByUserId(window.localStorage.getItem('user_id'))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setCategoryLink();\r\n        setSubcategoryLink();\r\n    })\r\n\r\n    const onClick = () => setAddcart(true)\r\n    const getProductStockById = (product_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/stockbyid/${product_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setProductStocks(json)\r\n                setProductCategory(json[0].pcat_name)\r\n                setProductSubCategory(json[0].psubcat_name)\r\n                setProductName(json[0].product_name)\r\n                setProductImg(json[0].product_img)\r\n                setProductDesc(json[0].product_desc)\r\n                setStockId(json[0].stock_id)\r\n                setStockPrice(json[0].stock_price)\r\n                setStockSize(json[0].stock_size)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    const ChangePrice = (price, size, stock_id) => {\r\n        setStockId(stock_id)\r\n        setStockPrice(price)\r\n        setStockSize(size)\r\n    }\r\n    const plus = () => {\r\n        if (itemQuantity < 50) {\r\n            setItemQuantity(itemQuantity + 1)\r\n        }\r\n    }\r\n    const minus = () => {\r\n        if (itemQuantity > 1) {\r\n            setItemQuantity(itemQuantity - 1)\r\n        }\r\n    }\r\n    const getCartItemByUserId = (user_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            if (user_id === null) {\r\n                return\r\n            }\r\n            fetch(`https://apibounwe.herokuapp.com/cartuser/${user_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    if (json.err == \"User/Cart not found\") {\r\n                        return\r\n                    }\r\n                    resolve(json)\r\n                }).catch((err) => {\r\n                    alert(`Error at getCartItemByUser: ${err}`)\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n    }\r\n    const addCartItem = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/cartitem`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => res.json())\r\n            .then((json) => {\r\n            }).catch((err) => {\r\n                alert(`Error at addCartItem: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n    const updateCartItem = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/cartitem`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => res.json())\r\n            .then((json) => {\r\n            }).catch((err) => {\r\n                alert(`Error at updateCartItem: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n    const addtoCart = () => {\r\n        setAddcart(false)\r\n        setItemQuantity(1)\r\n        if (cartId === null) {\r\n            //Meaning there is no logged in user\r\n            cartItems = JSON.parse(window.localStorage.getItem('cartItems'))\r\n            if (cartItems.length == 0) {\r\n                //First item added to localStorage\r\n                cartItems.push({\r\n                    product_name: productName, product_desc: productDesc, stock_id: stockId, quantity: itemQuantity,\r\n                    price: itemQuantity * stockPrice, stock_price: stockPrice, stock_size: stockSize, product_img: productImg\r\n                })\r\n            } else {\r\n                //Check if there is duplicates on subsequent adding\r\n                let AddLocal = true\r\n                cartItems.map((cartItem) => {\r\n                    if (cartItem.stock_id == stockId) {\r\n                        //Same stock added to cart then we just increase the quantity\r\n                        cartItem.quantity += itemQuantity\r\n                        cartItem.price += itemQuantity * stockPrice\r\n                        AddLocal = false\r\n                    }\r\n                })\r\n                if (AddLocal) {\r\n                    //Add a new stock\r\n                    cartItems.push({\r\n                        product_name: productName, product_desc: productDesc, stock_id: stockId, quantity: itemQuantity,\r\n                        price: itemQuantity * stockPrice, stock_price: stockPrice, stock_size: stockSize, product_img: productImg\r\n                    })\r\n                }\r\n            }\r\n            window.localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n        } else {\r\n            getCartItemByUserId(window.localStorage.getItem('user_id'))\r\n                .then((savedItems) => {\r\n                    let letAdd = true\r\n                    console.log(savedItems.length)\r\n                    for (let i = 0; i < savedItems.length; i++) {\r\n                        if (savedItems[i].stock_id == stockId) {\r\n                            updateCartItem({\r\n                                stock_id: stockId, quantity: savedItems[i].quantity + itemQuantity,\r\n                                cartitem_id: savedItems[i].cartitem_id\r\n                            })\r\n                            letAdd = false;\r\n                        }\r\n                    }\r\n                    //Add new stock\r\n                    if (letAdd) {\r\n                        addCartItem({ cart_id: cartId, stock_id: stockId, quantity: itemQuantity })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    const setCategoryLink = () => {\r\n        var catString = productCategory;\r\n        console.log(productCategory);\r\n\r\n        catString = catString.replace(/\\s+/g, ' ').trim();\r\n        catString = catString.split(' ').join('');\r\n        catString = catString.toLowerCase();\r\n        catString = catString.replace(/[^a-zA-Z ]/g, \"\")\r\n\r\n        console.log(catString);\r\n\r\n        setCatLink('/products/' + catString);\r\n        console.log(catLink);\r\n\r\n    }\r\n    const setSubcategoryLink = () => {\r\n        var catString = productCategory;\r\n\r\n        catString = catString.replace(/\\s+/g, ' ').trim();\r\n        catString = catString.split(' ').join('');\r\n        catString = catString.toLowerCase();\r\n        catString = catString.replace(/[^a-zA-Z ]/g, \"\")\r\n\r\n        console.log(catString);\r\n\r\n        var subcatString = productSubCategory;\r\n        console.log(productSubCategory);\r\n\r\n        subcatString = subcatString.split(' ').join('');\r\n        subcatString = subcatString.toLowerCase();\r\n        subcatString = subcatString.replace(/[^a-zA-Z ]/g, \"\")\r\n\r\n        console.log(subcatString);\r\n\r\n        setSubcatLink('/products/' + catString + '/' + subcatString);\r\n        console.log(subcatLink);\r\n    }\r\n    const SubcatBreadcrumb = () => {\r\n        const nilRegex = new RegExp('nil', 'g');\r\n        const nilTest = nilRegex.test(subcatLink);\r\n        console.log(subcatLink);\r\n        console.log(nilTest);\r\n        if (!nilTest) {\r\n            console.log('Success');\r\n            return (\r\n                <BreadcrumbItem className=\"user-breadcrumb\" href={subcatLink}> {productSubCategory}</BreadcrumbItem>\r\n            )\r\n        }\r\n\r\n        if (nilTest) {\r\n            console.log('Failure');\r\n            return <> </>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Container className=\"user-container\" fluid>\r\n                <Row className=\"user-row\">\r\n                    <Breadcrumb className=\"user-breadcrumb\">\r\n                        <Breadcrumb.Item className=\"user-breadcrumb\" href=\"/home\">Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item className=\"user-breadcrumb\" href=\"/products\">Products</Breadcrumb.Item>\r\n                        <Breadcrumb.Item className=\"user-breadcrumb\" href={catLink}>{productCategory}</Breadcrumb.Item>\r\n                        <SubcatBreadcrumb />\r\n                        <Breadcrumb.Item className=\"user-breadcrumb\" active>{productName}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </Row>\r\n\r\n                <Row className=\"user-row\">\r\n\r\n                    <Col style={{ padding: '0' }} className=\"user-col\" md={3}>\r\n                        <Image src={productImg} className=\"user-row__image\"></Image>\r\n                    </Col>\r\n                    <Col style={{paddingLeft:'1.5vw', paddingTop:'0'}} className=\"user-col\" md={9}>\r\n                        <Row style={{paddingTop:'0'}} className=\"user-inner-row user-inner-row--title\">\r\n                            <Col className=\"user-inner-col user-inner-col--title\" md={9}>\r\n                                <span className=\"user-span user-span--product\">{productName}</span>\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--title\" md={{span:2, offset:1}}>\r\n                                <span className=\"user-span user-span--title user-span--padding-left\">Price: </span>\r\n                                <br/>\r\n                                <span className=\"user-span user-span--price user-span--padding-left\">$<span className=\"user-span user-span--black\">{stockPrice.toFixed(2)}</span></span>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{ paddingTop: '0'}} className=\"user-inner-row user-inner-row--desc\">\r\n                            <Col className=\"user-inner-col user-inner-col--desc\">\r\n                                <span className=\"user-span user-span--desc\">{productDesc}</span>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{paddingTop:'0'}} className=\"user-inner-row user-inner-row--form\">\r\n                            <Col className=\"user-inner-col user-inner-col--form\" md={3}>\r\n                                <DropdownButton className=\"user-dropdown\" title={stockSize} variant=\"success\" className=\"col\">\r\n                                    {productStocks.map((productStock) => (\r\n                                        <Dropdown.Item className=\"user-dropdown__item\"\r\n                                            onClick={() => ChangePrice(productStock.stock_price, productStock.stock_size, productStock.stock_id)}>\r\n                                            {productStock.stock_size}</Dropdown.Item>\r\n                                    ))}\r\n                                </DropdownButton>\r\n                            </Col>\r\n\r\n                            {\r\n                                !addcart ?\r\n                                    <Col className=\"user-inner-col user-inner-col--form\" md={{ span: 3, offset: 6 }}>\r\n                                        <Button className=\"user-button\" variant=\"success\" onClick={onClick}>Add to Cart</Button>\r\n                                    </Col>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                addcart ?\r\n                                    <Col className=\"user-inner-col user-inner-col--form\" md={{ span: 3, offset: 5 }}>\r\n                                        <Form className=\"user-form\" inline>\r\n                                            <Form.Group className=\"user-form__input-container\">\r\n                                                <Row className=\"user-form-row\">\r\n                                                    <Col style={{ padding: '0' }} className=\"user-form-col\" md={2}>\r\n                                                        <Button style={{ width: '100%' }} className=\"user-form__button user-form__button--minus\"\r\n                                                            onClick={() => minus()}>-</Button>\r\n                                                    </Col>\r\n                                                    <Col style={{ padding: '0' }} className=\"user-form-col\" md={4}>\r\n                                                        <Form.Control style={{ textAlign: 'center', padding: '0' }} disabled\r\n                                                            type=\"text\" className=\"user-form__input-number\" placeholder={itemQuantity} />\r\n                                                    </Col>\r\n                                                    <Col style={{ padding: '0' }} className=\"user-form-col\" md={2}>\r\n                                                        <Button className=\"user-form__button user-form__button--plus\"\r\n                                                            onClick={() => plus()}>+</Button>\r\n                                                    </Col>\r\n                                                    <Col style={{ padding: '0' }} className=\"user-form-col\" md={2}>\r\n                                                        <Button variant=\"success\" className=\"user-form__button user-form__button--plus\"\r\n                                                            onClick={() => addtoCart()}>✓</Button>\r\n                                                    </Col>\r\n                                                </Row  >\r\n                                            </Form.Group>\r\n                                        </Form>\r\n\r\n                                    </Col>\r\n                                    : null\r\n                            }\r\n                        </Row>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetails","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Button, Form } from \"react-bootstrap\";\r\nexport default function RecipeDetailsRow({ ingredientProd, index, onToggle }) {\r\n    let imgstyle = {\r\n        width: '50px'\r\n    }\r\n    let checked = true\r\n    const [swapped, setSwapped] = useState(false)\r\n    const [ingredients, setIngredients] = useState([])\r\n    const [product_name, setProductName] = useState(ingredientProd.product_name)\r\n    const [product_img, setProductImg] = useState(ingredientProd.product_img)\r\n    const [product_desc, setProductDesc] = useState(ingredientProd.product_desc)\r\n    const [stock_size, setStockSize] = useState(ingredientProd.stock_size)\r\n    const [stock_price, setStockPrice] = useState(ingredientProd.stock_price)\r\n    let recipeItems = JSON.parse(window.localStorage.getItem('recipeItems'))\r\n\r\n    const setStates = (ingredient) => {\r\n        setProductName(ingredient.product_name)\r\n        setProductImg(ingredient.product_img)\r\n        setProductDesc(ingredient.product_desc)\r\n        setStockPrice(ingredient.stock_price)\r\n        setStockSize(ingredient.stock_size)\r\n        setSwapped(false)\r\n        recipeItems[index] = {\r\n            ingredientprod_id: ingredient.ingredientprod_id,\r\n            swap: ingredient.swap,\r\n            ingredient_name: ingredient.ingredient_name,\r\n            ingredient_id: ingredient.ingredient_id,\r\n            product_id: ingredient.product_id,\r\n            product_name: ingredient.product_name,\r\n            product_desc: ingredient.product_desc,\r\n            product_img: ingredient.product_img,\r\n            stock_id: ingredient.stock_id,\r\n            stock_price: ingredient.stock_price,\r\n            stock_size: ingredient.stock_size,\r\n            recipe_id: ingredient.recipe_id,\r\n            recipe_img: ingredient.recipe_img\r\n        }\r\n        window.localStorage.setItem('recipeItems', JSON.stringify(recipeItems))\r\n    }\r\n\r\n    const getIngredientProdbyIngredientId = (ingredient_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredientprod/${ingredient_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                resolve(json)\r\n            }).catch((err) => {\r\n                alert(err);\r\n                reject(err)\r\n            });\r\n        })\r\n    }\r\n\r\n    const getIngredientProdbyIngredientIdAndSwap = (ingredient_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/ingredientprod/${ingredient_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(JSON.stringify(json))\r\n                setIngredients(json)\r\n                setSwapped(true)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n    }\r\n\r\n    const handleCheck = (ingredientProd) => {\r\n        checked = !checked\r\n        if (!checked) {\r\n            onToggle(index, {ingredientprod_id: ingredientProd.ingredientprod_id, ingredient_id: ingredientProd.ingredient_id})\r\n        } else {\r\n            onToggle(index, ingredientProd)\r\n            // getIngredientProdbyIngredientId(recipeItems[index].ingredient_id)\r\n            // .then((ingredientProds) => {\r\n            //     ingredientProds.map((ingredient) => {\r\n            //         if(ingredientProd.ingredientprod_id==ingredient.ingredientprod_id) {\r\n            //             onToggle(index, ingredient)\r\n            //         }\r\n            //     })\r\n            // })\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            {!swapped\r\n                ? <div>\r\n                    <Row>\r\n                        <Col md={9}>\r\n                            <div>{ingredientProd.ingredient_name}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={2}>\r\n                            <Form.Group className=\"recipe_checkbox-container\" controlId=\"formBasicCheckbox\">\r\n                                <Form.Check name=\"checked\" id=\"Root Admin\" className=\"recipe-form__checkbox\"\r\n                                    type=\"checkbox\" defaultChecked={checked} onChange={() => handleCheck(recipeItems[index])} />\r\n                            </Form.Group>\r\n                            <Image src={product_img} style={imgstyle}></Image>\r\n                        </Col>\r\n                        <Col md={5}>\r\n                            <Row>\r\n                                <div> {product_name}, {stock_size}</div>\r\n                            </Row>\r\n                            <Row>\r\n                                {product_desc}\r\n                            </Row>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <div>${parseFloat(stock_price).toFixed(2)}</div>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Button variant=\"success\" onClick={() => getIngredientProdbyIngredientIdAndSwap(ingredientProd.ingredient_id)}>Swap</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br></br>\r\n                </div>\r\n                : null\r\n            }\r\n            {\r\n                swapped\r\n                    ? <div>\r\n                        <Row>\r\n                            <Col md={9}>\r\n                                <div>{ingredientProd.ingredient_name}</div>\r\n                            </Col>\r\n                        </Row>\r\n                        {ingredients.map((ingredient) => (\r\n                            <div>\r\n                                <Row>\r\n                                    <Col md={9}>\r\n                                        <div>{ingredient.ingredient_name}</div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={ingredient.product_img} style={imgstyle}></Image>\r\n                                    </Col>\r\n                                    <Col md={5}>\r\n                                        <Row>\r\n                                            <div> {ingredient.product_name}, {ingredient.stock_size}</div>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            {ingredient.product_desc}\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <div>${parseFloat(ingredient.stock_price).toFixed(2)}</div>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Button onClick={() => setStates(ingredient)}>Select</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br></br>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Breadcrumb, Container, Row, Col, Image, Button, Modal } from \"react-bootstrap\";\r\nimport { useParams } from 'react-router-dom';\r\nimport RecipeDetailsRow from './RecipeDetailsRow';\r\nimport '../css/recipedetails.css'\r\n\r\nexport default function RecipeDetails() {\r\n    const [recipes, setRecipeDetail] = useState([])\r\n    const [ingredients, setIngredients] = useState([])\r\n    const [ingredientProds, setIngredientProds] = useState([])\r\n    const [unsoldIngredients, setUnsoldIngredients] = useState([])\r\n    const [show, setShow] = useState(false);\r\n    const [catLink, setCatLink] = useState('');\r\n    const [recipeCategory, setRecipeCategory] = useState('');\r\n    const [steps, setSteps] = useState([])\r\n\r\n    let { id } = useParams();\r\n    let cartItems = JSON.parse(window.localStorage.getItem('cartItems'))\r\n    let cartId = JSON.parse(window.localStorage.getItem('cartId'))\r\n    let recipeItems = JSON.parse(window.localStorage.getItem('recipeItems'))\r\n    if (cartItems === null) localStorage.setItem('cartItems', JSON.stringify([]))\r\n    if (recipeItems === null) recipeItems = []\r\n    useEffect(() => {\r\n        getIngredientsbyRecipeId(id)\r\n        getRecipeById(id).then((recipe) => {\r\n            getRecipeCategoryById(recipe.rcat_id)\r\n        })\r\n        getUnsoldIngredientsRecipeId(id)\r\n        getIngredientProductStockByRecipeId(id).then((output) => {\r\n            localStorage.setItem('recipeItems', JSON.stringify(output))\r\n        })\r\n        getCartItemByUserId(window.localStorage.getItem('user_id'))\r\n    }, [])\r\n    const getCartItemByUserId = (user_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            if (user_id === null) {\r\n                return\r\n            }\r\n            fetch(`https://apibounwe.herokuapp.com/cartuser/${user_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    if (json.err == \"User/Cart not found\") {\r\n                        return\r\n                    }\r\n                    resolve(json)\r\n                }).catch((err) => {\r\n                    alert(`Error at getCartItemByUser: ${err}`)\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n    }\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        let arr = []\r\n        ingredientProds.map((ingredientProd) => {\r\n            if (ingredientProd.swap == 0) arr.push(ingredientProd)\r\n        })\r\n        window.localStorage.setItem('recipeItems', JSON.stringify(arr))\r\n    };\r\n    const handleShow = () => {\r\n        setShow(true)\r\n        let arr = []\r\n        ingredientProds.map((ingredientProd) => {\r\n            if (ingredientProd.swap == 0) arr.push(ingredientProd)\r\n        })\r\n        window.localStorage.setItem('recipeItems', JSON.stringify(arr))\r\n    };\r\n    const getIngredientsbyRecipeId = (recipe_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/ingredient/${recipe_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setIngredients(json)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n\r\n    }\r\n    const getUnsoldIngredientsRecipeId = (recipe_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/ingredientsnotsold/${recipe_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setUnsoldIngredients(json)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n\r\n    }\r\n    const getIngredientProductStockByRecipeId = (recipe_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredientproductstockbyrecipeid/${recipe_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    let output = []\r\n                    json.map((ingredientProduct) => {\r\n                        if (ingredientProduct.swap == 0) output.push(ingredientProduct)\r\n                    })\r\n                    setIngredientProds(output)\r\n                    resolve(output)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n    }\r\n    const getRecipeById = (recipe_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipeid/${recipe_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    setRecipeDetail(json[0])\r\n                    setSteps(json[0].recipe_step.split('-'))\r\n                    // alert(json[0].recipe_step.split('-'))\r\n                    resolve(json[0])\r\n                }).catch((err) => {\r\n                    alert(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n\r\n    }\r\n    const getRecipeCategoryById = (rcat_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/recipeCategory/${rcat_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setCategoryLink(json[0].rcat_name)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n    }\r\n    const setCategoryLink = (categoryName) => {\r\n        let catString = categoryName;\r\n        catString = catString.replace(/[^a-zA-Z ]/g, \"\").replace(/\\s+/g, ' ').trim();\r\n\r\n        setCatLink('/recipes/' + catString);\r\n        setRecipeCategory(catString)\r\n    }\r\n    const onToggle = (index, newitem) => {\r\n        recipeItems = JSON.parse(window.localStorage.getItem('recipeItems'))\r\n        recipeItems[index] = newitem\r\n        window.localStorage.setItem('recipeItems', JSON.stringify(recipeItems))\r\n    }\r\n    const addToCart = (ingredientProd) => {\r\n        if (cartId === null) {\r\n            cartItems = JSON.parse(window.localStorage.getItem('cartItems'))\r\n            if (cartItems.length == 0) {\r\n                cartItems.push({\r\n                    product_name: ingredientProd.product_name, product_desc: ingredientProd.product_desc,\r\n                    stock_id: ingredientProd.stock_id, quantity: 1,\r\n                    price: ingredientProd.stock_price, stock_price: ingredientProd.stock_price, stock_size: ingredientProd.stock_size,\r\n                    product_img: ingredientProd.product_img\r\n                })\r\n            } else {\r\n                let AddLocal = true\r\n                cartItems.map((cartItem) => {\r\n                    if (cartItem.stock_id == ingredientProd.stock_id) {\r\n                        cartItem.quantity += 1\r\n                        cartItem.price += ingredientProd.stock_price\r\n                        AddLocal = false\r\n                    }\r\n                })\r\n                if (AddLocal) {\r\n                    cartItems.push({\r\n                        product_name: ingredientProd.product_name, product_desc: ingredientProd.product_desc,\r\n                        stock_id: ingredientProd.stock_id, quantity: 1,\r\n                        price: ingredientProd.stock_price, stock_price: ingredientProd.stock_price, stock_size: ingredientProd.stock_size,\r\n                        product_img: ingredientProd.product_img\r\n                    })\r\n                }\r\n            }\r\n            window.localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n        } else {\r\n            getCartItemByUserId(window.localStorage.getItem('user_id'))\r\n                .then((savedItems) => {\r\n                    let letAdd = true\r\n                    if(savedItems.length>0){\r\n                    savedItems.map((savedItem) => {\r\n                        if (savedItem.stock_id == ingredientProd.stock_id) {\r\n                            updateCartItem({\r\n                                stock_id: ingredientProd.stock_id, quantity: savedItem.quantity + 1,\r\n                                cartitem_id: savedItem.cartitem_id\r\n                            })\r\n                            letAdd = false;\r\n                        }\r\n                    })\r\n                }\r\n                    if (letAdd) {\r\n                        addCartItem({ cart_id: cartId, stock_id: ingredientProd.stock_id, quantity: 1 })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    const addCartItem = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/cartitem`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => res.json())\r\n            .then((json) => {\r\n            }).catch((err) => {\r\n                alert(`Error at addCartItem: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n    const updateCartItem = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/cartitem`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(res => res.json())\r\n            .then((json) => {\r\n            }).catch((err) => {\r\n                alert(`Error at updateCartItem: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n    const addAllItems = (ingredientProds) => {\r\n        ingredientProds.map((ingredientProd) => {\r\n            if (ingredientProd.swap != undefined) addToCart(ingredientProd)\r\n        })\r\n        window.localStorage.removeItem('recipeItems')\r\n        setShow(false)\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Container className=\"user-container\" fluid>\r\n            <Row className=\"user-row\">\r\n                <Breadcrumb style={{margin:'0'}} className=\"user-breadcrumb\">\r\n                    <Breadcrumb.Item className=\"user-breadcrumb__link\" href=\"/home\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item className=\"user-breadcrumb__link\" href=\"/recipes\">Recipes</Breadcrumb.Item>\r\n                    <Breadcrumb.Item className=\"user-breadcrumb__link\" href={catLink} >{recipeCategory}</Breadcrumb.Item>\r\n                    <Breadcrumb.Item className=\"user-breadcrumb__link\" active>{recipes.recipe_name}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row className=\"user-row\">\r\n                        <Col style={{padding:'0'}} className=\"user-col\" md={3}>\r\n                            <Image src={recipes.recipe_img} className=\"user-row__image\"></Image>\r\n                        </Col>\r\n                        <Col className=\"user-col\" md={9}>\r\n                                <Row style={{paddingLeft:'1.5vw', paddingTop:'0'}} className=\"user-inner-row user-inner-row--recipe-title\">\r\n                                    <span className=\"user-span user-span--recipe-title\">{recipes.recipe_name}</span>\r\n                                </Row>\r\n                                <Row style={{paddingLeft:'1.5vw',paddingTop: '0'}} className=\"user-inner-row user-inner-row--recipe-desc\">\r\n                                    <Col className=\"user-inner-col user-inner-col--recipe-desc\">\r\n                                        <span className=\"user-span user-span--recipe-desc\">{recipes.recipe_desc}</span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{paddingLeft:'1.5vw'}} className=\"user-inner-row  user-inner-row--recipe-text\">\r\n                                    <span className=\"user-span user-span--recipe-text\">Preparation Time: {recipes.prep_time} | Cooking Time: {recipes.cooking_time}</span>\r\n                                </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{ paddingTop:'4vh'}} className=\"user-row\">\r\n                        <Col className=\"user-col user-col--ingredients\" xs={3}>\r\n                            <span  className=\"user-span user-span--ingredients\">Ingredients: </span>\r\n                            <div className=\"user-div user-div--ingredients\">\r\n                                <ul className=\"user-list user-list--ingredients\">\r\n                                    {ingredients.map((ingredient) => {\r\n                                    if(ingredient.optional == 0) {\r\n                                    return (\r\n                                        <li className=\"user-list__item user-list__item--ingredients\">\r\n                                            {ingredient.ingredient_qty} {ingredient.ingredient_name}\r\n                                        </li>\r\n                                    )} else {\r\n                                        return (\r\n                                            <li className=\"user-list__item user-list__item--ingredients\">\r\n                                                {ingredient.ingredient_qty} {ingredient.ingredient_name}, optional\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                        })}\r\n                                </ul>\r\n                            </div>\r\n                            <Button className=\"user-list__button\" variant=\"success\" onClick={handleShow}>Add Item(s) to Cart</Button>\r\n                        </Col>\r\n\r\n                        <Col className=\"user-col user-col--steps\" xs={9}>\r\n                            <span  className=\"user-span user-span--steps\">Steps: </span>\r\n                            <div className=\"user-div user-div--steps\" style={{ flexDirection: 'row', paddingTop: '10px' }}>\r\n                                {steps.map((step, index) => (\r\n                                    index != 0 ? <h6>- {step}</h6> : null\r\n                                ))}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                <Modal className=\"user-modal\" show={show} onHide={handleClose}>\r\n                    <Modal.Header className=\"user-modal__header\" closeButton>\r\n                        <Modal.Title className=\"user-modal__header-title\">Add Ingredients to Cart</Modal.Title>\r\n                    </Modal.Header>\r\n                    {!Array.isArray(unsoldIngredients)\r\n                        ?\r\n                        <Modal.Body style={{ marginLeft:'1.5vw',paddingRight:'0.5vw'}} className=\"user-modal__body\">\r\n                            {ingredientProds.map((ingredientProd,index) => (\r\n                                (\r\n                                    <RecipeDetailsRow ingredientProds={ingredientProds} ingredientProd={ingredientProd}\r\n                                        key={ingredientProd.ingredientprod_id} index={index} onToggle={onToggle} />\r\n                                )\r\n                            ))}\r\n                        </Modal.Body>\r\n                        : null\r\n                    }\r\n                    {Array.isArray(unsoldIngredients)\r\n                        ?\r\n                        <Modal.Body style={{ marginLeft:'1.5vw',paddingRight:'0.5vw'}} className=\"user-modal__body\">\r\n                            {ingredientProds.map((ingredientProd, index) => (\r\n                                (\r\n                                    <RecipeDetailsRow ingredientProds={ingredientProds} ingredientProd={ingredientProd}\r\n                                        key={ingredientProd.ingredientprod_id} index={index} onToggle={onToggle} />\r\n\r\n                                )\r\n                            ))}\r\n                            Ingredients Not Sold:\r\n                            {unsoldIngredients.map((unsoldIngredient) => (\r\n                                <li>{unsoldIngredient.ingredient_name}</li>\r\n                            ))}\r\n                        </Modal.Body>\r\n                        : null\r\n                    }\r\n                    <Modal.Footer className=\"user-modal__footer\">\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => addAllItems(JSON.parse(window.localStorage.getItem('recipeItems')))}>\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n\r\n        </>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Container, Button, Form, Row, Col, Table } from 'react-bootstrap';\r\nimport '../css/useraccountdetails.css';\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport Popup from 'reactjs-popup';\r\n\r\n\r\nfunction UserOrderRow({ sn, invoice, cdate, number, customer, total, status, ddate }) {\r\n  return (\r\n    <tr className=\"user-table__body-row\">\r\n      <td className=\"user-table__body-data\">{sn}</td>\r\n      <td className=\"user-table__body-data\">{invoice}</td>\r\n      <td className=\"user-table__body-data\">{cdate}</td>\r\n      <td className=\"user-table__body-data\">${total}</td>\r\n      <td className=\"user-table__body-data\">{status}</td>\r\n      <td className=\"user-table__body-data\">{ddate}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nfunction AccountDetails() {\r\n  let user_id = window.localStorage.getItem('user_id')\r\n\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [cfmNewPassword, setCfmNewPassword] = useState(\"\");\r\n\r\n  const [address, setAddress] = useState(\"Address\");\r\n  const [postalCode, setPostalCode] = useState(\"Postal Code\");\r\n  const [unitNo, setUnitNo] = useState(\"Unit No\");\r\n\r\n  const [email, setEmail] = useState(\"Email\");\r\n  const [firstName, setFirstName] = useState(\"First Name\");\r\n  const [lastName, setLastName] = useState(\"Last Name\");\r\n\r\n  const [pContactNo, setPContactNo] = useState(\"P Contact No\");\r\n  const [sContactNo, setSContactNo] = useState(\"S Contact No\");\r\n\r\n\r\n  let [editPassword, setEditPassword] = useState(false)\r\n  let [editEmail, setEditEmail] = useState(false)\r\n\r\n  let [editAddress, setEditAddress] = useState(false)\r\n  let [editPostalCode, setEditPostalCode] = useState(false)\r\n  let [editUnitNo, setEditUnitNo] = useState(false)\r\n\r\n  let [editFirstName, setEditFirstName] = useState(false)\r\n  let [editLastName, setEditLastName] = useState(false)\r\n\r\n  let [editPContactNo, setEditPContactNo] = useState(false)\r\n  let [editSContactNo, setEditSContactNo] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getUserById(window.localStorage.getItem('user_id'))\r\n  }, [])\r\n\r\n  const getUserById = (user_id) => {\r\n    if (user_id === null) {\r\n      return\r\n    }\r\n    fetch(`https://apibounwe.herokuapp.com/user/${user_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        setFirstName(json[0].first_name)\r\n        setLastName(json[0].last_name)\r\n        setEmail(json[0].email)\r\n        setAddress(json[0].address)\r\n        setPostalCode(json[0].postal_code)\r\n        setPContactNo(json[0].pcontact_no)\r\n        setSContactNo(json[0].scontact_no)\r\n        setUnitNo(json[0].unit_no)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  const updateUserById = (data) => {\r\n    fetch(`https://apibounwe.herokuapp.com/user`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        window.location.reload()\r\n      }).catch((err) => {\r\n        alert(`Error at updateUser: ${err}`)\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const updateUserpwdById = (data) => {\r\n    fetch(`https://apibounwe.herokuapp.com/userpwd`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        console.log(json)\r\n      }).catch((err) => {\r\n        alert(`Error at updateUser: ${err}`)\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const onClickEmail = () => {\r\n    setEditEmail(true)\r\n\r\n    let boolean_array = [setEditAddress, setEditPostalCode, setEditUnitNo, setEditFirstName, setEditLastName, setEditPContactNo, setEditSContactNo];\r\n\r\n    boolean_array.forEach((bool) => {\r\n      bool(false)\r\n    })\r\n  }\r\n  const onClickAddress = () => {\r\n    setEditAddress(true)\r\n\r\n    let boolean_array = [setEditEmail, setEditPostalCode, setEditUnitNo, setEditFirstName, setEditLastName, setEditPContactNo, setEditSContactNo];\r\n\r\n    boolean_array.forEach((bool) => {\r\n      bool(false)\r\n    })\r\n  }\r\n  const onClickPostalCode = () => {\r\n    setEditPostalCode(true)\r\n\r\n    let boolean_array = [setEditEmail, setEditAddress, setEditUnitNo, setEditFirstName, setEditLastName, setEditPContactNo, setEditSContactNo];\r\n\r\n    boolean_array.forEach((bool) => {\r\n      bool(false)\r\n    })\r\n  }\r\n  const onClickUnitNo = () => {\r\n    setEditUnitNo(true)\r\n\r\n    let boolean_array = [setEditEmail, setEditAddress, setEditPostalCode, setEditFirstName, setEditLastName, setEditPContactNo, setEditSContactNo];\r\n\r\n    boolean_array.forEach((bool) => {\r\n      bool(false)\r\n    })\r\n  }\r\n  const onClickFirstName = () => {\r\n    setEditFirstName(true)\r\n\r\n    let boolean_array = [setEditEmail, setEditAddress, setEditPostalCode, setEditUnitNo, setEditLastName, setEditPContactNo, setEditSContactNo];\r\n\r\n    boolean_array.forEach((bool) => {\r\n      bool(false)\r\n    })\r\n  }\r\n  const onClickLastName = () => {\r\n    setEditLastName(true)\r\n\r\n    let boolean_array = [setEditEmail, setEditAddress, setEditPostalCode, setEditUnitNo, setEditFirstName, setEditPContactNo, setEditSContactNo];\r\n\r\n    boolean_array.forEach((bool) => {\r\n      bool(false)\r\n    })\r\n  }\r\n  const onClickPContactNo = () => {\r\n    setEditPContactNo(true)\r\n\r\n    let boolean_array = [setEditEmail, setEditAddress, setEditPostalCode, setEditUnitNo, setEditFirstName, setEditLastName, setEditSContactNo];\r\n\r\n    boolean_array.forEach((bool) => {\r\n      bool(false)\r\n    })\r\n  }\r\n  const onClickSContactNo = () => {\r\n    setEditSContactNo(true)\r\n\r\n    let boolean_array = [setEditEmail, setEditAddress, setEditPostalCode, setEditUnitNo, setEditFirstName, setEditLastName, setEditPContactNo];\r\n\r\n    boolean_array.forEach((bool) => {\r\n      bool(false)\r\n    })\r\n  }\r\n  const onSubmit = () => {\r\n    updateUserById({\r\n      email: email,\r\n      first_name: firstName,\r\n      last_name: lastName,\r\n      address: address,\r\n      postal_code: postalCode,\r\n      unit_no: unitNo,\r\n      pcontact_no: pContactNo,\r\n      scontact_no: sContactNo,\r\n      user_id: window.localStorage.getItem('user_id')\r\n    })\r\n  }\r\n\r\n  const ConfirmSubmitPopup = ({ close }) => {\r\n    return (\r\n      <div className=\"popup-card__update-user\">\r\n        <p className=\"popup-card__update-user--header\">Update User Profile?</p>\r\n        <Button variant=\"success\"  className=\"popup-card__button popup-card__button--confirm-update\" onClick={() => onSubmit()} type=\"submit\">Confirm</Button>\r\n        <br/>\r\n        <Button variant=\"secondary\" className=\"popup-card__button popup-card__button--cancel-update\" onClick={close}>Cancel</Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {!editPassword\r\n        ? \r\n        <>\r\n        <span className=\"user-header user-header--account\">User Account</span>\r\n        <div style={{marginBottom:'2.5vh'}}>\r\n          <Form className=\"user-form user-form--update-user\">\r\n            <Form.Group size=\"lg\" className=\"user-form__input-container\" controlId=\"firstName\">\r\n              {\r\n                !editFirstName\r\n                  ?\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Col className=\"user-form__col\" xs={10}>\r\n                      <Form.Label className=\"user-form__label user-form__label--update-user\">First Name</Form.Label>\r\n                      <Form.Control plaintext readOnly className=\"user-form__input-readonly\" value={firstName}>\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className=\"user-form__col\" xs={{span:1,offset:1}}>\r\n                      <PencilSquare className=\"user-form__icon\" onClick={onClickFirstName} />\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Form.Label className=\"user-form__label user-form__label--update-user\">Set First Name</Form.Label>\r\n                    <Form.Control className=\"user-form__input\" onChange={(e) => setFirstName(e.target.value)} value={firstName}></Form.Control>\r\n                  </Row>\r\n              }\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" className=\"user-form__input-container\" controlId=\"lastName\">\r\n              {\r\n                !editLastName\r\n                  ?\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Col className=\"user-form__col\" xs={10}>\r\n                      <Form.Label className=\"user-form__label user-form__label--update-user\">Last Name</Form.Label>\r\n                      <Form.Control plaintext readOnly className=\"user-form__input-readonly\" value={lastName}>\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className=\"user-form__col\" xs={{span:1,offset:1}}>\r\n                      <PencilSquare className=\"user-form__icon\" onClick={onClickLastName} />\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Form.Label className=\"user-form__label user-form__label--update-user\">Set Last Name</Form.Label>\r\n                    <Form.Control className=\"user-form__input\" onChange={(e) => setLastName(e.target.value)} value={lastName}></Form.Control>\r\n                  </Row>\r\n              }\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" className=\"user-form__input-container\" controlId=\"email\">\r\n              {\r\n                !editEmail\r\n                  ?\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Col className=\"user-form__col\" xs={10}>\r\n                      <Form.Label className=\"user-form__label user-form__label--update-user\">Email</Form.Label>\r\n                      <Form.Control plaintext readOnly className=\"user-form__input-readonly\" value={email}>\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className=\"user-form__col\" xs={{span:1,offset:1}}>\r\n                      <PencilSquare className=\"user-form__icon\" onClick={onClickEmail} />\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Form.Label className=\"user-form__label user-form__label--update-user\">Set Email</Form.Label>\r\n                    <Form.Control className=\"user-form__input\" onChange={(e) => setEmail(e.target.value)} value={email}></Form.Control>\r\n                  </Row>\r\n              }\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" className=\"user-form__input-container\" controlId=\"address\">\r\n              {\r\n                !editAddress\r\n                  ?\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Col className=\"user-form__col\" xs={10}>\r\n                      <Form.Label className=\"user-form__label user-form__label--update-user\">Address</Form.Label>\r\n                      <Form.Control plaintext readOnly className=\"user-form__input-readonly\" value={address}>\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className=\"user-form__col\" xs={{span:1,offset:1}}>\r\n                      <PencilSquare className=\"user-form__icon\" onClick={onClickAddress} />\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Form.Label className=\"user-form__label user-form__label--update-user\">Set Address</Form.Label>\r\n                    <Form.Control className=\"user-form__input\" onChange={(e) => setAddress(e.target.value)} value={address}></Form.Control>\r\n                  </Row>\r\n              }\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" className=\"user-form__input-container\" controlId=\"postalCode\">\r\n              {\r\n                !editPostalCode\r\n                  ?\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Col className=\"user-form__col\" xs={10}>\r\n                      <Form.Label className=\"user-form__label user-form__label--update-user\">Postal Code</Form.Label>\r\n                      <Form.Control plaintext readOnly className=\"user-form__input-readonly\" value={postalCode}>\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className=\"user-form__col\" xs={{span:1,offset:1}}>\r\n                      <PencilSquare className=\"user-form__icon\" onClick={onClickPostalCode} />\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Form.Label className=\"user-form__label user-form__label--update-user\">Set Postal Code</Form.Label>\r\n                    <Form.Control className=\"user-form__input\" onChange={(e) => setPostalCode(e.target.value)} value={postalCode}></Form.Control>\r\n                  </Row>\r\n              }\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" className=\"user-form__input-container\" controlId=\"unitNo\">\r\n              {\r\n                !editUnitNo\r\n                  ?\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Col className=\"user-form__col\" xs={10}>\r\n                      <Form.Label className=\"user-form__label user-form__label--update-user\">Unit No</Form.Label>\r\n                      <Form.Control plaintext readOnly className=\"user-form__input-readonly\"\r\n                        value={unitNo === '' ? 'Have yet to set' : unitNo}>\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className=\"user-form__col\" xs={{span:1,offset:1}}>\r\n                      <PencilSquare className=\"user-form__icon\" onClick={onClickUnitNo} />\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Form.Label className=\"user-form__label user-form__label--update-user\">Set Email</Form.Label>\r\n                    <Form.Control className=\"user-form__input\" onChange={(e) => setUnitNo(e.target.value)} value={unitNo}></Form.Control>\r\n                  </Row>\r\n              }\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" className=\"user-form__input-container\" controlId=\"pContactNo\">\r\n              {\r\n                !editPContactNo\r\n                  ?\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Col className=\"user-form__col\" xs={10}>\r\n                      <Form.Label className=\"user-form__label user-form__label--update-user\">P Contact No</Form.Label>\r\n                      <Form.Control plaintext readOnly className=\"user-form__input-readonly\"\r\n                        value={pContactNo === '' ? 'Have yet to set' : pContactNo}>\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className=\"user-form__col\" xs={{span:1,offset:1}}>\r\n                      <PencilSquare className=\"user-form__icon\" onClick={onClickPContactNo} />\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Form.Label className=\"user-form__label user-form__label--update-user\">Set P Contact No</Form.Label>\r\n                    <Form.Control className=\"user-form__input\" onChange={(e) => setPContactNo(e.target.value)} value={pContactNo}></Form.Control>\r\n                  </Row>\r\n              }\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" className=\"user-form__input-container\" controlId=\"sContactNo\">\r\n              {\r\n                !editSContactNo\r\n                  ?\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Col className=\"user-form__col\" xs={10}>\r\n                      <Form.Label className=\"user-form__label user-form__label--update-user\">S Contact No</Form.Label>\r\n                      <Form.Control plaintext readOnly className=\"user-form__input-readonly\"\r\n                        value={sContactNo === '' ? 'Have yet to set' : sContactNo}>\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className=\"user-form__col\" xs={{span:1,offset:1}}>\r\n                      <PencilSquare className=\"user-form__icon\" onClick={onClickSContactNo} />\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <Row className=\"user-form__row user-form__row--update-user\">\r\n                    <Form.Label className=\"user-form__label user-form__label--update-user\">Set S Contact No</Form.Label>\r\n                    <Form.Control className=\"user-form__input\" onChange={(e) => setSContactNo(e.target.value)} value={sContactNo}></Form.Control>\r\n                  </Row>\r\n              }\r\n            </Form.Group>\r\n          </Form>\r\n          \r\n          <Button variant=\"primary\" block size=\"lg\" style={{marginRight:'1vw'}} onClick={() => setEditPassword(!editPassword)}>Edit Password</Button>\r\n          <Popup\r\n            modal\r\n            closeOnDocumentClick={false}\r\n            trigger={open =>\r\n              <Button variant=\"success\"  className=\"btn-submit\" block size=\"lg\">\r\n                Submit\r\n              </Button>\r\n            }\r\n          >\r\n            {close => <ConfirmSubmitPopup close={close} />}\r\n          </Popup>\r\n\r\n        </div>\r\n        </>\r\n        : null\r\n      }\r\n      {\r\n        editPassword\r\n        ? <div> \r\n        <Form.Group size=\"lg\" className=\"user-form__input-container user-form__input-container--edit-password\" controlId=\"password\">\r\n              <span className=\"user-span__edit-password-header\">Edit Password</span>\r\n              <Row className=\"user-form__row user-form__row--update-password\">\r\n                <Form.Label className=\"user-form__label user-form__label--update-user\">Current Password</Form.Label>\r\n                <Form.Control type=\"password\" className=\"user-form__input\" placeholder=\"Enter current password\" required\r\n                  value={oldPassword} onChange={(e) => setOldPassword(e.target.value)} />\r\n\r\n                <Form.Label className=\"user-form__label user-form__label--update-user\">New Password</Form.Label>\r\n                <Form.Control type=\"password\" className=\"user-form__input\" placeholder=\"Enter new password\" required\r\n                  value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n\r\n                <Form.Label className=\"user-form__label user-form__label--update-user\">Confirm New Password</Form.Label>\r\n                <Form.Control type=\"password\" className=\"user-form__input\" placeholder=\"Confirm new password\" required\r\n                  value={cfmNewPassword} onChange={(e) => setCfmNewPassword(e.target.value)} />\r\n              </Row>\r\n              <Button variant='success' block size=\"lg\" style={{marginRight:'1vw'}} onClick={()=>updateUserpwdById({password: newPassword, user_id:user_id})}>Save</Button>\r\n              <Button variant='secondary' block size=\"lg\" onClick={()=>setEditPassword(!editPassword)}>Back</Button>\r\n        </Form.Group>\r\n        </div>\r\n        : null\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nfunction OrderHistory() {\r\n  const [orderHistory, setOrderHistory] = useState([])\r\n  const [orderItems, setOrderItems] = useState([])\r\n  useEffect(() => {\r\n    getOrderHistByUserId(window.localStorage.getItem('user_id'))\r\n  }, [])\r\n\r\n  const getOrderHistByUserId = (user_id) => {\r\n    fetch(`https://apibounwe.herokuapp.com/orderhistory/${user_id}`, {\r\n      headers: { 'access_right': localStorage.getItem('access_right'), authorization: `Bearer ${localStorage.getItem('jwttoken')}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        if (json.err !== \"Order history not found\") {\r\n          // alert(JSON.stringify(json))\r\n          setOrderHistory(json)\r\n        }\r\n        json.map((order) => {\r\n          getOrderItemByOrderId(order.order_id)\r\n        })\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const getOrderItemByOrderId = (order_id) => {\r\n    fetch(`https://apibounwe.herokuapp.com/itemOrder/${order_id}`, {\r\n      headers: { 'access_right': localStorage.getItem('access_right') }\r\n    })\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        setOrderItems([...orderItems, json])\r\n        console.log(json)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <span className=\"user-header user-header--account\">Order History</span>\r\n      <Table style={{marginTop:'2.5vh'}} className=\"user-table user-table--account\" striped bordered hover>\r\n        <thead className=\"user-table__header\">\r\n          <tr className=\"user-table__header-row\">\r\n            <th className=\"user-table__header-data\">S/N</th>\r\n            <th className=\"user-table__header-data\">Invoice ID</th>\r\n            <th className=\"user-table__header-data\">Order Created</th>\r\n            <th className=\"user-table__header-data\">Total Amount</th>\r\n            <th className=\"user-table__header-data\">Delivery Status</th>\r\n            <th className=\"user-table__header-data\">Delivery Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"user-table__body\">\r\n          {orderHistory.map((orders, index) => (\r\n            <>\r\n            <UserOrderRow key={orders.order_id} sn={index + 1} invoice={orders.invoice_id} \r\n            cdate={new Date(orders.created_at).toUTCString().substring(0, 22)} \r\n            number={orders.order_id} customer={orders.user_id} total={orders.total_amount.toFixed(2)} status={orders.status} \r\n            ddate={new Date(orders.delivery_date).toUTCString().substring(0, 16)+\" \" + orders.delivery_time_range.substring(0,5)} />\r\n            </>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction UserAccountDetails() {\r\n  return (\r\n    <Container className=\"user-container\" fluid>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/useraccountdetails/accountdetails\">\r\n            <AccountDetails />\r\n          </Route>\r\n          <Route path={`/useraccountdetails/orderhistory`}>\r\n            <OrderHistory />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserAccountDetails;","import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport Popup from 'reactjs-popup';\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\nimport '../css/shoppingcart.css'\r\n\r\nfunction ShoppingCartRow({ cartitem, updateSummary }) {\r\n    const [cartItems, setCartItems] = useState(JSON.parse(window.localStorage.getItem('cartItems')))\r\n    const [itemNo, setItemNo] = useState(\"\")\r\n    if (cartItems === null) setCartItems([])\r\n    let cartId = JSON.parse(window.localStorage.getItem('cartId'))\r\n    const [cartItem, setCartItem] = useState(cartitem)\r\n    const deleteCartItembyId = (cartitem_id) => {\r\n        if (cartId === null) {\r\n            cartItems.map((item, index) => {\r\n                if (item.stock_id === cartitem_id) {\r\n                    cartItems.splice(index, 1)\r\n                }\r\n                return item\r\n            })\r\n            window.localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n            if (JSON.parse(window.localStorage.getItem('cartItems')).length === 0) {\r\n                window.localStorage.removeItem('cartItems')\r\n            }\r\n            window.location.reload()\r\n        } else {\r\n            fetch(`https://apibounwe.herokuapp.com/cartItem/${cartitem_id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    updateSummary(window.localStorage.getItem('user_id'))\r\n                    getCartItemByUserId(localStorage.getItem('user_id')).then((lengthOfCartItems) => {\r\n                        if (lengthOfCartItems.length === 0) {\r\n                            window.location.reload()\r\n                        }\r\n                    })\r\n                }).catch((err) => {\r\n                    alert(`Error at deleteCartItemById: ${err}`)\r\n                    console.log(err);\r\n                });\r\n        }\r\n\r\n\r\n\r\n    }\r\n    const ConfirmDeletePopup = ({ close }) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Delete?</h3>\r\n                {cartItem.cartitem_id !== undefined ?\r\n                    <Button className=\"popup-card__button\" onClick={() => deleteCartItembyId(cartItem.cartitem_id)} type=\"submit\">OK</Button>\r\n                    : <Button className=\"popup-card__button\" onClick={() => deleteCartItembyId(cartItem.stock_id)} type=\"submit\">OK</Button>}\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n    const addToSession = (stock_id) => {\r\n        if (cartItem.quantity < 51) {\r\n            setItemNo(itemNo + 1)\r\n            cartItem.quantity = cartItem.quantity + 1\r\n            cartItem.price += cartItem.stock_price\r\n            cartItems.map((item, index) => {\r\n                if (item.stock_id === stock_id) {\r\n                    cartItems[index] = cartItem\r\n                }\r\n                return item\r\n            })\r\n            window.localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n            updateSummary(window.localStorage.getItem('user_id'))\r\n            console.log(window.localStorage.getItem(\"cartItems\"))\r\n            return\r\n        }\r\n        alert(`Can't add above 50`)\r\n    }\r\n    const minusFromSession = (stock_id) => {\r\n        if (cartItem.quantity > 1) {\r\n            setItemNo(itemNo - 1)\r\n            cartItem.quantity = cartItem.quantity - 1\r\n            cartItem.price -= cartItem.stock_price\r\n            cartItems.map((item, index) => {\r\n                if (item.stock_id === stock_id) {\r\n                    cartItems[index] = cartItem\r\n                }\r\n                return item\r\n            })\r\n            window.localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n            updateSummary(window.localStorage.getItem('user_id'))\r\n            console.log(window.localStorage.getItem(\"cartItems\"))\r\n            return\r\n        }\r\n        alert(`Quantity cannot be 0`)\r\n    }\r\n    const addToDB = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/cartItem`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'access_right': localStorage.getItem('access_right'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                let newCartItem = {\r\n                    \"quantity\": cartItem.quantity + 1, \"cartitem_id\": cartItem.cartitem_id, \"user_id\": cartItem.user_id,\r\n                    \"product_img\": cartItem.product_img, \"product_name\": cartItem.product_name, \"product_desc\": cartItem.product_desc,\r\n                    \"stock_id\": cartItem.stock_id, \"stock_size\": cartItem.stock_size, \"stock_price\": cartItem.stock_price\r\n                }\r\n                setCartItem({ ...cartItem, ...newCartItem })\r\n                updateSummary(window.localStorage.getItem('user_id'))\r\n            }).catch((err) => {\r\n                alert(`Error at updateCartItemById(Add): ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n    const minusFromDB = (data) => {\r\n        if (data.quantity < 1) {\r\n            alert(`Quantity cannot be 0`)\r\n            return\r\n        }\r\n        fetch(`https://apibounwe.herokuapp.com/cartItem`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'access_right': localStorage.getItem('access_right'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                let newCartItem = {\r\n                    \"quantity\": cartItem.quantity - 1, \"cartitem_id\": cartItem.cartitem_id, \"user_id\": cartItem.user_id,\r\n                    \"product_img\": cartItem.product_img, \"product_name\": cartItem.product_name, \"product_desc\": cartItem.product_desc,\r\n                    \"stock_id\": cartItem.stock_id, \"stock_size\": cartItem.stock_size, \"stock_price\": cartItem.stock_price\r\n                }\r\n                setCartItem({ ...cartItem, ...newCartItem })\r\n                updateSummary(window.localStorage.getItem('user_id'))\r\n            }).catch((err) => {\r\n                alert(`Error at updateCartItemById(Minus): ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n    const getCartItemByUserId = (user_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            if (user_id === null) {\r\n                return\r\n            }\r\n            fetch(`https://apibounwe.herokuapp.com/cartuser/${user_id}`)\r\n                .then((res) => {\r\n                    if (res.status === 404) {\r\n                        resolve([])\r\n                    }\r\n                    else {\r\n                        resolve(res.json())\r\n                    }\r\n                }).catch((err) => {\r\n                    alert(`Error at getCartItemByUser: ${err}`)\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* New Product Row */}\r\n            <Row className=\"user-inner-row user-inner-row--cart user-inner-row--cart-items\">\r\n                <Col style={{ padding: '0' }} className=\"user-inner-col user-inner-col--product-image \" md={2}>\r\n                    <img className=\"user-image\" src={cartItem.product_img} alt=\"Product\" />\r\n                </Col>\r\n\r\n                <Col className=\"user-inner-col user-inner-col--product-details\" md={2}>\r\n                    <Row className=\"product-title\">{cartItem.product_name}</Row>\r\n                    {/* <Row className=\"product-description\">{cartItem.product_desc}</Row> */}\r\n                </Col>\r\n\r\n                <Col className=\"user-inner-col user-inner-col--price-weight\" md={1}>\r\n                    <Row className=\"product-size\">{cartItem.stock_size}</Row>\r\n\r\n                    <Row className=\"product-price\">${cartItem.stock_price.toFixed(2)}</Row>\r\n                </Col>\r\n\r\n                <Col className=\"user-inner-col user-inner-col--product-quantity\" style={{ marginLeft: '2.5vw' }} md={2}>\r\n                    <Row className=\"user-deep-row user-deep-row--edit-stock\">\r\n                        <Col style={{ padding: '0' }} md={2}>\r\n                            <Button className=\"user-form__button user-form__button--minus\"\r\n                                onClick={() => cartId == null ? minusFromSession(cartItem.stock_id) :\r\n                                    minusFromDB({ stock_id: cartItem.stock_id, quantity: cartItem.quantity - 1, cartitem_id: cartItem.cartitem_id })}>\r\n                                -</Button>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Control style={{ textAlign: 'center', padding: '0' }} type=\"text\" value={cartItem.quantity} disabled />\r\n                        </Col>\r\n                        <Col style={{ padding: '0' }} md={2}>\r\n                            <Button className=\"user-form__button user-form__button--minus\"\r\n                                onClick={() => cartId == null ? addToSession(cartItem.stock_id) :\r\n                                    addToDB({ stock_id: cartItem.stock_id, quantity: cartItem.quantity + 1, cartitem_id: cartItem.cartitem_id })}>\r\n                                +</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col style={{ padding: '0', paddingLeft: '1.05vw' }} className=\"user-inner-col user-inner-col--product-removal\" md={1}>\r\n                    <Popup modal closeOnDocumentClick={false}\r\n                        trigger={open => <Button variant=\"danger\" className=\"shopping-cart__button\">Remove</Button>}>\r\n                        {close => <ConfirmDeletePopup close={close} />}\r\n                    </Popup>\r\n                </Col>\r\n                <Col style={{}} className=\"user-inner-col user-inner-col--product-line-price\" md={{ span: 1, offset: 1 }}>${cartItem.price !== undefined ? (cartItem.price).toFixed(2) :\r\n                    (cartItem.stock_price * cartItem.quantity).toFixed(2)}</Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShoppingCartRow\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../css/shoppingcart.css'\r\nimport ShoppingCartRow from './ShoppingCartRow';\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ShoppingCart = () => {\r\n    const [cartItems, setCartItems] = useState(JSON.parse(window.localStorage.getItem('cartItems')))\r\n    let user_id = window.localStorage.getItem('user_id')\r\n\r\n    const [subTotal, setSubTotal] = useState(\"\")\r\n    let subtotal = 0;\r\n\r\n    useEffect(() => {\r\n        if (cartItems !== null) {\r\n            cartItems.map((item) => { subtotal += item.price })\r\n            setSubTotal(subtotal.toFixed(2))\r\n        }\r\n        getCartItemByUserId(window.localStorage.getItem('user_id'))\r\n    }, [])\r\n\r\n    const getCartItemByUserId = (user_id) => {\r\n        if (user_id === null) {\r\n            return\r\n        }\r\n        fetch(`https://apibounwe.herokuapp.com/cartuser/${user_id}`)\r\n            .then((res) => {\r\n                if (res.status==404) {\r\n                    return\r\n                } else {\r\n                    let subtotal = 0\r\n                    res.json().then((json) => {\r\n                        json.map((cart) => {\r\n                            subtotal += cart.stock_price * cart.quantity\r\n                        })\r\n                        setSubTotal(subtotal.toFixed(2))\r\n                        setCartItems(json)\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const updateSummary = useCallback(\r\n        (user_id) => {\r\n            // alert(user_id)\r\n            if (user_id != null) {\r\n                getCartItemByUserId(user_id)\r\n            } else {\r\n                setCartItems(JSON.parse(window.localStorage.getItem('cartItems')))\r\n                subtotal = 0\r\n                cartItems.map((item) => { subtotal += item.price; return item })\r\n                setSubTotal(subtotal.toFixed(2))\r\n            }\r\n        },\r\n        [],\r\n    )\r\n\r\n    return (\r\n        <Container className=\"user-container user-container--shopping-cart\" fluid>\r\n            <Row className=\"user-row\">\r\n                <span className=\"user-span user-span--cart-header\">Shopping Cart</span>\r\n            </Row>\r\n            <Row className=\"user-row\">\r\n                {(cartItems !== null && JSON.stringify(cartItems) !== JSON.stringify([]) && Array.isArray(cartItems)) ?\r\n                    <Col className=\"user-col user-col--cart\" md={{ span: 8 }}>\r\n                        <Row style={{ marginTop: '0' }} className=\"user-inner-row user-inner-row--cart user-inner-row--cart-header\">\r\n                            <span className=\"user-span user-span--items-header\">Your Items</span>\r\n                        </Row>\r\n                        <Row style={{ marginTop: '0' }} className=\"user-inner-row user-inner-row--cart user-inner-row--label\">\r\n                            <Col className=\"user-inner-col user-inner-col--label\" md={{ span: 1 }}>\r\n                                Image\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" md={{ span: 1, offset: 1 }}>\r\n                                Product\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" style={{ paddingLeft: '1.55vw' }} md={1}>\r\n                                Price\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" style={{ paddingLeft: '1.75vw' }} md={{ span: 1, offset: 1 }}>\r\n                                Quantity\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" md={{ span: 1, offset: 1 }}>\r\n                                Remove\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" md={{ span: 1, offset: 1 }}>\r\n                                Total\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            cartItems.map((cart) => (\r\n                                <ShoppingCartRow key={cart.stock_id} cartitem={cart} updateSummary={updateSummary}></ShoppingCartRow>\r\n                            ))\r\n                        }\r\n                    </Col>\r\n                    :\r\n                    <Col className=\"user-col user-col--cart-empty\" md={{ span: 10 }}>\r\n                        <Row style={{ marginTop: '0' }} className=\"user-inner-row user-inner-row--cart user-inner-row--cart-header\">\r\n                            <span className=\"user-span user-span--items-header\">Your Items</span>\r\n                        </Row>\r\n                        <Row style={{ marginTop: '0' }} className=\"user-inner-row user-inner-row--cart user-inner-row--label\">\r\n                            <Col className=\"user-inner-col user-inner-col--label\" md={{ span: 1 }}>\r\n                                Image\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" md={{ span: 1, offset: 1 }}>\r\n                                Product\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" style={{ paddingLeft: '1.55vw' }} md={1}>\r\n                                Price\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" style={{ paddingLeft: '1.75vw' }} md={{ span: 1, offset: 1 }}>\r\n                                Quantity\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" md={{ span: 1, offset: 1 }}>\r\n                                Remove\r\n                            </Col>\r\n                            <Col className=\"user-inner-col user-inner-col--label\" md={{ span: 1, offset: 1 }}>\r\n                                Total\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"user-inner-row user-inner-row--empty\">No Items in Cart Yet</Row>\r\n                    </Col>\r\n                }\r\n                {(cartItems !== null && JSON.stringify(cartItems) !== JSON.stringify([]) && Array.isArray(cartItems)) ?\r\n                    <Col className=\"user-col user-col--checkout\" md={{ span: 2 }}>\r\n                        <Row className=\"user-inner-row user-inner-row--checkout user-inner-row--order-header\">\r\n                            <span className=\"user-span user-span--order-header\">Order Summary</span>\r\n                        </Row>\r\n                        <Row className=\"user-inner-row user-inner-row--checkout user-inner-row--grand-total\">\r\n                            <Col style={{ padding: '0' }} className=\"user-inner-col user-inner-col--title\">\r\n                                <span className=\"user-span user-span--title user-span--subtotal-title\">Subtotal: </span>\r\n                                <br />\r\n                                <span className=\"user-span user-span--title user-span--shipping-title\">Shipping: </span>\r\n                                <br />\r\n                                <span className=\"user-span user-span--title user-span--grand-total-title\">Grand Total:</span>\r\n                                <br />\r\n                            </Col>\r\n                            <Col style={{ padding: '0' }} className=\"user-inner-col user-inner-col--text\">\r\n                                <span className=\"user-span user-span--text user-span--subtotal-text\">${(Number(subTotal)).toFixed(2)}</span>\r\n                                <br />\r\n                                <span className=\"user-span user-span--text user-span--shipping-text\">$8.00</span>\r\n                                <br />\r\n                                <span className=\"user-span user-span--text user-span--grand-total-text\"><b>${(Number(subTotal) + 8).toFixed(2)}</b></span>\r\n                                <br />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ paddingLeft: '0' }} className=\"user-inner-row user-inner-row--checkout user-inner-row--checkout-button\">\r\n                            {user_id == null\r\n                                ? <Link to=\"/login\">\r\n                                    <Button variant=\"success\" block=\"lg\" className=\"user-inner-row__button\">Checkout</Button>\r\n                                </Link>\r\n                                : null\r\n                            }\r\n                            {user_id !== null\r\n                                ? <Link to=\"/payment\">\r\n                                    <Button variant=\"success\" block=\"lg\" className=\"user-inner-row__button\">Checkout</Button>\r\n                                </Link>\r\n                                : null\r\n                            }\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    : null}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Container, Col, Card } from \"react-bootstrap\";\r\nimport '../css/registerpage.css'\r\nconst speakeasy = require('speakeasy');\r\n\r\nfunction RegisterPage() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [postalCode, setPostalCode] = useState(0);\r\n    const [unitNo, setUnitNo] = useState(\"\");\r\n    const [pContactNo, setPContactNo] = useState(\"\");\r\n    const [sContactNo, setSContactNo] = useState(\"\");\r\n    const [newPass, setNewPass] = useState(\"\");\r\n    const [cfmPass, setCfmPass] = useState(\"\");\r\n    const [letVerify, setLetVerify] = useState(false)\r\n    const [tempSecret, setTempSecret] = useState(\"\")\r\n    const [token, setToken] = useState(\"\");\r\n    const [verified, setVerified] = useState(false)\r\n\r\n    const [newPassInputText, setNewPassInputText] = useState(\"Password should only be 6 - 15 characters long, minimum 1 small letter, 1 big letter, 1 special character and you can only use these special characters ('!','@','#','*','_').\");\r\n    const [cfmPassInputText, setCfmPassInputText] = useState(\"Password should only be 6 - 15 characters long, minimum 1 small letter, 1 big letter, 1 special character and you can only use these special characters ('!','@','#','*','_').\");\r\n\r\n    const [lengthFailText, setLengthFailText] = useState(\"\");\r\n    const [minimumOneSmallLetterFailText, setMinimumOneSmallLetterFailText] = useState(\"Minimum 1 small letter needed.\");\r\n    const [minimumOneBigLetterFailText, setMinimumOneBigLetterFailText] = useState(\"Minimum 1 capital letter needed.\");\r\n    const [minimumOneNumberFailText, setMinimumOneNumberFailText] = useState(\"Minimum 1 number needed\");\r\n    const [minimumOneSpecialCharacterFailText, setMinimumOneSpecialCharacterFailText] = useState(\"Minimum 1 special character needed\");\r\n    const [nonAllowedSpecialCharacterFoundText, setNonAllowedSpecialCharacterFoundText] = useState(\"\");\r\n\r\n    const [newPassMainRegexFail, setNewPassMainRegexFail] = useState(false);\r\n    const [passwordValidateBoolean, setPasswordValidateBoolean] = useState(true);\r\n\r\n    const validateNewPassword = () => {\r\n        var mainPasswordRegEx = new RegExp(\"(?=^.{6,15}$)((?=.*)(?=.*[A-Z])(?=.*[a-z])|(?=.*)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*\");\r\n\r\n        var allowedSpecialCharactersRegEx = new RegExp(\"[!@#*_]+\");\r\n\r\n        var nonAlphaNumericRegEx = new RegExp(\"[^A-Za-z0-9]\");\r\n        var nonNumberRegEx = new RegExp(\"^[a-zA-Z]+$\");\r\n        var smallLetterRegEx = new RegExp(\"[a-z]\");\r\n        var bigLetterRegEx = new RegExp(\"[A-Z]\");\r\n\r\n        const smallLetterArray = [];\r\n        const bigLetterArray = [];\r\n        const numberArray = [];\r\n        const specialCharacterArray = [];\r\n        const specialAllowedCharacterArray = [];\r\n\r\n        const inputString = newPass;\r\n        const inputStringArray = inputString.split('');\r\n\r\n        const passwordInitialValidation = mainPasswordRegEx.test(inputString);\r\n\r\n        if (inputString.length === 0) {\r\n            const failArray = [setLengthFailText, setMinimumOneSmallLetterFailText, setMinimumOneBigLetterFailText, setMinimumOneNumberFailText, setMinimumOneSpecialCharacterFailText, setNonAllowedSpecialCharacterFoundText]\r\n            failArray.forEach((txt) => {\r\n                txt(\"\");\r\n            })\r\n        }\r\n\r\n        const specialCharacterRegEx = (inputStringArray) => {\r\n\r\n            //for each character in the input:\r\n            inputStringArray.forEach((arrayCharacter) => {\r\n                //takes out all non-alphanumeric characters (leaves in only special characters)\r\n                if (nonAlphaNumericRegEx.test(arrayCharacter)) {\r\n                    //takes in all the non-allowed special characters\r\n                    if (!allowedSpecialCharactersRegEx.test(arrayCharacter)) {\r\n                        //appends all to string and tests if its empty to make sure there are no non-allowed special characters\r\n                        specialCharacterArray.push(arrayCharacter);\r\n                        console.log(\"One  \" + specialCharacterArray);\r\n                        if (!(specialCharacterArray.join('') === '')) {\r\n                            setNewPassInputText(\"Password Invalid\");\r\n                            setNewPassMainRegexFail(true);\r\n                            setNonAllowedSpecialCharacterFoundText(\"Illegal Special Characters used. Only these Special Characters are allowed ('!','@','#','*','_').\");\r\n                        }\r\n                    }\r\n                    console.log(\"acknowledged\")\r\n                    if (allowedSpecialCharactersRegEx.test(arrayCharacter)) {\r\n                        if (specialCharacterArray.join('').length === 0) {\r\n                            setNewPassInputText(\"Password Valid\");\r\n\r\n                            setNewPassMainRegexFail(false);\r\n\r\n                            const failArray = [setLengthFailText, setMinimumOneSmallLetterFailText, setMinimumOneBigLetterFailText, setMinimumOneNumberFailText, setMinimumOneSpecialCharacterFailText, setNonAllowedSpecialCharacterFoundText]\r\n\r\n                            failArray.forEach((txt) => {\r\n                                txt(\"\");\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                } else {\r\n                    setNonAllowedSpecialCharacterFoundText(\"\");\r\n                }\r\n            })\r\n        }\r\n\r\n        const inputFailRegEx = (inputString, inputStringArray) => {\r\n            //judge length and set text according to failure\r\n            if (!(inputString.length >= 6 && inputString.length <= 15)) {\r\n                (inputString.length < 6) ? setLengthFailText(\"Password is too short.\") : setLengthFailText(\"Password is too long.\");\r\n            }\r\n\r\n            if ((inputString.length >= 6 && inputString.length <= 15) || inputString.length === 0) {\r\n                setLengthFailText(\"\")\r\n            }\r\n\r\n            if (inputString.length > 0) {\r\n                setMinimumOneSmallLetterFailText(\"Minimum 1 small letter needed.\");\r\n                setMinimumOneBigLetterFailText(\"Minimum 1 capital letter needed.\");\r\n                setMinimumOneNumberFailText(\"Minimum 1 number needed\");\r\n                setMinimumOneSpecialCharacterFailText(\"Minimum 1 special character needed\");\r\n            }\r\n            //for each character in the input:\r\n            inputStringArray.forEach((arrayCharacter) => {\r\n                //takes out all non-alphanumeric characters\r\n                if (!nonAlphaNumericRegEx.test(arrayCharacter)) {\r\n                    //takes in all non-numeric characters\r\n                    if (nonNumberRegEx.test(arrayCharacter)) {\r\n                        //takes in all small letters\r\n                        if (smallLetterRegEx.test(arrayCharacter)) {\r\n                            smallLetterArray.push(arrayCharacter);\r\n                            if ((smallLetterArray.join('').length > 0)) {\r\n                                setMinimumOneSmallLetterFailText(\"\")\r\n                            } else {\r\n                                setMinimumOneSmallLetterFailText(\"Minimum 1 small letter needed.\")\r\n                            }\r\n                        }\r\n                        //takes in all big letters\r\n                        if (bigLetterRegEx.test(arrayCharacter)) {\r\n                            bigLetterArray.push(arrayCharacter);\r\n                            if ((bigLetterArray.join('').length > 0)) {\r\n                                setMinimumOneBigLetterFailText(\"\")\r\n                            } else {\r\n                                setMinimumOneBigLetterFailText(\"Minimum 1 capital letter needed.\")\r\n                            }\r\n                        }\r\n\r\n                        //takes in all numeric characters\r\n                    } else {\r\n                        numberArray.push(arrayCharacter);\r\n\r\n                        if ((numberArray.join('').length > 0)) {\r\n                            setMinimumOneNumberFailText(\"\")\r\n                        } else {\r\n                            setMinimumOneNumberFailText(\"Minimum 1 number needed.\")\r\n                        }\r\n                    }\r\n                } else {\r\n                    specialAllowedCharacterArray.push(arrayCharacter);\r\n                    if ((specialAllowedCharacterArray.join('').length > 0)) {\r\n                        setMinimumOneSpecialCharacterFailText(\"\")\r\n                    } else {\r\n                        setMinimumOneSpecialCharacterFailText(\"Minimum 1 special character needed.\")\r\n                    }\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        //Password needs 1 small, 1 large, 1 number, 1 special character\r\n        if (passwordInitialValidation) {\r\n            setNewPassInputText(\"\");\r\n            specialCharacterRegEx(inputStringArray);\r\n        }\r\n\r\n        //Fail\r\n        if (!mainPasswordRegEx.test(inputString)) {\r\n            setNewPassInputText(\"Password Invalid\");\r\n            setNewPassMainRegexFail(true);\r\n            specialCharacterRegEx(inputStringArray);\r\n            inputFailRegEx(inputString, inputStringArray);\r\n        }\r\n\r\n    }\r\n\r\n    const validateCfmPassword = () => {\r\n        setPasswordValidateBoolean(newPass === cfmPass);\r\n        if (!passwordValidateBoolean) {\r\n            setCfmPassInputText(\"Passwords are not the same\")\r\n        } else {\r\n            setCfmPassInputText(\"Passwords are the same!\");\r\n        }\r\n    }\r\n    //Check if email is new\r\n    const checkUserEmail = (email) => {\r\n        alert(email)\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/checkUseremail/${email}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    resolve(json)\r\n                }).catch((err) => {\r\n                    alert(`Error at checkUserEmail: ${err}`)\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n    }\r\n\r\n    //Generate 6-digit token\r\n    const genToken = (temp_secret_key) => {\r\n        fetch(`https://apibounwe.herokuapp.com/genToken/${temp_secret_key}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setTempSecret(temp_secret_key)\r\n                sendEmail({\r\n                    from: 'eugenekeezl20.19@ichat.sp.edu.sg', to: email,\r\n                    subject: 'Sending u a 6-digit token to verify your email for the first time', text: JSON.stringify(json), \r\n                    html: `<h3><b>2 Factor Authentication token</b></h3>\r\n                    <p>Here's your 6-digit code to complete your account registration:</p>\r\n                    <p><b>${json.token}</b></p>\r\n                    <p>It will expire <b>5 minutes from now</b></p>`\r\n                })\r\n            }).catch((err) => {\r\n                alert(`Error at genToken: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //Send an email to the user(Currently only can send to emails that I verify in AWS SES cause still in sandbox,\r\n    //to send to anyone need finish doing and hosting the website to submit request to AWS for review)\r\n    const sendEmail = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/sendEmail`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(JSON.stringify(json))\r\n                alert('An email has been sent to you to verify your email before adding you to DB')\r\n            }).catch((err) => {\r\n                alert(`Error at sendEmail(Register): ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //Verify the user's entered 6 digit token\r\n    const verifyToken = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/userVerify`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                if (json) {\r\n                    //Now send the entered information into the database\r\n                    registerUser({\r\n                        email: email, first_name: firstName, last_name: lastName, password: cfmPass, address: address,\r\n                        postal_code: postalCode, unit_no: unitNo, pcontact_no: pContactNo, scontact_no: sContactNo,\r\n                        secret_key: tempSecret\r\n                    })\r\n                    //And redirect to login page\r\n                    setVerified(true)\r\n                    return\r\n                }\r\n                alert(JSON.stringify(`Token verified is ${JSON.stringify(json)}`))\r\n            }).catch((err) => {\r\n                alert(`Error at verifyToken: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //Register a user\r\n    const registerUser = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/userRegister`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(JSON.stringify(json))\r\n            }).catch((err) => {\r\n                alert(`Error at registerUser: ${err}`);\r\n            });\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (newPass.length === 0) {\r\n            alert(\"Please Enter a Password.\")\r\n        } else {\r\n            if (!newPassMainRegexFail) {\r\n                if (passwordValidateBoolean) {\r\n                    //Generate a 6 digit token for verification with email\r\n                    checkUserEmail(email)\r\n                    .then((json) => {\r\n                        if(json) {\r\n                            setLetVerify(true)\r\n                            genToken(speakeasy.generateSecret().base32)\r\n                        }\r\n                        else {\r\n                            alert(`Your email ${email} is already in use`)\r\n                        }\r\n                    })\r\n                    \r\n                } else {\r\n                    alert(\"New password and confirm password are different. Please use the same one\");\r\n                }\r\n            } else {\r\n                alert(\"Password Invalid. Please try again.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        validateNewPassword();\r\n        validateCfmPassword();\r\n    });\r\n\r\n    return (\r\n        <Container className=\"user-container user-container--register\" fluid>\r\n            {verified ? <Redirect push to=\"/login\" /> : null}\r\n            <Col style={{paddingBottom:'7.5vh'}} className=\"user-col user-col--register-page\" md={{span:8,offset:2}}>\r\n                <div className=\"user-div__header-div\">\r\n                    <span className=\"user-span__header user-span__header--register\">Register Account</span>\r\n                </div>\r\n                <div className=\"user-div__register-form\">\r\n                {!letVerify ?\r\n                    <Form className=\"user-card__password-form\" onSubmit={onSubmit}>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__email\" controlId=\"email\">\r\n                            <Form.Label className=\"user-card__label\">Enter Email<span className=\"user-span__asterisk\">*</span></Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                className=\"user-card__input\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Email\"\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__first-name\" controlId=\"first-name\">\r\n                            <Form.Label className=\"user-card__label\">Enter First Name<span className=\"user-span__asterisk\">*</span></Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                className=\"user-card__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter First Name\"\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__last-name\" controlId=\"last-name\">\r\n                            <Form.Label className=\"user-card__label\">Enter Last Name<span className=\"user-span__asterisk\">*</span></Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                className=\"user-card__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Last name\"\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__address\" controlId=\"address\">\r\n                            <Form.Label className=\"user-card__label\">Enter Address</Form.Label>\r\n                            <Form.Control\r\n                                className=\"user-card__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Address\"\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__postal-code\" controlId=\"postal-code\">\r\n                            <Form.Label className=\"user-card__label\">Enter Postal Code (Do Not Include Letters)</Form.Label>\r\n                            <Form.Control\r\n                                maxLength=\"6\"\r\n                                className=\"user-card__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Postal Code\"\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__unit-no\" controlId=\"unit-no\">\r\n                            <Form.Label className=\"user-card__label\">Enter Unit No</Form.Label>\r\n                            <Form.Control\r\n                                className=\"user-card__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Unit No\"\r\n                                onChange={(e) => setUnitNo(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__p-contact-no\" controlId=\"p-contact-no\">\r\n                            <Form.Label className=\"user-card__label\">Enter Primary Contact Number<span className=\"user-span__asterisk\">*</span> (Do Not Include +65)</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                className=\"user-card__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Primary Contact No\"\r\n                                onChange={(e) => setPContactNo(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__s-contact-no\" controlId=\"s-contact-no\">\r\n                            <Form.Label className=\"user-card__label\">Enter Secondary Contact Number (Do Not Include +65)</Form.Label>\r\n                            <Form.Control\r\n                                className=\"user-card__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Secondary Contact No\"\r\n                                onChange={(e) => setSContactNo(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__new-password\" controlId=\"new-password\">\r\n                            <Form.Label className=\"user-card__label\">New Password<span className=\"user-span__asterisk\">*</span></Form.Label>\r\n                            <Form.Control\r\n                                maxLength=\"15\"\r\n                                required\r\n                                autoFocus\r\n                                className=\"user-card__input\"\r\n                                type=\"password\"\r\n                                placeholder=\"Create New Password\"\r\n                                onChange={(e) => setNewPass(e.target.value)}\r\n                            />\r\n                            {\r\n                                (newPass === \"\")\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub-label\">Password should only be 6 - 15 characters long, minimum 1 small letter, 1 big letter, 1 special character and you can only use these special characters ('!','@','#','*','_').</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(newPass === \"\")\r\n                                    ?\r\n                                    <>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(newPass === \"\")\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub-label\">{newPassInputText}</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(lengthFailText.length === 0)\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub-label\">{lengthFailText}</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(minimumOneSmallLetterFailText.length === 0)\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub-label\">{minimumOneSmallLetterFailText}</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(minimumOneBigLetterFailText.length === 0)\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub-label\">{minimumOneBigLetterFailText}</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(minimumOneNumberFailText.length === 0)\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub-label\">{minimumOneNumberFailText}</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(minimumOneSpecialCharacterFailText.length === 0)\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub-label\">{minimumOneSpecialCharacterFailText}</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(nonAllowedSpecialCharacterFoundText.length === 0)\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub-label\">{nonAllowedSpecialCharacterFoundText}</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                        </Form.Group>\r\n                        <Form.Group size=\"md\" className=\"user-card__form-group user-card__form-group--register-page user-card__confirm-password\" controlId=\"confirm-password\">\r\n                            <Form.Label className=\"user-card__label\">Confirm Password<span className=\"user-span__asterisk\">*</span></Form.Label>\r\n                            <Form.Control\r\n                                maxLength=\"15\"\r\n                                required\r\n                                className=\"user-card__input\"\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm Password\"\r\n                                onChange={(e) => setCfmPass(e.target.value)}\r\n                            />\r\n                            {\r\n                                !(cfmPass === \"\")\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Label className=\"user-card__sub--label\">{cfmPassInputText}</Form.Label>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                !(cfmPass === \"\")\r\n                                    ?\r\n                                    <>\r\n                                        <br />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            <br />\r\n                        </Form.Group>\r\n                        <Button className=\"user-card__btn--submit\" variant=\"success\" size=\"lg\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                    : null}\r\n                {letVerify ?\r\n                    <Form>\r\n                        <Card.Title className=\"user-card__header\">Verify the code sent to your email</Card.Title>\r\n                        <Form.Group className=\"user-form__input-container\" size=\"lg\" controlId=\"text\">\r\n                            <Form.Label className=\"user-form__label\">6-digit code</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                className=\"user-form__input\"\r\n                                value={token}\r\n                                onChange={(e) => setToken(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button className=\"user-form__button\" block size=\"lg\"\r\n                            onClick={() => verifyToken({ temp_secret_key: tempSecret, token: token })}>\r\n                            Verify\r\n                        </Button>\r\n                    </Form>\r\n                    : null}\r\n                </div>\r\n            </Col>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterPage","import React from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport { Link } from \"react-router-dom\";\r\nimport '../css/sidebar.css'\r\n\r\n\r\nfunction UserDetailSidebar() {\r\n    return (\r\n        <>\r\n            <Accordion className=\"sidebar\" flush>\r\n                <Accordion.Item className=\"sidebar__item\" eventKey='0'>\r\n                    <Link\r\n                        to={{\r\n                            pathname: `/useraccountdetails/accountdetails`\r\n                        }}>\r\n                        <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                            <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                <span className=\"sidebar__header-card-span\">Account Details</span>\r\n                            </div>\r\n                        </Accordion.Header>\r\n                    </Link>\r\n                </Accordion.Item>\r\n                <Accordion.Item className=\"sidebar__item\" eventKey='0'>\r\n                    <Link\r\n                        to={{\r\n                            pathname: `/useraccountdetails/orderhistory`\r\n                        }}>\r\n                        <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                            <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                <span className=\"sidebar__header-card-span\">Order History</span>\r\n                            </div>\r\n                        </Accordion.Header>\r\n                    </Link>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDetailSidebar;","import React, { useEffect, useRef } from \"react\";\r\n\r\nfunction PaypalButton({ product, orderInfo }) {\r\n    const paypalRef = useRef()\r\n    let user_id = window.localStorage.getItem('user_id')\r\n\r\n    const addCart = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/cart`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(JSON.stringify(json))\r\n                window.localStorage.setItem('cartId', json.insertId)\r\n                //console.log(orderInsert)\r\n                window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/successfulorder/' + orderInsert\r\n            }).catch((err) => {\r\n                alert(`Error at addCart: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getCartItemByUserId = (user_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/cartuser/${user_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n    }\r\n\r\n    const deleteCartItemByCartId = (cart_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/cartitembycartid/${cart_id}`, {\r\n                method: 'DELETE'\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const deleteCartbyUserId = (user_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/cart/${user_id}`, {\r\n                method: 'DELETE'\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    let orderInsert = 0\r\n    const createOrder = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            // alert(JSON.stringify(data))\r\n            fetch(`https://apibounwe.herokuapp.com/order`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    //setOrderInsert(json.insertId)\r\n                    orderInsert = json.insertId\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const createOrderItem = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            // alert(JSON.stringify(data))\r\n            fetch(`https://apibounwe.herokuapp.com/orderItem`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getUserById = (user_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            if (user_id === null) {\r\n                return\r\n            }\r\n            fetch(`https://apibounwe.herokuapp.com/user/${user_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        })\r\n    }\r\n\r\n    const sendEmail = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/sendEmail`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n            }).catch((err) => {\r\n                // alert(`Error at sendEmail(Invoicing): ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCartItemByUserId(user_id).then((jsonCartItems) => {\r\n            window.paypal.Buttons({\r\n                createOrder: (data, actions) => {\r\n                    return actions.order.create({\r\n                        intent: \"CAPTURE\",\r\n                        purchase_units: product\r\n                    });\r\n                },\r\n                onApprove: async (data, actions) => {\r\n                    console.log(data)\r\n                    await actions.order.capture()\r\n                    let orderData = {\r\n                        user_id: user_id,\r\n                        invoice_id: data.orderID,\r\n                        delivery_date: orderInfo.delivery_date.toISOString().substr(0, 10),\r\n                        delivery_time_range: orderInfo.delivery_time_range,\r\n                        total_amount: product[0].amount.value,\r\n                        shipping_address: orderInfo.shipping_address + \" \" + orderInfo.unit,\r\n                        postal_code: orderInfo.postal_code,\r\n                        status: \"Pending\"\r\n                    }\r\n                    console.log(JSON.stringify(orderData))\r\n                    createOrder(orderData)\r\n                        .then((json) => {\r\n                            let items = jsonCartItems\r\n                            for (let i of items) {\r\n                                let itemData = {\r\n                                    order_id: json.insertId,\r\n                                    stock_id: i.stock_id,\r\n                                    quantity: i.quantity,\r\n                                    item_price: (i.quantity * i.stock_price).toFixed(2)\r\n                                }\r\n                                createOrderItem(itemData)\r\n                            }\r\n                            getUserById(localStorage.getItem('user_id')).then((userResult) => {\r\n                                sendEmail({\r\n                                    from: 'eugenekeezl20.19@ichat.sp.edu.sg', to: userResult[0].email,\r\n                                    subject: 'Invoice from Ninemars Enterprise', text: 'Invoice',\r\n                                    html: `<!DOCTYPE html>\r\n                                    <html>\r\n                                        <head>\r\n                                            <meta charset=\"utf-8\" />\r\n                                            <title>A simple, clean, and responsive HTML invoice template</title>\r\n                                    \r\n                                            <style>\r\n                                                .invoice-box {\r\n                                                    max-width: 800px;\r\n                                                    margin: auto;\r\n                                                    padding: 30px;\r\n                                                    border: 1px solid #eee;\r\n                                                    box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);\r\n                                                    font-size: 16px;\r\n                                                    line-height: 24px;\r\n                                                    font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;\r\n                                                    color: #555;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table {\r\n                                                    width: 100%;\r\n                                                    line-height: inherit;\r\n                                                    text-align: left;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table td {\r\n                                                    padding: 5px;\r\n                                                    vertical-align: top;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr td:nth-child(2) {\r\n                                                    text-align: right;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr.top table td {\r\n                                                    padding-bottom: 20px;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr.top table td.title {\r\n                                                    font-size: 45px;\r\n                                                    line-height: 45px;\r\n                                                    color: #333;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr.information table td {\r\n                                                    padding-bottom: 40px;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr.heading td {\r\n                                                    background: #eee;\r\n                                                    border-bottom: 1px solid #ddd;\r\n                                                    font-weight: bold;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr.details td {\r\n                                                    padding-bottom: 20px;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr.item td {\r\n                                                    border-bottom: 1px solid #eee;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr.item.last td {\r\n                                                    border-bottom: none;\r\n                                                }\r\n                                    \r\n                                                .invoice-box table tr.total td:nth-child(2) {\r\n                                                    border-top: 2px solid #eee;\r\n                                                    font-weight: bold;\r\n                                                }\r\n                                    \r\n                                                @media only screen and (max-width: 600px) {\r\n                                                    .invoice-box table tr.top table td {\r\n                                                        width: 100%;\r\n                                                        display: block;\r\n                                                        text-align: center;\r\n                                                    }\r\n                                    \r\n                                                    .invoice-box table tr.information table td {\r\n                                                        width: 100%;\r\n                                                        display: block;\r\n                                                        text-align: center;\r\n                                                    }\r\n                                                }\r\n                                            </style>\r\n                                        </head>\r\n                                    \r\n                                        <body>\r\n                                            <div class=\"invoice-box\">\r\n                                                <table cellpadding=\"0\" cellspacing=\"0\">\r\n                                                    <tr class=\"top\">\r\n                                                        <td colspan=\"2\">\r\n                                                            <table>\r\n                                                                <tr>\r\n                                                                    <td class=\"title\">\r\n                                                                        <img src='https://res.cloudinary.com/dptmkjeww/image/upload/v1629032035/proposals/logo_ik32wp.png' style=\"width: 100%; max-width: 300px\" />\r\n                                                                    </td>\r\n                                    \r\n                                                                    <td>\r\n                                                                        Invoice #: ${orderData.invoice_id}<br />\r\n                                                                        Created: ${new Date().toDateString()}<br />\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                    \r\n                                                    <tr class=\"information\">\r\n                                                        <td colspan=\"2\">\r\n                                                            <table>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        Ninemars, Enterprise.<br />\r\n                                                                        1 BUKIT BATOK CRESCENT, #05-20, WCEGA PLAZA<br />\r\n                                                                        Singapore 658064\r\n                                                                    </td>\r\n                                    \r\n                                                                    <td>\r\n                                                                        Personal<br />\r\n                                                                        ${userResult[0].first_name} ${userResult[0].last_name}<br />\r\n                                                                        ${userResult[0].email}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                    \r\n                                                    <tr class=\"heading\">\r\n                                                        <td>Item</td>\r\n                                    \r\n                                                        <td>Price</td>\r\n                                                    </tr>\r\n                                        ${jsonCartItems.map((jsonCartItem, index) => (\r\n                                        `<tr class=${jsonCartItems.length - index == 1 ? \"item\" : \"item_last\"} key=${index}>\r\n                                                        <td>${jsonCartItem.product_name}</td>\r\n                                                        <td>$${(jsonCartItem.stock_price * jsonCartItem.quantity).toFixed(2)}</td></tr>`\r\n                                    ))} \r\n                                        <tr class=\"total\">\r\n                                                        <td></td>\r\n                                    \r\n                                                        <td><b>Total: $${Number(orderData.total_amount).toFixed(2)}</b></td>\r\n                                                    </tr>\r\n                                                </table>\r\n                                            </div>\r\n                                        </body>\r\n                                    </html>`\r\n                                })\r\n                                sendEmail({\r\n                                    from: 'eugenekeezl20.19@ichat.sp.edu.sg', to: 'eugenekee@hotmail.sg',\r\n                                    subject: 'A New Order Has Been Made', text: 'Invoice',\r\n                                    html: `<!DOCTYPE html>\r\n                                    <html>\r\n                                        <head>\r\n                                        </head>\r\n                                        <body>\r\n                                        <div>\r\n                                            <p>${userResult[0].first_name} ${userResult[0].last_name} has made an order.</p>\r\n                                        </div>\r\n                                        </body>\r\n                                    </html>`\r\n                                })\r\n                            })\r\n                        })\r\n                        .then(() => {\r\n                            deleteCartItemByCartId(localStorage.getItem('cartId'))\r\n                                .then(() => {\r\n                                    deleteCartbyUserId(user_id).then(() => {\r\n                                        addCart({ user_id: user_id })\r\n                                    })\r\n                                })\r\n                        })\r\n                },\r\n                onError: async (data, actions) => {\r\n                    console.log(data)\r\n                }\r\n            }).render(paypalRef.current)\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div ref={paypalRef}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaypalButton","import React, { useState, useEffect } from \"react\";\r\nimport PaypalButton from \"./PaypalButton\"\r\nimport { Row, Col, Button, Form, Container } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport '../css/payment.css';\r\n\r\nfunction Payment() {\r\n  let [pay, setPay] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [address, setAddress] = useState(\"\")\r\n  const [unitnum, setUnitnum] = useState(\"\")\r\n  const [postcode, setPostcode] = useState(\"\")\r\n  const [time, setTime] = useState(\"\")\r\n  let products = JSON.parse(window.localStorage.getItem(\"cartItems\"))\r\n  const [items, setItems] = useState([])\r\n  const [display, setDisplay] = useState([])\r\n  const [totalAmt, setTotalAmt] = useState(0)\r\n  const [discount, setDiscount] = useState(0)\r\n  const [discounts, setDiscounts] = useState({})\r\n  const [discountCode, setDiscountCode] = useState(\"\")\r\n  const [order, setOrder] = useState([])\r\n  const [orderInfo, setOrderInfo] = useState({})\r\n  const [show, setShow] = useState(false)\r\n  let shipping = 8\r\n    \r\n\r\n  useEffect(() => {\r\n    getCartItemByUserId(window.localStorage.getItem('user_id'))\r\n      .then((product) => {\r\n        // alert(JSON.stringify(product))\r\n        if (products == null || product.length == 0) {\r\n          setShow(false)\r\n          window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/shoppingcart'\r\n        } else {\r\n          setShow(true)\r\n          let total = 0\r\n          let id = 1\r\n          for (var i of product) {\r\n            let x = {\r\n              name: i.product_name,\r\n              unit_amount: {\r\n                currency_code: \"SGD\",\r\n                value: i.stock_price.toFixed(2)\r\n              },\r\n              quantity: i.quantity\r\n            }\r\n            total += i.stock_price * i.quantity\r\n            setItems(items => [...items, x])\r\n            console.log(items)\r\n            setDisplay(display => \r\n              [...display,\r\n                <li className=\"user-list__item user-list__item--payment-cart\" key={id}>\r\n                  <Row style={{paddingLeft:'0.75vw'}} className=\"user-row__list-item user-row__list-item--payment-cart\">\r\n                    <Col className=\"user-col__list-item user-col__list-item--image\" md={3}>\r\n                      <div className=\"user-list__image-div user-list__image-div--payment-cart\">\r\n                        <img className=\"user-list__image user-list__image--payment-cart\" src={i.product_img}/>\r\n                      </div>\r\n                    </Col>\r\n                    <Col style={{paddingLeft:'1.5vw',paddingRight:'0'}} className=\"user-col__list-item user-col__list-item--text\" md={8}>  \r\n                      <span className=\"user-list__text user-list__text--product\">{i.product_name} </span>\r\n                      <br/>\r\n                      <span className=\"user-list__text user-list__text--price\">${i.stock_price.toFixed(2)} </span>\r\n                      <br/>\r\n                      <span className=\"user-list__text user-list__text--stock\">{i.stock_size} </span>\r\n                      <br/>\r\n                      <span className=\"user-list__text user-list__text--quantity\">Qty: {i.quantity} </span>\r\n                      <br/>\r\n                    </Col>\r\n                  </Row> \r\n                </li>\r\n              ]\r\n            )\r\n            id++\r\n          }\r\n          setTotalAmt(total)\r\n        }\r\n      })\r\n    console.log(\"item\" + order)\r\n    console.log(\"dis\" + display)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setOrder([{\r\n      description: \"Ninemars\",\r\n      amount: {\r\n        currency: \"SGD\",\r\n        value: (totalAmt * (1 - (Number(discount) / 100)) + shipping).toFixed(2),\r\n        breakdown: {\r\n          item_total: {\r\n            currency_code: \"SGD\",\r\n            value: totalAmt.toFixed(2)\r\n          },\r\n          shipping: {\r\n            currency_code: \"SGD\",\r\n            value: 8\r\n          },\r\n          discount: {\r\n            currency_code: \"SGD\",\r\n            value: (totalAmt * (Number(discount) / 100)).toFixed(2)\r\n          }\r\n        }\r\n      },\r\n      items: items\r\n    }])\r\n  }, [items, totalAmt, discount])\r\n\r\n  useEffect(() => {\r\n    setOrderInfo({ shipping_address: address, unit: unitnum, postal_code: postcode, delivery_date: startDate, delivery_time_range: time })\r\n    console.log(\"o\" + JSON.stringify(orderInfo))\r\n  }, [address, unitnum, postcode, time])\r\n\r\n  const getCartItemByUserId = (user_id) => {\r\n    return new Promise((resolve, reject) => {\r\n      if (user_id === null) {\r\n        return resolve(JSON.parse(window.localStorage.getItem(\"cartItems\")))\r\n      }\r\n      fetch(`https://apibounwe.herokuapp.com/cartuser/${user_id}`)\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          products = json\r\n          return resolve(products)\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          return reject(err)\r\n        });\r\n    })\r\n\r\n  }\r\n\r\n  const getDiscountbyName = (discount_code) => {\r\n    fetch(`https://apibounwe.herokuapp.com/discountbyname/${discount_code}`)\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        if(json.length != 0 ){\r\n        if (json[0].active != 0){\r\n          setDiscount(json[0].discount_amount)\r\n          console.log(\"hello\" + JSON.stringify(json))\r\n        } else {\r\n          alert('Invalid Discount Code')\r\n        }} else {\r\n          alert('Invalid Discount Code')\r\n        }\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {/* New Payment Page */}\r\n    <Container className=\"user-container\" fluid>\r\n      <Row className=\"user-row\">\r\n        <span className=\"user-span user-span--checkout-header\">Checkout</span> \r\n      </Row>\r\n      <Row style={{ marginLeft:'3vw' }} className=\"user-row\">\r\n        <Col className=\"user-col\" md={{span:8}}>\r\n          <Container style={{ marginBottom:\"7.5vh\" }} className=\"user-container__delivery-info\" fluid>\r\n            <Row className=\"user-inner-row user-inner-row--delivery-header\">\r\n              Delivery Information\r\n            </Row>\r\n            <Row className=\"user-inner-row user-inner-row--delivery-form\">              \r\n              <Form style={{ paddingLeft:'2.5vw' }} className=\"user-form__delivery\">\r\n                <Form.Group className=\"user-form__group\">\r\n                  <Form.Label className=\"user-form__label\">Shipping Address</Form.Label>\r\n                  <Form.Control className=\"user-form__input\" placeholder=\"Enter your shipping address here.\" onChange={(a) => setAddress(a.target.value)} value={address}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"user-form__group\">\r\n                  <Form.Label className=\"user-form__label\">Unit No.</Form.Label>\r\n                  <Form.Control className=\"user-form__input\" placeholder=\"Enter your unit number here.\" onChange={(a) => setUnitnum(a.target.value)} value={unitnum}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"user-form__group\">\r\n                  <Form.Label className=\"user-form__label\">Postal Code</Form.Label>\r\n                  <Form.Control className=\"user-form__input\" placeholder=\"Enter your postal code here.\" onChange={(a) => setPostcode(a.target.value)} value={postcode}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"user-form__group\">\r\n                  <Form.Label className=\"user-form__label\">Delivery Date</Form.Label>\r\n                  <br></br>\r\n                  <DatePicker className=\"user-form__date\" selected={startDate} onChange={(date) => setStartDate(date)} value={startDate}  />\r\n                </Form.Group>\r\n                <Form.Group className=\"user-form__group\">\r\n                  <Form.Label className=\"user-form__label\">Delivery Time</Form.Label>\r\n                  <Form.Control className=\"user-form__input\" placeholder=\"Enter in 24-hr format (e.g. 16:00-17:00)\" onChange={(a) => setTime(a.target.value)} value={time}></Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n        <Col className=\"user-col\" md={{span:3}}>\r\n          <Row style={{ padding:\"0\" }} className=\"user-inner-row user-inner-row--payment\">\r\n            <Container className=\"user-container__payment\" fluid>\r\n              <Row className=\"user-deep-row user-deep-row--payment-header\">\r\n                Payment\r\n              </Row>\r\n              <Row style={{ paddingLeft:'0',paddingTop:'0' }} className=\"user-deep-row user-deep-row--payment-content\">\r\n                <Container style={{ paddingLeft:'1vw' }} className=\"user-container__total\">\r\n                    <Form className=\"user-inner-row user-inner-row--discount-form\">\r\n                      <Form.Group className=\"user-form__group user-form__group--discount\">\r\n                        <Form.Label className=\"user-form__label user-form__label--discount\">Discount Codes</Form.Label>\r\n                        <Form.Control className=\"user-form__input user-form__input--discount\" onChange={(e) => setDiscountCode(e.target.value)} placeholder=\"Enter your discount code here.\"></Form.Control>\r\n                      </Form.Group>\r\n                      <Button style={{ marginBottom:'1vh' }}  className=\"user-button__discount\" variant=\"success\" onClick={()=>getDiscountbyName(discountCode)}>\r\n                        Apply\r\n                      </Button>\r\n                    </Form>\r\n                    <span className=\"user-span__text user-span__text--title\">Subtotal: <span className=\"user-span__text user-span__text--data\">${totalAmt.toFixed(2)}</span></span>\r\n                    <br/>\r\n                    <span className=\"user-span__text user-span__text--title\">Discount: <span className=\"user-span__text user-span__text--data\">${(totalAmt * (Number(discount) / 100)).toFixed(2)}</span></span>\r\n                    <br/>\r\n                    <span className=\"user-span__text user-span__text--title\">Shipping: <span className=\"user-span__text user-span__text--data\">${shipping.toFixed(2)}</span></span>\r\n                    <br/>\r\n                    <span className=\"user-span__text user-span__text--title\">Total price: <span className=\"user-span__text user-span__text--data\"><b>${(totalAmt * (1- (Number(discount) / 100)) + 8 ).toFixed(2)}</b></span></span>\r\n                    <br/>\r\n\r\n                    {pay ? (<><br/><PaypalButton product={order} orderInfo={orderInfo} /><Button style={{ marginTop:'0' }} variant=\"danger\" onClick={() => { setPay(false) }}>Close</Button></>) :\r\n                      (<Button style={{ marginTop:'1vh' }} variant=\"success\" onClick={() => { setPay(true) }}>Payment</Button>)\r\n                    }\r\n                </Container>                \r\n              </Row>\r\n            </Container>\r\n          </Row>\r\n          <Row style={{ padding:\"0\" }} className=\"user-inner-row user-inner-row--cart\">\r\n            <Container className=\"user-container__cart\" fluid>\r\n              <Row className=\"user-deep-row user-deep-row--cart-header\">\r\n                Cart\r\n              </Row>\r\n              <Row className=\"user-deep-row user-deep-row--cart-content\">\r\n                <Container style={{marginTop:'0',paddingLeft:'0',paddingRight:'0'}} className=\"user-container__cart-scroll\" fluid>\r\n                  <ul className=\"user-list user-list--payment-cart\">\r\n                    {display}\r\n                  </ul>\r\n                </Container>\r\n              </Row>\r\n            </Container>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","import React from 'react'\r\nimport ProductCard from './ProductCard.jsx'\r\nimport RecipeCard from './RecipeCard.jsx'\r\nimport { Row, Container, Col } from 'react-bootstrap'\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport '../css/search.css'\r\nimport '../css/itemcard.css'\r\n\r\nconst Search = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [recipes, setRecipes] = useState([])\r\n\r\n    const [productSearch,setProductSearch]=useState(true);\r\n    const [recipeSearch,setRecipeSearch]=useState(false);\r\n\r\n    const [productActive,setProductActive]= useState('user-span__search user-span__search--active')\r\n    const [recipeActive,setRecipeActive]= useState('user-span__search')\r\n\r\n    let { search } = useParams()\r\n\r\n  useEffect(() => {\r\n    searchProduct(search)\r\n    searchRecipe(search)\r\n  }, [search])\r\n\r\n  const searchProduct = (search) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://apibounwe.herokuapp.com/searchproduct/${search}`)\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          setProducts(json)\r\n          return resolve(json)\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          return reject(err);\r\n        });\r\n    })\r\n  }\r\n\r\n  const searchRecipe = (search) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://apibounwe.herokuapp.com/searchrecipe/${search}`)\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          setRecipes(json)\r\n          return resolve(json)\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          return reject(err);\r\n        });\r\n    })\r\n  }\r\n\r\n      function showProductSearch() {\r\n        setProductSearch(true);\r\n        setRecipeSearch(false);\r\n        \r\n        setProductActive('user-span__search user-span__search--active');\r\n        setRecipeActive('user-span__search');\r\n      }\r\n\r\n      function showRecipeSearch() {\r\n        setProductSearch(false);\r\n        setRecipeSearch(true);\r\n\r\n        setProductActive('user-span__search');\r\n        setRecipeActive('user-span__search user-span__search--active');\r\n      }\r\n\r\n      function SearchedProducts() {\r\n        if(products.length !== 0){\r\n          return(\r\n            <>          \r\n              <Col md={{span:10,offset:1}}>\r\n                  <Row md={4} className=\"user-row__search user-row__search--products\">\r\n                    {products.map((product) => (\r\n                      <Link className=\"user-item-card__link\" to={\"/productdetails/\" + product.product_id}>\r\n                          <ProductCard key={product.product_id} name={product.product_name} img={product.product_img} price={product.stock_price} size={product.stock_size}/>\r\n                      </Link>\r\n                    ))}\r\n                </Row>\r\n              </Col>\r\n            </>\r\n          )\r\n        } else {\r\n          return(\r\n            <>\r\n              <Col md={{span:10,offset:1}}>\r\n                <Container className=\"user-container__search-null\">                  \r\n                  <span className=\"user-span__search-null\">'<span className=\"user-span__search-text\">{search}</span>' Not Found in Products</span>\r\n                </Container>\r\n              </Col> \r\n            </>\r\n          )\r\n        }\r\n      }\r\n\r\n      function SearchedRecipes() {\r\n        if(recipes.length !== 0){\r\n          return(\r\n            <>\r\n              <Col md={{span:10,offset:1}}>\r\n                <Row md={4} className=\"user-row__search user-row__search--recipes\">\r\n                  {recipes.map((recipes) => (                  \r\n                    <Link className=\"user-item-card__link\" to={\"/recipedetails/\" + recipes.recipe_id}>\r\n                      <RecipeCard key={recipes.recipe_id} id={recipes.recipe_id} img={recipes.recipe_img} name={recipes.recipe_name} desc={recipes.recipe_desc} prep_time={recipes.prep_time} cooking_time={recipes.cooking_time}/>\r\n                    </Link>\r\n                  ))}\r\n                </Row>\r\n              </Col>          \r\n            </>\r\n          )\r\n        } else {\r\n          return(\r\n            <>\r\n              <Col md={{span:10,offset:1}}>\r\n                <Container className=\"user-container__search-null\">                  \r\n                  <span className=\"user-span__search-null\">'<span className=\"user-span__search-text\">{search}</span>' Not Found in Recipes</span>\r\n                </Container>\r\n              </Col>   \r\n            </>\r\n          )\r\n        }\r\n      }\r\n\r\n    return (\r\n        <Container className=\"user-container user-container--search\" fluid>\r\n            <Row className=\"user-row\">\r\n              <Col className=\"user-col\" md={{span:3,offset:3}}>\r\n                <Container className=\"user-container__search-buttons\">\r\n                  <span onClick={showProductSearch} className={productActive}>\r\n                    Products\r\n                  </span>\r\n                </Container>\r\n              </Col>\r\n              <Col className=\"user-col\" md={{span:3}}>\r\n                <Container className=\"user-container__search-buttons\">\r\n                  <span onClick={showRecipeSearch} className={recipeActive}>\r\n                    Recipes\r\n                  </span>\r\n                </Container>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"user-row\">\r\n              {\r\n                productSearch\r\n                ?\r\n                <SearchedProducts/>\r\n                :\r\n                null\r\n              }\r\n              {\r\n                recipeSearch\r\n                ?\r\n                <SearchedRecipes/>\r\n                :\r\n                null\r\n              }\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Col, Button, Container } from 'react-bootstrap';\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport '../css/successfulorder.css'\r\n\r\nfunction SuccessfulOrder() {\r\n  let { id } = useParams()\r\n  let user_id = window.localStorage.getItem('user_id')\r\n  const [order, setOrder] = useState({})\r\n  const [total, setTotal] = useState('')\r\n  const [date, setDate] = useState('')\r\n\r\n  const getOrderByOrderId = (order_id) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://apibounwe.herokuapp.com/order/${order_id}`, {\r\n        headers: { 'access_right': localStorage.getItem('access_right') }\r\n      })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          if (user_id === JSON.stringify(json[0].user_id)) {\r\n            console.log(\"json \" + JSON.stringify(json));\r\n            setOrder(json[0])\r\n            setTotal(json[0].total_amount.toFixed(2))\r\n            setDate(json[0].delivery_date)\r\n          }\r\n          return resolve(json)\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          return reject(err);\r\n        });\r\n    })\r\n  }\r\n  const getOrderItemByOrderId = (order_id) => {\r\n\r\n  }\r\n  useEffect(() => {\r\n    getOrderByOrderId(id)\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ paddingLeft: '0', paddingRight: '0' }} className=\"user-container__success-order\" fluid>\r\n        <Col style={{ paddingLeft: '0', paddingRight: '0' }} className=\"user-col__success-order\" md={{ span: 4, offset: 4 }}>\r\n          <span className=\"user-span__success-order user-span__success-order-title--header\">Order has been made successfully!</span>\r\n          <br />\r\n          <span className=\"user-span__success-order user-span__success-order-title--invoice\">Invoice ID: <span className=\"user-span__success-order user-span__success-order-text--invoice\">{order.invoice_id}</span></span>\r\n          <br />\r\n          <span className=\"user-span__success-order user-span__success-order-title--date\">Delivery Date: <span className=\"user-span__success-order user-span__success-order-text--date\">{date.substring(0, 10)}</span></span>\r\n          <br />\r\n          <span className=\"user-span__success-order user-span__success-order-title--time\">Delivery Time: <span className=\"user-span__success-order user-span__success-order-text--time\">{order.delivery_time_range}</span></span>\r\n          <br />\r\n          <span className=\"user-span__success-order user-span__success-order-title--amt\">Total Amount: <span className=\"user-span__success-order user-span__success-order-text--amt\">${total}</span></span>\r\n          <br />\r\n          <span className=\"user-span__success-order user-span__success-order-title--address\">Shipping Address: <span className=\"user-span__success-order user-span__success-order-text--address\">{order.shipping_address}</span></span>\r\n          <br />\r\n          <span className=\"user-span__success-order user-span__success-order-title--postal\">Postal Code: <span className=\"user-span__success-order user-span__success-order-text--postal\">{order.postal_code}</span></span>\r\n          <br />\r\n          <Link to=\"/home\"><Button className=\"user-button__success-order\" variant=\"success\">OK</Button></Link>\r\n        </Col>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\nexport default SuccessfulOrder;","import React, { useState } from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Container, Row, Col, Modal } from \"react-bootstrap\";\r\nimport '../css/login.css';\r\n\r\nconst AdminLogin = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n\r\n    const [letValidate, setLetValidate] = useState(false)\r\n\r\n    const [adminInfo, setAdminInfo] = useState({})\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const validateForm = () => {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n    //Login with email and password\r\n    const adminLogin = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/adminlogin`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                // If email of password is wrong\r\n                if (json.err != undefined) {\r\n                    alert(json.err)\r\n                    return\r\n                }\r\n                setAdminInfo({\r\n                    admin_id: json[0].admin_id, email: json[0].email,\r\n                    secret_key: json[0].secret_key, secret_key: json[0].secret_key,\r\n                    access_right: json[0].access_right\r\n                })\r\n                //Call the function to generate a 6 digit token\r\n                getSecretByEmail(json[0].email)\r\n                setLetValidate(true)\r\n            }).catch((err) => {\r\n                alert(`Error at adminlogin: ${err}`);\r\n            });\r\n    }\r\n    //Generate a 6 digit token using the email\r\n    const getSecretByEmail = (email) => {\r\n        fetch(`https://apibounwe.herokuapp.com/adminToken/${email}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                //Call the function to send the 6 digit token to user, uncomment when you need to use\r\n                sendEmail({\r\n                    from: 'eugenekeezl20.19@ichat.sp.edu.sg', to: email,\r\n                    subject: 'Sending u a 6-digit token to validate', text: JSON.stringify(json),\r\n                    html: `<h3><b>2 Factor Authentication token for admin</b></h3>\r\n                    <p>Here's your 6-digit code to login to your admin account:</p>\r\n                    <p><b>${json.token}</b></p>\r\n                    <p>It will expire <b>5 minutes from now</b></p>`\r\n                })\r\n                // alert(JSON.stringify(json))\r\n            }).catch((err) => {\r\n                alert(`Error at getSecretByEmail: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const sendEmail = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/sendEmail`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                alert('An email has been sent to you')\r\n            }).catch((err) => {\r\n                alert(`Error at sendEmail(Login): ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    //Validate the user's entered 6 digit token\r\n    const validateToken = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/adminValidate`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                if (json) {\r\n                    setLetValidate(false)\r\n                    window.localStorage.setItem(\"admin_id\", adminInfo.admin_id)\r\n                    window.localStorage.setItem('access_right', adminInfo.access_right)\r\n                    window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageadmins'\r\n                    return\r\n                }\r\n                alert(\"Incorrect 6-digit code\")\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        adminLogin({ email, password })\r\n    }\r\n\r\n    const VerifyModal = () => {\r\n        return (\r\n            <>\r\n\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal title</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container>\r\n\r\n                        </Container>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\">Understood</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className=\"user-container\" fluid>\r\n            <Row className=\"user-row\">\r\n                <Col className=\"user-col-blank\">\r\n                </Col>\r\n                <Col className=\"user-col\">\r\n                    <div className=\"user-card user-card--login\">\r\n                        <Form className=\"user-form\" onSubmit={onSubmit}>\r\n                            <h4>Admin Login</h4>\r\n                            <Form.Group className=\"user-form__input-container\" size=\"lg\" controlId=\"email\">\r\n                                <Form.Label className=\"user-form__label\">Email</Form.Label>\r\n                                <Form.Control\r\n                                    autoFocus\r\n                                    className=\"user-form__input\"\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"user-form__input-container\" size=\"lg\" controlId=\"password\">\r\n                                <Form.Label className=\"user-form__label\">Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    className=\"user-form__input\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button className=\"user-form__button\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                                Login\r\n                            </Button>\r\n                            {/* <Link to=\"/register\">\r\n                                <Button className=\"user-form__button\" block size=\"lg\">\r\n                                    Register\r\n                                </Button>\r\n                            </Link> */}\r\n                            {/* <VerifyModal /> */}\r\n                            {letValidate ? <div>\r\n                                <Form.Group className=\"user-form__input-container\" size=\"lg\" controlId=\"text\">\r\n                                    <Form.Label className=\"user-form__label\">6-digit code</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        className=\"user-form__input\"\r\n                                        value={token}\r\n                                        onChange={(e) => setToken(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button className=\"user-form__button\" block size=\"lg\"\r\n                                    onClick={() => validateToken({\r\n                                        temp_secret_key: adminInfo.temp_secret_key,\r\n                                        secret_key: adminInfo.secret_key, token: token,\r\n                                        email: adminInfo.email\r\n                                    })}>\r\n                                    Verify\r\n                                </Button>\r\n                            </div> : null}\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"admin-col-blank\">\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminLogin\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nconst AdminProductDetails = () => {\r\n    const [product_name, setProductName] = useState('')\r\n    const [product_desc, setProductDescription] = useState('')\r\n    const [pcat_id, setProductCategory] = useState('')\r\n    const [psubcat_id, setProductSubCategory] = useState('')\r\n    const [product_img, setProductImage] = useState('')\r\n    const [imgname, setImgName] = useState('')\r\n    const [stock_sizes, setStockSizes] = useState([]);\r\n    const [stock_prices, setStockPrices] = useState([])\r\n\r\n    const [productCategories, setProductCategories] = useState([])\r\n    const [productSubCategories, setProductSubCategories] = useState([{ psubcat_id: 999, psubcat_name: 'No subcategory' }])\r\n\r\n    const onBack = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageproducts'\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllProductCategories()\r\n    }, [])\r\n\r\n    const getAllProductCategories = () => {\r\n        fetch(`https://apibounwe.herokuapp.com/productCategory`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setProductCategories(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getProductSubCategories = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/productSubCategories/${data}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(data)\r\n                setProductCategory(data)\r\n                setProductSubCategories(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                setProductCategory(data)\r\n            });\r\n    }\r\n\r\n    const upload = (file) => {\r\n        setProductImage(file)\r\n        fetch(`https://apibounwe.herokuapp.com/upload`, { \r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'access_right': localStorage.getItem('access_right')\r\n            },\r\n            body: JSON.stringify({file: file})\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setImgName(json.content.fileUrl)\r\n            }).catch((err) => {\r\n                alert(`Error at upload: ${err}`)\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const addProduct = (data) => {\r\n        alert(JSON.stringify(data))\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/product`, {\r\n                method: `POST`,\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const admin_name = \"Jennifer\"\r\n        addProduct({\r\n            \"psubcat_id\":psubcat_id, \"pcat_id\":pcat_id, \"product_name\":product_name,\r\n            \"product_desc\":product_desc, \"product_img\":imgname, \"admin_name\":admin_name, \"stock_sizes\": stock_sizes, \"stock_prices\": stock_prices\r\n        }).then(\r\n            window.location.href='https://anarchygene.github.io/fyp-frontend/#/manageproducts'\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"admin-card\">\r\n            <Button className=\"admin-button--back\" onClick={onBack}>Back</Button>\r\n            <h1 className=\"admin-header\">Add product details</h1>\r\n            <Form className=\"admin-form\" onSubmit={onSubmit}>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"productName\">\r\n                    <Form.Label className=\"admin-form__input-label\">Product Name</Form.Label>\r\n                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter product name\" required\r\n                        value={product_name} onChange={(e) => setProductName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"productDescription\">\r\n                    <Form.Label className=\"admin-form__input-label\">Product Description</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter product description\" required\r\n                        value={product_desc} onChange={(e) => setProductDescription(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"stockSizes\">\r\n                    <Form.Label className=\"admin-form__input-label\">Stock Sizes</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter stock sizes(Separated by comma)\" required\r\n                        value={stock_sizes} onChange={(e) => setStockSizes(e.target.value.trim().split(','))} />\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"stockPrices\">\r\n                    <Form.Label className=\"admin-form__input-label\">Stock Prices</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter stock prices(Separated by comma)\" required\r\n                        value={stock_prices} onChange={(e) => setStockPrices(e.target.value.trim().split(','))} />\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"category\">\r\n                    <Form.Label className=\"admin-form__input-label\">Product Category</Form.Label>\r\n                    <Form.Control as=\"select\" className=\"admin-form__input\" value={pcat_id} onChange={(e) => getProductSubCategories(e.target.value)} required>\r\n                        <option>-Choose a Product Category-</option>\r\n                        {productCategories.map((productCategory) => (\r\n                            <option className=\"admin-form__input-option\" key={productCategory.pcat_id} value={productCategory.pcat_id}>\r\n                                {productCategory.pcat_name}\r\n                            </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"subCategory\">\r\n                    <Form.Label className=\"admin-form__input-label\">Product Subcategory</Form.Label>\r\n                    <Form.Control as=\"select\" className=\"admin-form__input\" value={psubcat_id} onChange={(e) => setProductSubCategory(e.target.value)} required>\r\n                    <option>-Choose a Product Subcategory-</option>\r\n                        {productSubCategories.map((productSubCategory) => (\r\n                            <option className=\"admin-form__input-option\" key={productSubCategory.psubcat_id} value={productSubCategory.psubcat_id}>\r\n                                {productSubCategory.psubcat_name}\r\n                            </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"image\">\r\n                    <Form.Label className=\"admin-form__input-label\">Product Image</Form.Label>\r\n                    <Form.Control type=\"file\" className=\"admin-form__input\" accept=\"image/*\" value={product_img}\r\n                    onChange={(e) => upload(e.target.value)} />\r\n                </Form.Group>\r\n                {imgname == '' ? null: <img src={imgname} width='500' height='300'/>}\r\n\r\n                <Button className=\"admin-form__button\" variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminProductDetails\r\n","import { BrowserRouter as Router, Switch, Route, useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { Button, Form, Card, Col, Row, Table } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\n\r\nfunction EditProducts() {\r\n    const [edit, setEdit] = useState(false)\r\n    const [stock, setStock] = useState([])\r\n    const [stockPrice, setStockPrice] = useState(\"\")\r\n    const [stockSize, setStockSize] = useState(\"\")\r\n    const [newPrice, setNewPrice] = useState(\"\")\r\n    const [newSize, setNewSize] = useState(\"\")\r\n    const [product_name, setProductName] = useState('')\r\n    const [product_desc, setProductDescription] = useState('')\r\n    const [product_img, setProductImage] = useState('')\r\n    const [productCategories, setProductCategories] = useState([])\r\n    const [productSubCategories, setProductSubCategories] = useState([])\r\n\r\n    const [pcat_id, setProductCategory] = useState('')\r\n    const [pcat_name, setProductCategoryName] = useState('')\r\n    const [psubcat_id, setProductSubCategory] = useState('')\r\n    const [psubcat_name, setProductSubCategoryName] = useState('')\r\n\r\n    const onBack = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageproducts'\r\n    }\r\n\r\n    let { product_id } = useParams()\r\n    useEffect(() => {\r\n        // alert(product_id)\r\n        getProductById(product_id)\r\n        getAllProductCategories()\r\n        getAllProductSubCategories()\r\n        getProductStockById(product_id)\r\n    }, [])\r\n\r\n    const getProductById = (product_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/productbyid/${product_id}`, { headers: { 'access_right': \"USER\" } })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                // alert(JSON.stringify(json[0]))\r\n                setProductName(json[0].product_name)\r\n                setProductDescription(json[0].product_desc)\r\n                setProductImage(json[0].product_img)\r\n                setProductCategory(json[0].pcat_id)\r\n                getProductCategorybyId(json[0].pcat_id)\r\n                setProductSubCategory(json[0].psubcat_id)\r\n                getProductSubCategorybyId(json[0].psubcat_id)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getProductCategorybyId = (pcat_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/productCategory/${pcat_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                // console.log(JSON.stringify(json[0]))\r\n                setProductCategoryName(json[0].pcat_name)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n    }\r\n\r\n    const getProductSubCategorybyId = (psubcat_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/productSubCategory/${psubcat_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                // console.log(JSON.stringify(json))\r\n                setProductSubCategoryName(json[0].psubcat_name)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n    }\r\n\r\n    const getProductStockById = (product_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/stockbyid/${product_id}`, { headers: { 'access_right': \"USER\" } })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setStock(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n\r\n    const getAllProductCategories = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/productCategory`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    setProductCategories(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getAllProductSubCategories = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/productSubCategories`, { headers: { 'access_right': \"USER\" } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    setProductSubCategories(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n\r\n    const getProductSubCategories = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/productSubCategories/${data}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    // console.log(data)\r\n                    setProductCategory(data)\r\n                    setProductSubCategories(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    setProductCategory(data)\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const updateProductbyId = (data) => {\r\n        // alert(JSON.stringify(data))\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/product`, {\r\n                method: `PUT`,\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(data)\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    console.log(JSON.stringify(json))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const updateStockbyId = (data) => {\r\n        // alert(JSON.stringify(data))\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/stock`, {\r\n                method: `PUT`,\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(data)\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    console.log(JSON.stringify(json))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const addStock = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/stock`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'access_right': localStorage.getItem('access_right')\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(data))\r\n                    console.log(JSON.stringify(json))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const deleteProductSizeById = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/productSize`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    console.log(data)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        let admin_name = \"Jennifer\"\r\n        updateProductbyId({\r\n            psubcat_id: psubcat_id, pcat_id: pcat_id, product_name: product_name,\r\n            product_desc: product_desc, product_img: product_img, admin_name: admin_name, product_id: product_id\r\n        }).then(\r\n            window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/manageproducts\"\r\n        )\r\n    }\r\n\r\n\r\n    let [editName, setEditName] = useState(false)\r\n    let [editDescription, setEditDescription] = useState(false)\r\n    let [editCategory, setEditCategory] = useState(false)\r\n    let [editSubcategory, setEditSubcategory] = useState(false)\r\n    let [editImage, setEditImage] = useState(false)\r\n\r\n\r\n    const onClickName = () => {\r\n\r\n        setEditName(true)\r\n\r\n        let boolean_array = [setEditDescription, setEditCategory, setEditSubcategory, setEditImage];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n    const onClickDesc = () => {\r\n\r\n        setEditDescription(true)\r\n\r\n        let boolean_array = [setEditName, setEditCategory, setEditSubcategory, setEditImage];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n\r\n    const onClickImage = () => {\r\n\r\n        setEditImage(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditCategory, setEditSubcategory];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-card\">\r\n            <Button className=\"admin-button\" onClick={onBack}>Back</Button>\r\n            <h1 className=\"admin-header\">Edit product details</h1>\r\n            {\r\n                !edit\r\n                    ?\r\n                    <Form className=\"admin-form\" onSubmit={onSubmit}>\r\n                        <Button variant=\"success\" onClick={() => setEdit(!edit)}>Edit Stock</Button>\r\n                        <Form.Group className=\"admin-form__input-container\" className=\"admin\" controlId=\"productName\">\r\n                            <Form.Label className=\"admin-form__label\">Product Name</Form.Label>\r\n                            {\r\n                                !editName\r\n                                    ?\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <Col className=\"admin-form__col\" xs={10}>\r\n                                            <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={product_name}>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col className=\"admin-form__col\" xs={2}>\r\n                                            <PencilSquare className=\"admin-form__icon\" onClick={onClickName} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                editName\r\n                                    ?\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <Form.Control type=\"name\" placeholder=\"Enter product name\" className=\"admin-form__input\" required\r\n                                            value={product_name} onChange={(e) => setProductName(e.target.value)} />\r\n                                    </Row>\r\n                                    : null\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"admin-form__input-container\" controlId=\"productDescription\">\r\n                            <Form.Label className=\"admin-form__label\">Product Description</Form.Label>\r\n                            {\r\n                                !editDescription\r\n                                    ?\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <Col className=\"admin-form__col\" xs={10}>\r\n                                            <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={product_desc}>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col className=\"admin-form__col\" xs={2}>\r\n                                            <PencilSquare className=\"admin-form__icon\" onClick={onClickDesc} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                editDescription\r\n                                    ?\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <Form.Control type=\"text\" placeholder=\"Enter product description\" className=\"admin-form__input\" required\r\n                                            value={product_desc} onChange={(e) => setProductDescription(e.target.value)} />\r\n                                    </Row>\r\n                                    : null\r\n                            }\r\n\r\n                        </Form.Group>\r\n                        <Form.Group className=\"admin-form__input-container\" controlId=\"category\">\r\n                            <Form.Label className=\"admin-form__label\">Product Category</Form.Label>\r\n                            <Form.Control as=\"select\" className=\"admin-form__input-choice\" value={pcat_id} onChange={(e) => getProductSubCategories(e.target.value)} required>\r\n                                <option>-Select a Product Category-</option>\r\n                                {productCategories.map((productCategory) => (\r\n                                    <option className=\"admin-form__input-option\" key={productCategory.pcat_id} value={productCategory.pcat_id}>\r\n                                        {productCategory.pcat_name}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"admin-form__input-container\" controlId=\"subCategory\">\r\n                            <Form.Label className=\"admin-form__label\">Product Subcategory</Form.Label>\r\n                            <Form.Control as=\"select\" className=\"admin-form__input-choice\" value={psubcat_id} required>\r\n                                <option>-Select a Product Subcategory-</option>\r\n                                {productSubCategories.map((productSubCategory) => (\r\n                                    <option className=\"admin-form__input-option\" key={productSubCategory.psubcat_id} onClick={(e) => setProductSubCategory(e.target.value)} value={productSubCategory.psubcat_id}>\r\n                                        {productSubCategory.psubcat_name}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"admin-form__input-container\" controlId=\"image\">\r\n                            <Form.Label className=\"admin-form__label\">Product Image</Form.Label>\r\n                            {\r\n                                !editImage\r\n                                    ?\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <Col className=\"admin-form__col\" xs={2}>\r\n                                            <h6>{product_img}</h6>\r\n                                            <Card className=\"admin-form__card\">\r\n                                                <Card.Img className=\"admin-form__card-image\" src={product_img} variant=\"top\" />\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col className=\"admin-form__col\">\r\n                                            <PencilSquare className=\"admin-form__icon\" onClick={onClickImage} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                editImage\r\n                                    ?\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <Form.Control type=\"text\" className=\"admin-form__input-file\" value={product_img} label=\"Select Image Here\" onChange={(e) => setProductImage(e.target.value)} />\r\n                                    </Row>\r\n                                    : null\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Button className=\"admin-form__button\" variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                edit\r\n                    ?\r\n                    <Form>\r\n                        <Button variant=\"success\" onClick={() => setEdit(!edit)}>Edit Products</Button>\r\n                        <p>* When editing a specific row, please ensure the other rows are empty</p>\r\n                        <p>* Both Stock Sizes and Prices has to be keyed in again for updating</p>\r\n                        <Table className=\"admin-table\" striped bordered hover>\r\n                            <thead className=\"admin-table__header\">\r\n                                <tr className=\"admin-table__header-row\">\r\n                                    <th className=\"admin-table__header-col\">Stock Size</th>\r\n                                    <th className=\"admin-table__header-col\">Stock Price</th>\r\n                                    <th className=\"admin-table__header-col\">Save</th>\r\n                                    <th className=\"admin-table__header-col\">Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"admin-table__body\">\r\n                                {stock.map((stock) => (\r\n                                    <tr className=\"admin-table__body-row\" key={stock.stock_id}>\r\n                                        <td className=\"admin-table__body-data\">\r\n                                            <Form.Group className=\"admin-form__input-container\" controlId=\"stockSize\">\r\n                                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder={stock.stock_size}\r\n                                                    onChange={(e) => setStockSize(e.target.value)} />\r\n                                            </Form.Group>\r\n                                        </td>\r\n                                        <td className=\"admin-table__body-data\">\r\n                                            <Form.Group className=\"admin-form__input-container\" controlId=\"stockPrice\">\r\n                                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder={stock.stock_price}\r\n                                                    onChange={(e) => setStockPrice(e.target.value)} />\r\n                                            </Form.Group>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button onClick={() => updateStockbyId({ stock_size: stockSize, stock_price: stockPrice, stock_id: stock.stock_id }).then(window.location.reload())}>Save</Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button variant=\"danger\" onClick={() => deleteProductSizeById({ \"stock_id\": stock.stock_id }).then(window.location.reload())}>Delete</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                <tr>\r\n                                    <td>\r\n                                        <Form.Group className=\"admin-form__input-container\" controlId=\"stockSizes\">\r\n                                            <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter stock size\"\r\n                                                value={newSize} onChange={(e) => setNewSize(e.target.value)} />\r\n                                        </Form.Group>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Form.Group className=\"admin-form__input-container\" controlId=\"stockPrice\">\r\n                                            <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter stock price\"\r\n                                                value={newPrice} onChange={(e) => setNewPrice(e.target.value)} />\r\n                                        </Form.Group>\r\n                                    </td>\r\n                                    <td colspan=\"2\">\r\n                                        <Button onClick={() => addStock({ product_id: product_id, stock_size: newSize, stock_price: newPrice }).then(window.location.reload())}>Add Stock</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProducts;\r\n","import React from 'react'\r\nimport { Card, Button, Col } from 'react-bootstrap'\r\nimport '../css/itemcard.css'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Popup from 'reactjs-popup';\r\n\r\nfunction ProductCardAdmin({ id, name, img, deleteFunction, price, size}) {\r\n\r\n    const ConfirmDeletePopup = ({close}) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Delete?</h3>\r\n                <Button className=\"popup-card__button\" onClick={() => deleteFunction(id).then(window.location.href='https://anarchygene.github.io/fyp-frontend/#/manageproducts')} type=\"submit\">OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Col className=\"admin-card-col\" xs={3}>\r\n            <Card style={{backgroundColor:'white'}} className=\"admin-item-card\">\r\n                <Card.Img className=\"admin-item-card__image\" variant=\"top\" src={img} />\r\n                <Card.Body className=\"admin-item-card__body\">\r\n                    <Card.Title className=\"admin-item-card__title\">{name}</Card.Title>\r\n                    <Card.Subtitle className=\"admin-item-card__subtitle\">${price} | {size}</Card.Subtitle>\r\n                    <NavLink to={`/editproducts/${id}`}>\r\n                        <Button  className=\"admin-item-card__button\">Edit</Button>\r\n                    </NavLink>\r\n                    <Popup\r\n                        modal\r\n                        closeOnDocumentClick={false}\r\n                        trigger={open=>\r\n                            <Button  className=\"admin-item-card__button\" variant=\"danger\">\r\n                                Delete\r\n                            </Button>\r\n                        }\r\n                        >\r\n                            {close => <ConfirmDeletePopup close={close} />}\r\n                    </Popup> \r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCardAdmin;","import { Row, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\nimport ProductCardAdmin from './ProductCardAdmin.jsx';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\n\r\nconst AdminProductsHomepage = ({ products, searchProduct }) => {\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const deleteProductbyId = (product_id, data = { product_id: product_id }) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/product`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-card\">\r\n            <Form className=\"admin-form\">\r\n                <Form.Group className=\"admin-form__input-container\">\r\n                    <Form.Control onChange={(e) => setSearch(e.target.value)} className=\"admin-form__input-container\" type=\"text\" placeholder=\"Search\" />\r\n                    <Link to={`/searchproduct/${search}`}><Button type=\"submit\">Search</Button></Link>\r\n                </Form.Group>\r\n            </Form>\r\n            <Link to=\"/adminaddproduct\"><Button>Add Product</Button></Link>\r\n            <Link to=\"/editproductcat\"><Button>Product Categories</Button></Link>\r\n            <h1>Manage Products Page</h1>\r\n            <Row>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>Products</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                {products.map((products) => (\r\n                    <ProductCardAdmin id={products.product_id} key={products.product_id} name={products.product_name} price={products.stock_price} size={products.stock_size}\r\n                        img={products.product_img} deleteFunction={deleteProductbyId}/>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminProductsHomepage;","import React, { useState, useEffect } from 'react';\r\nimport { Button, ListGroup, Accordion, ListGroupItem, Form, Card, useAccordionButton } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction EditProductCategories() {\r\n    const [productCategories, setProductCategories] = useState([])\r\n    const [productSubCategories, setProductSubCategories] = useState([])\r\n    const [add, setAdd] = useState(false)\r\n    const [newCategory, setNewCategory] = useState(\"\")\r\n    const [newSubCategory, setNewSubCategory] = useState(\"\")\r\n    const [productCategory, setProductCategory] = useState(\"\")\r\n    const [productSubcategory, setProductSubcategory] = useState(\"\")\r\n\r\n    const onBack = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageproducts'\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllProductCategories()\r\n        getAllProductSubCategories()\r\n    }, [])\r\n\r\n\r\n    function CustomToggle({ children, eventKey }) {\r\n        const decoratedOnClick = useAccordionButton(eventKey, () =>\r\n            console.log('totally custom!'),\r\n        );\r\n\r\n        return (\r\n            <button\r\n                type=\"button\"\r\n                style={{ backgroundColor: 'pink' }}\r\n                onClick={decoratedOnClick}\r\n            >\r\n                {children}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    const getAllProductCategories = () => {\r\n        fetch(`https://apibounwe.herokuapp.com/productCategory`, { headers: { 'access_right': \"USER\" } })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setProductCategories(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getAllProductSubCategories = () => {\r\n        fetch(`https://apibounwe.herokuapp.com/productSubCategories`, { headers: { 'access_right': \"USER\" } })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                // console.log(\"json \" + JSON.stringify(json));\r\n                setProductSubCategories(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const addProductCategory = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            // alert(JSON.stringify(data))\r\n            fetch(`https://apibounwe.herokuapp.com/productCategory`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const updateProductCategory = (pcat_id, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            // alert(JSON.stringify(data))\r\n            fetch(`https://apibounwe.herokuapp.com/productCategory/${pcat_id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const updateProductSubCategory = (psubcat_id, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            // alert(JSON.stringify(data))\r\n            fetch(`https://apibounwe.herokuapp.com/productSubCategory/${psubcat_id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const addProductSubCategory = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            // alert(JSON.stringify(data))\r\n            fetch(`https://apibounwe.herokuapp.com/productSubCategory`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // alert(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const deleteProductCategory = (pcat_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            // alert(JSON.stringify(data))\r\n            fetch(`https://apibounwe.herokuapp.com/productCategory/${pcat_id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right')\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    alert(\"Product Category Deleted\")\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const deleteProductSubCategory = (psubcat_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            // alert(JSON.stringify(data))\r\n            fetch(`https://apibounwe.herokuapp.com/productSubCategory/${psubcat_id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right')\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    alert(\"Product Subcategory Deleted\")\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"recipe-card\">\r\n            <Button className=\"recipe-button\" onClick={onBack}>Back</Button>\r\n            <h1 clasName=\"recipe-header\">Product Categories</h1>\r\n            <Accordion>\r\n                {productCategories.map((productCategories, index) => (\r\n                    <div>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                Category {index+1}\r\n                                <Form.Group className=\"admin-form__input-container\" controlId=\"category\">\r\n                                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder={productCategories.pcat_name} required\r\n                                     onChange={(e) => setProductCategory(e.target.value)} />\r\n                                </Form.Group>\r\n                                <Button onClick={() => updateProductCategory(productCategories.pcat_id, { pcat_name: productCategory })}>Save</Button>\r\n                                <CustomToggle eventKey={productCategories.pcat_id}>Add subcat</CustomToggle>\r\n                                <Button variant=\"danger\" onClick={() => deleteProductCategory(productCategories.pcat_id).then(window.location.href='https://anarchygene.github.io/fyp-frontend/#/editproductcat')}>Delete</Button>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={productCategories.pcat_id}>\r\n                                <Form.Group>\r\n                                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter product subcategory\" required\r\n                                        value={newSubCategory} onChange={(e) => setNewSubCategory(e.target.value)} />\r\n                                    <Button onClick={() => addProductSubCategory({ pcat_id: productCategories.pcat_id, psubcat_name: newSubCategory }).then(window.location.href='https://anarchygene.github.io/fyp-frontend/#/editproductcat')}>Save</Button>\r\n                                </Form.Group>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                        {productSubCategories.map((productSubCategory) => (\r\n                            productCategories.pcat_id == productSubCategory.pcat_id\r\n                                ? <ListGroupItem>\r\n                                    <Form.Group className=\"admin-form__input-container\" controlId=\"category\">\r\n                                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder={productSubCategory.psubcat_name} required\r\n                                     onChange={(e) => setProductSubcategory(e.target.value)} />\r\n                                </Form.Group>\r\n                                <Button onClick={() => updateProductSubCategory(productSubCategory.psubcat_id, { pcat_id: productSubCategory.pcat_id, psubcat_name: productSubcategory }).then(window.location.href='https://anarchygene.github.io/fyp-frontend/#/editproductcat')}>Save</Button>\r\n                                <Button onClick={() => deleteProductSubCategory(productSubCategory.psubcat_id).then(window.location.href='https://anarchygene.github.io/fyp-frontend/#/editproductcat')} variant=\"danger\">-</Button>\r\n                                </ListGroupItem>\r\n                                : null\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n                <ListGroup.Item>\r\n                    {\r\n                        !add\r\n                            ? <Button onClick={() => setAdd(true)}>ADD</Button>\r\n                            : null\r\n                    }\r\n                    {\r\n                        add\r\n                            ?\r\n                            <>\r\n                                <Form.Group>\r\n                                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter product category\" required\r\n                                        value={newCategory} onChange={(e) => setNewCategory(e.target.value)} />\r\n                                    <Button onClick={() => addProductCategory({ \"pcat_name\": newCategory }).then(window.location.href='https://anarchygene.github.io/fyp-frontend/#/editproductcat')}>Save</Button>\r\n                                    <Button variant=\"danger\" onClick={() => setAdd(false)}>Cancel</Button>\r\n                                </Form.Group>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </ListGroup.Item>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProductCategories;\r\n\r\n","import { Row, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport ProductCardAdmin from './ProductCardAdmin.jsx';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\n\r\nconst ProductSearch = ({ products, getProductDetail, searchProduct }) => {\r\n    const [newSearch, setNewSearch] = useState(\"\")\r\n    let { search } = useParams()\r\n\r\n    const onSearch = (search) => {\r\n        search = newSearch\r\n        window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/searchproduct/\" + search\r\n    }\r\n\r\n    const deleteProductbyId = (product_id, data={product_id:product_id}) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/product`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchProduct(search)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"admin-card\">\r\n            <Form className=\"admin-form\">\r\n                <Form.Group className=\"admin-form__input-container\">\r\n                    <Form.Control onChange={(e) => setNewSearch(e.target.value)} className=\"admin-form__input-container\" type=\"text\" placeholder=\"Search\" />\r\n                    <Link to={`/searchproduct/${search}`}><Button type=\"submit\" onClick={() => onSearch()}>Search</Button></Link>\r\n                </Form.Group>\r\n            </Form>\r\n            <Link to=\"/adminaddproduct\"><Button>Add Product</Button></Link>\r\n            <Link to=\"/editproductcat\"><Button>Product Categories</Button></Link>\r\n            <h1>Manage Products Page</h1>\r\n            <Row>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>Products</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                {products.map((products) => (\r\n                    <ProductCardAdmin id={products.product_id} key={products.product_id} name={products.product_name} \r\n                    img={products.product_img} deleteFunction={deleteProductbyId} getProductDetail={getProductDetail}/>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductSearch;","import { Container } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\nimport AdminProductDetails from './AdminProductDetails';\r\nimport EditProducts from \"./EditProducts\";\r\nimport React, { useState } from 'react';\r\nimport AdminProductsHomepage from \"./AdminProductsHomePage\";\r\nimport EditProductCategories from \"./EditProductCategories\";\r\nimport ProductSearch from \"./ProductSearch\";\r\n\r\nconst AdminProducts = ({ products }) => {\r\n    const [productsSearch, setProductsSearch] = useState([])\r\n    \r\n    const searchProduct = (search) => {\r\n        fetch(`https://apibounwe.herokuapp.com/searchproduct/${search}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(\"json \" + JSON.stringify(json));\r\n                setProductsSearch(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/adminaddproduct\">\r\n                        <AdminProductDetails />\r\n                    </Route>\r\n                    <Route exact path=\"/manageproducts\">\r\n                        <AdminProductsHomepage products={products} searchProduct={searchProduct} />\r\n                    </Route>\r\n                    <Route exact path=\"/editproducts/:product_id\">\r\n                        <EditProducts />\r\n                    </Route>\r\n                    <Route exact path=\"/editproductcat\">\r\n                        <EditProductCategories />\r\n                    </Route>\r\n                    <Route exact path=\"/searchproduct/:search\">\r\n                        <ProductSearch products={productsSearch} searchProduct={searchProduct} />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminProducts\r\n","import React from 'react'\r\nimport { Card, Button, Col } from 'react-bootstrap'\r\nimport '../css/itemcard.css'\r\nimport { Link } from \"react-router-dom\"\r\nimport Popup from 'reactjs-popup';\r\n\r\nfunction RecipeCardAdmin({ id, img, name, prep_time, cooking_time, desc }) {\r\n    const deleteRecipebyId = (recipe_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipe/${recipe_id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right')\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const ConfirmDeletePopup = ({close}) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Delete?</h3>\r\n                <Button className=\"popup-card__button\" \r\n                onClick={() => deleteRecipebyId(id)\r\n                .then(window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes')} \r\n                type=\"submit\">OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Col className=\"admin-card-col\" xs={3}>\r\n            <Card className=\"admin-item-card\">\r\n                <Card.Img className=\"admin-item-card__image\" variant=\"top\" src={img} />\r\n                <Card.Body className=\"admin-item-card__body\">\r\n                    <Card.Title className=\"admin-item-card__title\">{name}</Card.Title>\r\n                    <Card.Subtitle className=\"admin-item-card__subtitle\">Preparation Time: {prep_time} \r\n                    <br></br>\r\n                    Cooking Time: {cooking_time}</Card.Subtitle>\r\n                    <br></br>\r\n                    Serves 4\r\n                    <Card.Text className=\"admin-item-card__text\">{desc}</Card.Text>\r\n                    <Link to={`/editrecipes/${id}`}>\r\n                        <Button className=\"admin-item-card__button\" >Edit</Button>\r\n                    </Link> \r\n                    <Popup\r\n                        modal\r\n                        closeOnDocumentClick={false}\r\n                        trigger={open=>\r\n                            <Button variant=\"danger\" className=\"admin-item-card__button\">\r\n                                Delete\r\n                            </Button>\r\n                        }\r\n                        >\r\n                            {close => <ConfirmDeletePopup close={close} />}\r\n                    </Popup> \r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default RecipeCardAdmin;","import { BrowserRouter as Router, Switch, Route, useHistory, Link, Redirect } from \"react-router-dom\";\r\nimport { Container, Button, Form } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst AdminRecipeDetails = () => {\r\n    const [recipe_name, setRecipeName] = useState('')\r\n    const [prep_time, setPrepTime] = useState('')\r\n    const [cooking_time, setCookingTime] = useState('')\r\n    const [recipe_desc, setRecipeDescription] = useState('')\r\n    const [rcat_id, setRecipeCategory] = useState('')\r\n    const [rsubcat_id, setRecipeSubCategory] = useState('')\r\n    const [recipe_img_url, setRecipeImage] = useState('')\r\n    const [recipe_step, setRecipeStep] = useState('')\r\n    const [admin_name, setAdminName] = useState('Jennifer')\r\n    const [visibility, setVisibility] = useState()\r\n    const [visibility_start_date, setVisibilityStart] = useState()\r\n    const [visibility_end_date, setVisibilityEnd] = useState()\r\n    const [insertId, setInsertId] = useState('123')\r\n\r\n    const [recipeCategories, setRecipeCategories] = useState([])\r\n    \r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes'\r\n    }\r\n\r\n    useEffect(() => {\r\n         getAllRecipeCategories()\r\n         console.log(insertId)\r\n    }, [])\r\n\r\n    const onNext = () => {\r\n        // alert(JSON.stringify({\"rcat_id\": rcat_id, \"recipe_name\": recipe_name, \"prep_time\": prep_time, \"cooking_time\": cooking_time, \"recipe_desc\": recipe_desc, \"recipe_img\": recipe_img_url, \"recipe_step\": recipe_step, \"admin_name\": admin_name, \"visibility\": visibility, \"visibility_start_date\": visibility_start_date, \"visibility_end_date\": visibility_end_date}))\r\n        createRecipe({\"rcat_id\": rcat_id, \"recipe_name\": recipe_name, \"prep_time\": prep_time, \"cooking_time\": cooking_time, \"recipe_desc\": recipe_desc, \"recipe_img\": recipe_img_url, \"recipe_step\": recipe_step, \"admin_name\": admin_name, \"visibility\": visibility, \"visibility_start_date\": visibility_start_date, \"visibility_end_date\": visibility_end_date})\r\n        }\r\n\r\n    const createRecipe = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipe`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'access_right': localStorage.getItem('access_right')\r\n                  },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    setInsertId(json.insertId)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getAllRecipeCategories = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipeCategories`, {headers: {'access_right': localStorage.getItem('access_right')}})\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    setRecipeCategories(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <div className=\"admin-card\">\r\n                <Button className=\"admin-button\" onClick={onBack}>Back</Button>\r\n                <h1 className=\"admin-header\">Add recipe details</h1>            \r\n                <Form className=\"admin-form\">\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"recipeName\">\r\n                        <Form.Label className=\"admin-form__label\">Recipe Name</Form.Label>\r\n                        <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter recipe name\" required\r\n                            value={recipe_name} onChange={(e) => setRecipeName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"prepTime\">\r\n                        <Form.Label className=\"admin-form__label\">Preparation Time</Form.Label>\r\n                        <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter preparation time\" required\r\n                            value={prep_time} onChange={(e) => setPrepTime(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"cookingTime\">\r\n                        <Form.Label className=\"admin-form__label\">Cooking Time</Form.Label>\r\n                        <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter cooking time\" required\r\n                            value={cooking_time} onChange={(e) => setCookingTime(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"recipeDescription\">\r\n                        <Form.Label className=\"admin-form__label\">Recipe Description</Form.Label>\r\n                        <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter recipe description\" required\r\n                            value={recipe_desc}  onChange={(e) => setRecipeDescription(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"recipeStep\">\r\n                        <Form.Label className=\"admin-form__label\">Recipe Step</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} className=\"admin-form__input\" placeholder=\"Enter recipe steps\" required\r\n                            value={recipe_step}  onChange={(e) => setRecipeStep(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"visibility\">\r\n                        <Form.Label className=\"admin-form__label\">Visibility</Form.Label>\r\n                        <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter visibility: 1 for true and 0 for false\" required\r\n                            value={visibility} onChange={(e) => setVisibility(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"visibilityStart\">\r\n                        <Form.Label className=\"admin-form__label\">Visibility Start Date</Form.Label>\r\n                        <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"YYYY-MM-DD format\" required\r\n                            value={visibility_start_date} onChange={(e) => setVisibilityStart(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"visibilityEnd\">\r\n                        <Form.Label className=\"admin-form__label\">Visibility End Date</Form.Label>\r\n                        <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"YYYY-MM-DD format\" required\r\n                            value={visibility_end_date} onChange={(e) => setVisibilityEnd(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"recipeCategory\">\r\n                        <Form.Label className=\"admin-form__label\">Recipe Category</Form.Label>\r\n                        <Form.Control as=\"select\" className=\"admin-form__input admin-form__input--selector\" value={rcat_id} onChange={(e) => setRecipeCategory(e.target.value)} >\r\n                        {/* <Form.Control as=\"select\" className=\"admin-form__input admin-form__input--selector\" value={rcat_id} onChange={(e) => getRecipeSubCategories(e.target.value)} > */}\r\n                            <option>-Choose a Recipe Category-</option>\r\n                            {recipeCategories.map((recipeCategory) => (\r\n                                <option className=\"admin-form__input_option\" key={recipeCategory.rcat_id} value={recipeCategory.rcat_id}>\r\n                                    {recipeCategory.rcat_name}\r\n                                </option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"recipeImage\">\r\n                        <Form.Label className=\"admin-form__label\">Recipe Image</Form.Label>\r\n                        <Form.Control type=\"file\" className=\"admin-form__input admin-form__input--image\" accept=\"image/*\" value={recipe_img_url} onChange={(e) => setRecipeImage(e.target.value)} />\r\n                    </Form.Group>\r\n                    { insertId != 123\r\n                    ? <Redirect push to={`/adminaddrecipe2/${insertId}`}></Redirect>\r\n                    : null\r\n                    }\r\n                    <Button onClick={onNext} className=\"admin-button\" variant=\"primary\">\r\n                        Next\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminRecipeDetails;","import { BrowserRouter as Router, Switch, Route, useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { Button, Form, Card, Col, Row } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\n\r\nfunction EditRecipes() {\r\n    const [recipe_name, setRecipeName] = useState('')\r\n    const [prep_time, setPrepTime] = useState('')\r\n    const [cooking_time, setCookingTime] = useState('')\r\n    const [recipe_desc, setRecipeDescription] = useState('')\r\n    const [recipe_img, setRecipeImage] = useState('')\r\n    const [recipe_step, setRecipeStep] = useState('')\r\n    const [visibility, setVisibility] = useState('')\r\n    const [visibility_start_date, setVisibilityStartDate] = useState('')\r\n    const [visibility_end_date, setVisibilityEndDate] = useState('')\r\n\r\n    const [recipeCategories, setRecipeCategories] = useState([])\r\n\r\n    const [rcat_id, setRecipeCategory] = useState('Enter category here')\r\n    const [rcat_name, setRecipeCategoryName] = useState('')\r\n\r\n    let { id } = useParams();\r\n    let admin_name = \"Jennifer\"\r\n\r\n    const onBack = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes'\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllRecipeCategories()\r\n        getRecipeById(id)\r\n    }, [])\r\n\r\n    const getAllRecipeCategories = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipeCategories`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    setRecipeCategories(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n    \r\n    const updateRecipebyId = (recipe_id, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipe/${recipe_id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getRecipeById = (recipe_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/recipeid/${recipe_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setRecipeName(json[0].recipe_name)\r\n                setPrepTime(json[0].prep_time)\r\n                setCookingTime(json[0].cooking_time)\r\n                setRecipeDescription(json[0].recipe_desc)\r\n                setRecipeImage(json[0].recipe_img)\r\n                setRecipeStep(json[0].recipe_step)\r\n                setRecipeCategory(json[0].rcat_id)\r\n                setVisibility(json[0].visibility)\r\n                setVisibilityStartDate(json[0].visibility_start_date.slice(0,10))\r\n                setVisibilityEndDate(json[0].visibility_end_date.slice(0,10))\r\n                getRecipeCategoryByid(json[0].rcat_id)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n    }\r\n    const getRecipeCategoryByid = (rcat_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/recipeCategory/${rcat_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setRecipeCategoryName(json[0].rcat_name)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n    }\r\n    \r\n\r\n    let [editName, setEditName] = useState(false)\r\n    let [editDescription, setEditDescription] = useState(false)\r\n    let [editPrepTime, setEditPrepTime] = useState(false)\r\n    let [editCookingTime, setEditCookingTime] = useState(false)\r\n    let [editCategory, setEditCategory] = useState(false)\r\n    let [editImage, setEditImage] = useState(false)\r\n    let [editSteps, setEditSteps] = useState(false)\r\n    let [editVisibility, setEditVisibility] = useState(false)\r\n    let [editStart, setEditStart] = useState(false)\r\n    let [editEnd, setEditEnd] = useState(false)\r\n\r\n    const onClickName = () => {\r\n\r\n        setEditName(true)\r\n\r\n        let boolean_array = [setEditDescription, setEditPrepTime, setEditCookingTime, setEditCategory, setEditSteps, setEditImage, setEditVisibility, setEditStart, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n    const onClickDesc = () => {\r\n\r\n        setEditDescription(true)\r\n\r\n        let boolean_array = [setEditName, setEditPrepTime, setEditCookingTime, setEditCategory, setEditSteps, setEditImage, setEditVisibility, setEditStart, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n    const onClickPrepTime = () => {\r\n\r\n        setEditPrepTime(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditCookingTime, setEditCategory, setEditSteps, setEditImage, setEditVisibility, setEditStart, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n    const onClickCookingTime = () => {\r\n\r\n        setEditCookingTime(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditPrepTime, setEditCategory, setEditSteps, setEditImage, setEditVisibility, setEditStart, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n    const onClickCategory = () => {\r\n\r\n        setEditCategory(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditPrepTime, setEditCookingTime, setEditSteps, setEditImage, setEditVisibility, setEditStart, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n    const onClickSteps = () => {\r\n\r\n        setEditSteps(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditCookingTime, setEditPrepTime, setEditCategory, setEditImage, setEditVisibility, setEditStart, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n    const onClickImage = () => {\r\n\r\n        setEditImage(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditPrepTime, setEditCookingTime, setEditCategory, setEditSteps, setEditVisibility, setEditStart, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n\r\n    const onClickVisibility = () => {\r\n\r\n        setEditVisibility(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditPrepTime, setEditCookingTime, setEditCategory, setEditSteps, setEditImage, setEditStart, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n\r\n    const onClickStart = () => {\r\n\r\n        setEditStart(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditPrepTime, setEditCookingTime, setEditCategory, setEditSteps, setEditImage, setEditVisibility, setEditEnd];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n\r\n    const onClickEnd = () => {\r\n\r\n        setEditEnd(true)\r\n\r\n        let boolean_array = [setEditName, setEditDescription, setEditPrepTime, setEditCookingTime, setEditCategory, setEditSteps, setEditImage, setEditStart, setEditVisibility];\r\n\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-card\" fluid>\r\n            <Button className=\"admin-button\" onClick={onBack}>Back</Button>\r\n            <Link to={`/editrecipes2/${id}`}><Button variant=\"success\">Manage Ingredients</Button></Link>\r\n            <h1 className=\"admin-header\">Edit recipe details</h1>\r\n            <Form className=\"admin-form\">\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"recipeName\">\r\n                    <Form.Label className=\"admin-form__label\">Recipe Name</Form.Label>\r\n                    {\r\n                        !editName\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={10}>\r\n                                    <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={recipe_name}>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickName} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editName\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter recipe name\" required\r\n                                    value={recipe_name} onChange={(e) => setRecipeName(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"recipeDescription\">\r\n                    <Form.Label className=\"admin-form__label\">Recipe Description</Form.Label>\r\n                    {\r\n                        !editDescription\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={10}>\r\n                                    <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={recipe_desc}>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickDesc} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editDescription\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter recipe description\" required\r\n                                    value={recipe_desc} onChange={(e) => setRecipeDescription(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"prepTime\">\r\n                    <Form.Label className=\"admin-form__label\">Preparation Time</Form.Label>\r\n                    {\r\n                        !editPrepTime\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={10}>\r\n                                    <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={prep_time}>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickPrepTime} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editPrepTime\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter preparation time\" required\r\n                                    value={prep_time} onChange={(e) => setPrepTime(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"cookingTime\">\r\n                    <Form.Label className=\"admin-form__label\">Cooking Time</Form.Label>\r\n                    {\r\n                        !editCookingTime\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={10}>\r\n                                    <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={cooking_time}>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickCookingTime} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editCookingTime\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter cooking time\" required\r\n                                    value={cooking_time} onChange={(e) => setCookingTime(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"category\">\r\n                    <Form.Label className=\"admin-form__label\">Recipe Category</Form.Label>\r\n                    <Form.Control as=\"select\" className=\"admin-form__input-choice\" value={rcat_id} onClick={onClickCategory}\r\n                        onChange={(e) => setRecipeCategory(e.target.value)} required>\r\n                        {recipeCategories.map((recipeCategory) => (\r\n                            <option className=\"admin-form__input-option\" key={recipeCategory.rcat_id} value={recipeCategory.rcat_id}>\r\n                                {recipeCategory.rcat_name}\r\n                            </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"steps\">\r\n                    <Form.Label>Recipe Steps</Form.Label>\r\n                    {\r\n                        !editSteps\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={10}>\r\n                                    <Form.Control plaintext readOnly className=\"admin-form__input--readonly\" defaultValue={recipe_step}>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickSteps} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editSteps\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control as=\"textarea\" rows={3}  className=\"admin-form__input\" placeholder=\"Enter recipe steps\" required\r\n                                    value={recipe_step} onChange={(e) => setRecipeStep(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"image\">\r\n                    <Form.Label className=\"admin-form__label\">Recipe Image</Form.Label>\r\n                    {\r\n                        !editImage\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <h6>{recipe_img}</h6>\r\n                                    <Card>\r\n                                        <Card.Img src={recipe_img} className=\"admin-form__image\" variant=\"top\" />\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\">\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickImage} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editImage\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control type=\"text\" className=\"admin-form__input-file\" value={recipe_img} onChange={(e) => setRecipeImage(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"visibility\">\r\n                    <Form.Label className=\"admin-form__label\">Visibility</Form.Label>\r\n                    {\r\n                        !editVisibility\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={10}>\r\n                                    <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={visibility}>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickVisibility} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editVisibility\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter visibility: 1 for true and 0 for false\" required\r\n                                    value={visibility} onChange={(e) => setVisibility(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"startDate\">\r\n                    <Form.Label className=\"admin-form__label\">Visibility Start Date</Form.Label>\r\n                    {\r\n                        !editStart\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={10}>\r\n                                    <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={visibility_start_date}>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickStart} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editStart\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"YYYY-MM-DD format\" required\r\n                                    value={visibility_start_date} onChange={(e) => setVisibilityStartDate(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                </Form.Group>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"endDate\">\r\n                    <Form.Label className=\"admin-form__label\">Visibility End Date</Form.Label>\r\n                    {\r\n                        !editEnd\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Col className=\"admin-form__col\" xs={10}>\r\n                                    <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={visibility_end_date}>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col className=\"admin-form__col\" xs={2}>\r\n                                    <PencilSquare className=\"admin-form__icon\" onClick={onClickEnd} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    {\r\n                        editEnd\r\n                            ?\r\n                            <Row className=\"admin-form__row\">\r\n                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"YYYY-MM-DD format\" required\r\n                                    value={visibility_end_date} onChange={(e) => setVisibilityEndDate(e.target.value)} />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                </Form.Group>\r\n\r\n                <Button className=\"admin-form__button\" variant=\"primary\" onClick={() => updateRecipebyId(id, {rcat_id, recipe_name, prep_time, cooking_time, recipe_desc, recipe_img, recipe_step, admin_name, visibility, visibility_start_date, visibility_end_date}).then(window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/managerecipes\")}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRecipes;\r\n","import { Container, Row, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, useHistory, Route, Link, useParams } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport RecipeCardAdmin from \"./RecipeCardAdmin\";\r\n\r\nfunction RecipeSearch({ recipes, getRecipeDetail, searchRecipe }) {\r\n    const [newSearch, setNewSearch] = useState(\"\")\r\n    let { search } = useParams()\r\n\r\n    const onSearch = () => {\r\n        search = newSearch\r\n        window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/searchrecipe/\" + search\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchRecipe(search)\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n\r\n            <Row className=\"admin-row\">\r\n                <Form className=\"admin-form\">\r\n                    <Form.Group className=\"admin-form__input-container\">\r\n                        <Form.Control onChange={(e) => setNewSearch(e.target.value)} className=\"admin-form__input-container\" type=\"text\" placeholder=\"Search\" />\r\n                        <Link to={`/searchrecipe/${search}`}>\r\n                            <Button type=\"submit\" onClick={() => onSearch()}>Search</Button></Link>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                <Link to=\"/adminaddrecipe\"><Button className=\"admin-button\">Add Recipes</Button></Link>\r\n                <Link to=\"/editrecipecat\"><Button className=\"admin-button\">Recipe Categories</Button></Link>\r\n                <h1 className=\"admin-header\">Admin Recipes Page</h1>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>Recipes</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                {recipes.map((recipes) => (\r\n                    <RecipeCardAdmin id={recipes.recipe_id} key={recipes.recipe_id} img={recipes.recipe_img} name={recipes.recipe_name} desc={recipes.recipe_desc}\r\n                        prep_time={recipes.prep_time} cooking_time={recipes.cooking_time} getRecipeDetail={getRecipeDetail} />\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RecipeSearch;","import { BrowserRouter as Router, Switch, Route, useHistory, Link, useParams } from \"react-router-dom\";\r\nimport { Nav, Navbar, Container, Button, Form } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { Search } from 'react-bootstrap-icons';\r\n\r\nconst AdminRecipeDetails2 = () => {\r\n    let recipe_id = useParams().id\r\n    const [product, setProduct] = useState([])\r\n    const [stock, setStock] = useState([])\r\n    const [product_id, setProductId] = useState('')\r\n    const [stock_id, setStockId] = useState('')\r\n    const [click, setClick] = useState(false)\r\n    const [ingredient_name, setIngredientName] = useState('')\r\n    const [ingredient_qty, setIngredientQty] = useState('')\r\n    const [product_name, setProductName] = useState('')\r\n    const [swap, setSwap] = useState('')\r\n    const [optional, setOptional] = useState('')\r\n    const [ingredient_id, setIngredientId] = useState('')\r\n    const [next, setNext] = useState(false)\r\n    const [ingredients, setIngredients] = useState([])\r\n    \r\n    const onBack = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes'\r\n    }\r\n\r\n    const done = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes'\r\n    }\r\n\r\n\r\n    const onSearch = () => {\r\n        searchProduct(product_name)\r\n            .then(\r\n                setClick(true)\r\n            )\r\n    }\r\n\r\n    const searchProduct = (search) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/searchproduct/${search}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    setProduct(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getIngredientbyRecipeId = (recipe_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredient/${recipe_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    setIngredients(json)\r\n                    setNext(true)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n\r\n    const addIngredient = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredient`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    setIngredientName(\"\")\r\n                    setIngredientQty(\"\")\r\n                    setOptional(\"\")\r\n                    alert(\"Ingredient added\")\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const addIngredientProd = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredientprod`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    alert(\"Ingredient Product Added\")\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getProductStockById = (product_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/stockbyid/${product_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    setProductId(product_id)\r\n                    setStock(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <div className=\"admin-card\">\r\n                <Button className=\"admin-button\" onClick={onBack}>Back</Button>\r\n                <p>*This will bring you back to Manage Recipes Page</p>\r\n                <h1 className=\"admin-header\">Add recipe details</h1>\r\n                <Form className=\"admin-form\">\r\n                    {!next\r\n                        ? <div>\r\n                            <Form.Group className=\"admin-form__input-container\" controlId=\"ingredientName\">\r\n                                <Form.Label className=\"admin-form__label\">Ingredient Name</Form.Label>\r\n                                <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter ingredient name\" required\r\n                                    value={ingredient_name} onChange={(e) => setIngredientName(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"admin-form__input-container\" controlId=\"ingredientQuantity\">\r\n                                <Form.Label className=\"admin-form__label\">Ingredient Quantity</Form.Label>\r\n                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter ingredient quantity\" required\r\n                                    value={ingredient_qty} onChange={(e) => setIngredientQty(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"admin-form__input-container\" controlId=\"optional\">\r\n                                <Form.Label className=\"admin-form__label\">Optional</Form.Label>\r\n                                <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"0 for needed, 1 for optional\" required\r\n                                    value={optional} onChange={(e) => setOptional(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Button variant=\"success\" onClick={() => addIngredient({\r\n                                \"recipe_id\": recipe_id, \"ingredient_name\": ingredient_name,\r\n                                \"ingredient_qty\": ingredient_qty, \"optional\": optional\r\n                            })}>Save and Add Ingredient</Button>\r\n                            <Button onClick={() => getIngredientbyRecipeId(recipe_id)}>Next</Button>\r\n                        </div>\r\n\r\n                        : null\r\n                    }\r\n                    {\r\n                        next\r\n                            ? <div>\r\n                                <Form.Group className=\"admin-form__input-container\" controlId=\"ingredient\">\r\n                                    <Form.Label className=\"admin-form__label\">Ingredients</Form.Label>\r\n                                    <Form.Control as=\"select\" className=\"admin-form__input admin-form__input--selector\" value={ingredient_id} \r\n                                    onChange={(e) => setIngredientId(e.target.value)} required>\r\n                                        <option>-Choose Ingredient-</option>\r\n                                        {ingredients.map((ingredient) => (\r\n                                            <option className=\"admin-form__input_option\" key={ingredient.ingredient_id} value={ingredient.ingredient_id}>\r\n                                                {ingredient.ingredient_name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group className=\"admin-form__input-container\" controlId=\"productName\">\r\n                                    <Form.Label className=\"admin-form__label\">Product Search</Form.Label>\r\n                                    <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter product name\" required\r\n                                        value={product_name} onChange={(e) => setProductName(e.target.value)} />\r\n                                    <Search onClick={onSearch}></Search>\r\n                                </Form.Group>\r\n                                {\r\n                                    click\r\n                                        ?\r\n                                        <>\r\n                                            <Form.Group className=\"admin-form__input-container\" controlId=\"productId\">\r\n                                                <Form.Label className=\"admin-form__label\">Product Name</Form.Label>\r\n                                                <Form.Control as=\"select\" className=\"admin-form__input admin-form__input--selector\" value={product_id} onChange={(e) => getProductStockById(e.target.value)} required>\r\n                                                    <option>-Choose Product-</option>\r\n                                                    {product.map((product) => (\r\n                                                        <option className=\"admin-form__input_option\" key={product.product_id} value={product.product_id}>\r\n                                                            {product.product_name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group className=\"admin-form__input-container\" controlId=\"stockId\">\r\n                                                <Form.Label className=\"admin-form__label\">Product Stock Size</Form.Label>\r\n                                                <Form.Control as=\"select\" className=\"admin-form__input admin-form__input--selector\" value={stock_id} onChange={(e) => setStockId(e.target.value)} required>\r\n                                                    <option>-Choose Stock Size-</option>\r\n                                                    {stock.map((stock) => (\r\n                                                        <option className=\"admin-form__input_option\" key={stock.stock_id} value={stock.stock_id}>\r\n                                                            {stock.stock_size}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </>\r\n                                        : null\r\n                                }\r\n                                <Form.Group className=\"admin-form__input-container\" controlId=\"swap\">\r\n                                    <Form.Label className=\"admin-form__label\">For Swapping</Form.Label>\r\n                                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"0 for original, 1 for swapped products\" required\r\n                                        value={swap} onChange={(e) => setSwap(e.target.value)} />\r\n                                </Form.Group>\r\n                                <h6>Please remember to save before clicking finish</h6>\r\n                                <Button onClick={() => addIngredientProd({ingredient_id, \r\n                                recipe_id, stock_id, swap})}>Add new ingredient</Button>\r\n                                <Button variant=\"danger\" onClick={() => setNext(false)}>Back</Button>\r\n                                <Button variant=\"success\" onClick={done}>Finish</Button>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </Form>\r\n            </div>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default AdminRecipeDetails2;","import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Popup from 'reactjs-popup';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\n\r\nfunction EditRecipeCategoriesRow({id, name, index}) {\r\n    const [editCat, setEditCat] = useState(false)\r\n    const [catName, setCatName] = useState(\"\")\r\n\r\n    const onClickEdit = () => {\r\n        setEditCat(true)\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setEditCat(false)\r\n    }\r\n\r\n    const onAdd = () => {\r\n        console.log(id + catName)\r\n        updateRecipeCategoryById({\"rcat_id\": id, \"rcat_name\": catName})\r\n        .then(\r\n            window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes'\r\n        )\r\n    }\r\n\r\n    const updateRecipeCategoryById = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipeCategory/`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'access_right': localStorage.getItem('access_right')\r\n                  },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const deleteRecipeCategorybyId = (rcat_id, data = { rcat_id: rcat_id }) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipeCategory`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'access_right': localStorage.getItem('access_right')\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const ConfirmDeletePopup = ({ close, id }) => {\r\n        console.log(id)\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Delete?</h3>\r\n                <Button className=\"popup-card__button\" type=\"submit\" onClick={() => deleteRecipeCategorybyId(id)\r\n                    .then(window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes')\r\n                    } >OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !editCat\r\n                    ? \r\n                    <ListGroup.Item action>\r\n                        {index + 1}. {name}\r\n                        <PencilSquare onClick={onClickEdit}></PencilSquare>\r\n                        <Popup modal closeOnDocumentClick={false} trigger={open => <Button variant=\"danger\">-</Button>}>\r\n                            {close => <ConfirmDeletePopup id={id} close={close} />}\r\n                        </Popup>\r\n                    </ListGroup.Item>\r\n                    : null\r\n            }\r\n            {\r\n                editCat\r\n                    ? <ListGroup.Item action>\r\n                        <Form.Group>\r\n                            <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter new category name\" required\r\n                                value={catName} onChange={(e) => setCatName(e.target.value)} />\r\n                            <Button onClick={() => onAdd()}>Save</Button>\r\n                            <Button variant=\"danger\" onClick={onCancel}>Cancel</Button>\r\n                        </Form.Group>\r\n                    </ListGroup.Item>\r\n                    : null\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default EditRecipeCategoriesRow;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport EditRecipeCategoriesRow from './EditRecipeCategoriesRow';\r\n\r\nfunction EditRecipeCategories() {\r\n    const [add, setAdd] = useState(false)\r\n    const [newCategory, setNewCategory] = useState(\"\")\r\n    const [recipeCategories, setRecipeCategories] = useState([])\r\n\r\n    const onBack = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes'\r\n    }\r\n\r\n    const onAdd = () => {\r\n        console.log(newCategory)\r\n        addRecipeCategory({ \"rcat_name\": newCategory })\r\n            .then(\r\n                window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managerecipes'\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllRecipeCategories()\r\n    }, [])\r\n\r\n    const addRecipeCategory = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipeCategory`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'access_right': localStorage.getItem('access_right')\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getAllRecipeCategories = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/recipeCategories`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    setRecipeCategories(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"recipe-card\">\r\n            <Button className=\"recipe-button\" onClick={onBack}>Back</Button>\r\n            <h1 clasName=\"recipe-header\">Recipe Categories</h1>\r\n            <ListGroup>\r\n                {recipeCategories.map((recipeCategories, index) => (\r\n                    <EditRecipeCategoriesRow key={recipeCategories.rcat_id} id={recipeCategories.rcat_id} name={recipeCategories.rcat_name} index={index}></EditRecipeCategoriesRow>\r\n                ))}\r\n                <ListGroup.Item>\r\n                    {\r\n                        !add\r\n                            ? <Button onClick={() => setAdd(true)}>ADD</Button>\r\n                            : null\r\n                    }\r\n                    {\r\n                        add\r\n                            ?\r\n                            <>\r\n                                <Form.Group>\r\n                                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter recipe category\" required\r\n                                        value={newCategory} onChange={(e) => setNewCategory(e.target.value)} />\r\n                                    <Button onClick={() => onAdd()}>Save</Button>\r\n                                    <Button variant=\"danger\" onClick={() => setAdd(false)}>Cancel</Button>\r\n                                </Form.Group>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRecipeCategories;\r\n\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction EditRecipes2Row({ index, name, id, optional, qty, recipe_id }) {\r\n\r\n    const deleteIngredientbyId = (ingredient_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredient/${ingredient_id}`, {\r\n                method: 'DELETE',\r\n                headers: { 'access_right': localStorage.getItem('access_right') }\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n    \r\n\r\n    return (\r\n        <tr className=\"admin-table__body-row\">\r\n            <td className=\"admin-table__body-data\">{index}</td>\r\n            <td className=\"admin-table__body-data\">{name}</td>\r\n            <td className=\"admin-table__body-data\">{qty}</td>\r\n            {\r\n                optional\r\n                ?\r\n                <td className=\"admin-table__body-data\">Optional</td>\r\n                : \r\n                <td className=\"admin-table__body-data\"></td>\r\n            }\r\n            <td className=\"admin-table__body-data\"><Link to={`/editingredientprod/${id}`}><Button className=\"admin-table__button\">Edit</Button></Link></td>\r\n            <td className=\"admin-table__body-data\"><Button className=\"admin-table__button\" variant=\"danger\" onClick={()=>deleteIngredientbyId(id).then(window.location.href=\"https://anarchygene.github.io/fyp-frontend/#/editrecipes2/\" + recipe_id)}>Delete</Button></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default EditRecipes2Row;","import { BrowserRouter as Router, Switch, Route, useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { Button, Form, Table } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport EditRecipes2Row from \"./EditRecipes2Row\";\r\n\r\nfunction EditRecipes2() {\r\n    let {recipe_id} = useParams()\r\n    const [ingredients, setIngredients] = useState([])\r\n    const [ingredient_name, setIngredientName] = useState('')\r\n    const [ingredient_qty, setIngredientQty] = useState('')\r\n    const [optional, setOptional] = useState('')\r\n    const [add, setAdd] = useState(false)\r\n    useEffect(() => {\r\n        getIngredientbyRecipeId(recipe_id)\r\n    }, [])\r\n    const getIngredientbyRecipeId = (recipe_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredient/${recipe_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(ingredients)\r\n                    setIngredients(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const addIngredient = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredient`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!add\r\n                ?\r\n                <div>\r\n                    <h3>Manage Ingredients</h3>\r\n                    <Button onClick={() => setAdd(!add)} variant=\"success\">Add Ingredient</Button>\r\n                    <Link to={`/editrecipes/${recipe_id}`}><Button>Back</Button></Link>\r\n                    <Table className=\"admin-table\" striped bordered hover>\r\n                        <thead className=\"admin-table__header\">\r\n                            <tr className=\"admin-table__header-row\">\r\n                                <th className=\"admin-table__header-col\">S/N</th>\r\n                                <th className=\"admin-table__header-col\">Ingredient Name</th>\r\n                                <th className=\"admin-table__header-col\">Ingredient Qty</th>\r\n                                <th className=\"admin-table__header-col\">Optional</th>\r\n                                <th className=\"admin-table__header-col\">Edit</th>\r\n                                <th className=\"admin-table__header-col\">Delete</th>\r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"admin-table__body\">\r\n                            {ingredients.map((ingredient, index) => (\r\n                                <EditRecipes2Row key={ingredient.ingredient_id} index={index + 1} name={ingredient.ingredient_name} id={ingredient.ingredient_id} optional={ingredient.optional} qty={ingredient.ingredient_qty} recipe_id={ingredient.recipe_id}></EditRecipes2Row>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                : null\r\n            }\r\n            {\r\n                add\r\n                ? <div>\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"ingredientName\">\r\n                    <Form.Label className=\"admin-form__label\">Ingredient Name</Form.Label>\r\n                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter ingredient name\" required\r\n                        value={ingredient_name} onChange={(e) => setIngredientName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"ingredientQuantity\">\r\n                    <Form.Label className=\"admin-form__label\">Ingredient Quantity</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter ingredient quantity\" required\r\n                        value={ingredient_qty} onChange={(e) => setIngredientQty(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"admin-form__input-container\" controlId=\"optional\">\r\n                    <Form.Label className=\"admin-form__label\">Optional</Form.Label>\r\n                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"0 for needed, 1 for optional\" required\r\n                        value={optional} onChange={(e) => setOptional(e.target.value)} />\r\n                </Form.Group>\r\n                <Button \r\n                onClick={() => \r\n                addIngredient({\r\n                    \"recipe_id\": recipe_id, \"ingredient_name\": ingredient_name,\r\n                    \"ingredient_qty\": ingredient_qty, \"optional\": optional\r\n                }).then(window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/editrecipes2/\" + recipe_id)}\r\n                >Save</Button>\r\n                <Button variant=\"danger\" onClick={() => setAdd(!add)}>Cancel</Button>\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRecipes2;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Table, Form } from 'react-bootstrap'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    NavLink,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport { Search } from 'react-bootstrap-icons';\r\n\r\nfunction EditIngredientProd() {\r\n    const [product, setProduct] = useState([])\r\n    const [stock, setStock] = useState([])\r\n    const [product_id, setProductId] = useState('')\r\n    const [stock_id, setStockId] = useState('')\r\n    const [click, setClick] = useState(false)\r\n    const [product_name, setProductName] = useState('')\r\n    const [swap, setSwap] = useState('')\r\n    const [ingredients, setIngredients] = useState([])\r\n    const [edit, setEdit] = useState(false)\r\n    const [ingredient_name, setIngredientName] = useState('')\r\n    const [ingredient_qty, setIngredientQty] = useState('')\r\n    const [optional, setOptional] = useState('')\r\n    const [recipe_id, setRecipeId] = useState('')\r\n    let {ingredient_id} = useParams()\r\n    const [ingredientprod, setIngredientprod] = useState([])\r\n    useEffect(() => {\r\n        getIngredientProdbyIngredientId(ingredient_id)\r\n        getIngredientbyIngredientId(ingredient_id)\r\n    }, [])\r\n    const getIngredientProdbyIngredientId = (ingredient_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/ingredientprod/${ingredient_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setIngredientprod(json)\r\n            }).catch((err) => {\r\n                alert(err);\r\n            });\r\n    }\r\n\r\n    const deleteIngredientProdbyId = (ingredientprod_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredientprod/${ingredientprod_id}`, {\r\n                method: 'DELETE',\r\n                headers: { 'access_right': localStorage.getItem('access_right') }\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const addIngredientProd = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredientprod`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    alert(\"Ingredient Product Added\")\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    const onSearch = () => {\r\n        searchProduct(product_name)\r\n            .then(\r\n                setClick(true)\r\n            )\r\n    }\r\n\r\n    const searchProduct = (search) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/searchproduct/${search}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    setProduct(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const updateIngredientbyId = (ingredient_id, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredient/${ingredient_id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'access_right': localStorage.getItem('access_right'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getProductStockById = (product_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/stockbyid/${product_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    setProductId(product_id)\r\n                    setStock(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const getIngredientbyIngredientId = (ingredient_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/ingredientbyid/${ingredient_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(JSON.stringify(json))\r\n                    setIngredients(json)\r\n                    setIngredientName(json[0].ingredient_name)\r\n                    setIngredientQty(json[0].ingredient_qty)\r\n                    setOptional(json[0].optional)\r\n                    setRecipeId(json[0].recipe_id)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !edit\r\n                    ? <div>\r\n                        <h4>Edit Ingredient {ingredient_name}</h4>\r\n                        <Button onClick={() => setEdit(!edit)}>Edit Ingredient Products</Button>\r\n                        <Form.Group className=\"admin-form__input-container\" controlId=\"ingredientName\">\r\n                            <Form.Label className=\"admin-form__label\">Ingredient Name</Form.Label>\r\n                            <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter ingredient name\" required\r\n                                value={ingredient_name} onChange={(e) => setIngredientName(e.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"admin-form__input-container\" controlId=\"ingredientQuantity\">\r\n                            <Form.Label className=\"admin-form__label\">Ingredient Quantity</Form.Label>\r\n                            <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter ingredient quantity\" required\r\n                                value={ingredient_qty} onChange={(e) => setIngredientQty(e.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"admin-form__input-container\" controlId=\"optional\">\r\n                            <Form.Label className=\"admin-form__label\">Optional</Form.Label>\r\n                            <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"0 for needed, 1 for optional\" required\r\n                                value={optional} onChange={(e) => setOptional(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button\r\n                            onClick={() =>\r\n                                updateIngredientbyId(ingredient_id, {\r\n                                    \"recipe_id\": recipe_id, \"ingredient_name\": ingredient_name,\r\n                                    \"ingredient_qty\": ingredient_qty, \"optional\": optional\r\n                                }).then(window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/editrecipes2/\" + recipe_id )}\r\n                        >Save</Button>\r\n                        <Link to={`/editrecipes2/${recipe_id}`}><Button variant=\"danger\">Cancel</Button></Link>\r\n                    </div>\r\n                    : null\r\n            }\r\n            {\r\n                edit\r\n                    ?\r\n                    <div>\r\n                        <h4>Edit Ingredient Products for {ingredient_name}</h4>\r\n                        <Button onClick={() => setEdit(!edit)}>Edit Ingredient {ingredient_name}</Button>\r\n                        <Table className=\"admin-table\" striped bordered hover>\r\n                            <thead className=\"admin-table__header\">\r\n                                <tr className=\"admin-table__header-row\">\r\n                                    <th className=\"admin-table__header-col\">Products</th>\r\n                                    <th className=\"admin-table__header-col\">Swapped</th>\r\n                                    <th className=\"admin-table__header-col\">Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"admin-table__body\">\r\n                                {ingredientprod.map((ingredientprod) => (\r\n                                    <tr className=\"admin-table__body-row\">\r\n                                        <td className=\"admin-table__body-data\">{ingredientprod.product_name}, {ingredientprod.stock_size}</td>\r\n                                        <td className=\"admin-table__body-data\">{ingredientprod.swap}</td>\r\n                                        <td className=\"admin-table__body-data\"><Button variant=\"danger\" \r\n                                        onClick={()=>deleteIngredientProdbyId(ingredientprod.ingredientprod_id)\r\n                                        .then(window.location.href=\"https://anarchygene.github.io/fyp-frontend/#/editingredientprod/\"+ingredient_id)}>Delete</Button></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                        <div>\r\n                            <Form.Group className=\"admin-form__input-container\" controlId=\"productName\">\r\n                                <Form.Label className=\"admin-form__label\">Product Search</Form.Label>\r\n                                <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter product name\" required\r\n                                    value={product_name} onChange={(e) => setProductName(e.target.value)} />\r\n                                <Search onClick={onSearch}></Search>\r\n                            </Form.Group>\r\n                            {\r\n                                click\r\n                                    ?\r\n                                    <>\r\n                                        <Form.Group className=\"admin-form__input-container\" controlId=\"productId\">\r\n                                            <Form.Label className=\"admin-form__label\">Product Name</Form.Label>\r\n                                            <Form.Control as=\"select\" className=\"admin-form__input admin-form__input--selector\" value={product_id} onChange={(e) => getProductStockById(e.target.value)} required>\r\n                                                <option>-Choose Product-</option>\r\n                                                {product.map((product) => (\r\n                                                    <option className=\"admin-form__input_option\" key={product.product_id} value={product.product_id}>\r\n                                                        {product.product_name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"admin-form__input-container\" controlId=\"stockId\">\r\n                                            <Form.Label className=\"admin-form__label\">Product Stock Size</Form.Label>\r\n                                            <Form.Control as=\"select\" className=\"admin-form__input admin-form__input--selector\" value={stock_id} onChange={(e) => setStockId(e.target.value)} required>\r\n                                                <option>-Choose Stock Size-</option>\r\n                                                {stock.map((stock) => (\r\n                                                    <option className=\"admin-form__input_option\" key={stock.stock_id} value={stock.stock_id}>\r\n                                                        {stock.stock_size}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                            <Form.Group className=\"admin-form__input-container\" controlId=\"swap\">\r\n                                <Form.Label className=\"admin-form__label\">For Swapping</Form.Label>\r\n                                <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"0 for original, 1 for swapped products\" required\r\n                                    value={swap} onChange={(e) => setSwap(e.target.value)} />\r\n                            </Form.Group>\r\n                            <h6>Please remember to save before clicking finish</h6>\r\n                            <Button onClick={() => addIngredientProd({\r\n                                ingredient_id,\r\n                                recipe_id, stock_id, swap\r\n                            }).then(window.location.href=\"https://anarchygene.github.io/fyp-frontend/#/editingredientprod/\" + ingredient_id)}>Add new ingredient</Button>\r\n                            <Link to={`/editrecipes2/${recipe_id}`}><Button variant=\"danger\">Cancel</Button></Link>\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditIngredientProd;","import { Container, Row, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\nimport React, { useState } from 'react';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\r\nimport RecipeCardAdmin from \"./RecipeCardAdmin\";\r\nimport AdminRecipeDetails from \"./AdminRecipeDetails\";\r\nimport EditRecipes from \"./EditRecipes\"\r\nimport RecipeSearch from \"./RecipeSearch\";\r\nimport AdminRecipeDetails2 from \"./AdminRecipeDetails2\";\r\nimport EditRecipeCategories from \"./EditRecipeCategories\";\r\nimport EditRecipes2 from \"./EditRecipes2\";\r\nimport EditIngredientProd from \"./EditIngredientProd\";\r\n\r\n\r\nfunction AdminRecipesHomepage({ recipes, getRecipeDetail }) {\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <Row className=\"admin-row\">\r\n                <Form className=\"admin-form\">\r\n                    <Form.Group className=\"admin-form__input-container\">\r\n                        <Form.Control onChange={(e) => setSearch(e.target.value)} className=\"admin-form__input-container\" type=\"text\" placeholder=\"Search\" />\r\n                        <Link to={`/searchrecipe/${search}`}><Button type=\"submit\">Search</Button></Link>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                <Link to=\"/adminaddrecipe\"><Button className=\"admin-button\">Add Recipes</Button></Link>\r\n                <Link to=\"/editrecipecat\"><Button className=\"admin-button\">Recipe Categories</Button></Link>\r\n                <h1 className=\"admin-header\">Manage Recipes Page</h1>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>Recipes</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                {recipes.map((recipes) => (\r\n                    <RecipeCardAdmin id={recipes.recipe_id} key={recipes.recipe_id} img={recipes.recipe_img} name={recipes.recipe_name} desc={recipes.recipe_desc}\r\n                        prep_time={recipes.prep_time} cooking_time={recipes.cooking_time} getRecipeDetail={getRecipeDetail} />\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst AdminRecipes = ({ recipes, getRecipeDetail, recipeDetail }) => {\r\n    const [recipesSearch, setRecipesSearch] = useState([])\r\n    const searchRecipe = (search) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/searchrecipe/${search}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    setRecipesSearch(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/adminaddrecipe\">\r\n                        <AdminRecipeDetails />\r\n                    </Route>\r\n                    <Route exact path=\"/adminaddrecipe2/:id\">\r\n                        <AdminRecipeDetails2 />\r\n                    </Route>\r\n                    <Route path=\"/managerecipes\">\r\n                        <AdminRecipesHomepage recipes={recipes} getRecipeDetail={getRecipeDetail} searchRecipe={searchRecipe} />\r\n                    </Route>\r\n                    <Route exact path=\"/editrecipes/:id\">\r\n                        <EditRecipes recipes={recipeDetail} />\r\n                    </Route>\r\n                    <Route path=\"/editrecipes2/:recipe_id\">\r\n                        <EditRecipes2/>\r\n                    </Route>\r\n                    <Route path=\"/editingredientprod/:ingredient_id\">\r\n                        <EditIngredientProd/>\r\n                    </Route>\r\n                    <Route exact path=\"/searchrecipe/:search\">\r\n                        <RecipeSearch recipes={recipesSearch} getRecipeDetail={getRecipeDetail} searchRecipe={searchRecipe} />\r\n                    </Route>\r\n                    <Route path=\"/editrecipecat\">\r\n                        <EditRecipeCategories />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminRecipes;\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction AdminOrderRow({ sn, cdate, number, invoice_id, first_name, last_name, total, status, ddate }) {\r\n    const delivery_date = ddate.slice(0, 10)\r\n    return (\r\n        <tr className=\"admin-table__body-row\">\r\n            <td className=\"admin-table__body-data\">{sn}</td>\r\n            <td className=\"admin-table__body-data\">{cdate}</td>\r\n            <td className=\"admin-table__body-data\">{invoice_id}</td>\r\n            <td className=\"admin-table__body-data\">{first_name} {last_name}</td>\r\n            <td className=\"admin-table__body-data\">${total.toFixed(2)}</td>\r\n            <td className=\"admin-table__body-data\"> {status}</td>\r\n            <td className=\"admin-table__body-data\">{delivery_date}</td>\r\n            <td className=\"admin-table__body-data\"><Link to={`/adminorderdetails/${number}`}><Button className=\"admin-table__button\">View</Button></Link></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default AdminOrderRow;","import { Container, Table } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport AdminOrderRow from './AdminOrderRow';\r\n\r\nexport default function AdminOrders() {\r\n    const [orders, setOrders] = useState([])\r\n    \r\n    const getOrderName = () => {\r\n        fetch(`https://apibounwe.herokuapp.com/ordername`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setOrders(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getOrderName()\r\n    }, [])\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <div className=\"admin-card\">\r\n            <h1>Manage Orders Page</h1>\r\n                <Breadcrumb className=\"admin-breadcrumb\">\r\n                    <Breadcrumb.Item className=\"admin-breadcrumb__link\" href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item className=\"admin-breadcrumb__link\" active>Orders</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Table className=\"admin-table\" striped bordered hover>\r\n                    <thead className=\"admin-table__header\">\r\n                        <tr className=\"admin-table__header-row\">\r\n                            <th className=\"admin-table__header-col\">S/N</th>\r\n                            <th className=\"admin-table__header-col\">Date Created</th>\r\n                            <th className=\"admin-table__header-col\">No.</th>\r\n                            <th className=\"admin-table__header-col\">Customer</th>\r\n                            <th className=\"admin-table__header-col\">Total</th>\r\n                            <th className=\"admin-table__header-col\">Status</th>\r\n                            <th className=\"admin-table__header-col\">Delivery Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"admin-table__body\">\r\n                        {orders.map((orders, index) => (\r\n                            <AdminOrderRow key={orders.order_id} sn={index+1} \r\n                            cdate={new Date(orders.created_at).toUTCString().substring(0, 22)} \r\n                            number={orders.order_id} invoice_id={orders.invoice_id} \r\n                            first_name={orders.first_name} last_name={orders.last_name}\r\n                            total={orders.total_amount} status={orders.status} ddate={orders.delivery_date}/>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Row, Button, Form } from 'react-bootstrap';\r\nimport Popup from 'reactjs-popup';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    NavLink,\r\n    useHistory,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction EditAdminProfile({admin_id}) {\r\n    const [currentPass, setCurrentPass] = useState(\"\")\r\n    const [newPass, setNewPass] = useState(\"\")\r\n    const [cfmPass, setCfmPass] = useState(\"\")\r\n\r\n    const history = useHistory();\r\n\r\n    const onCancel = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const ConfirmPopup = ({ close }) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Details?</h3>\r\n                <Button className=\"popup-card__button\" onClick={() => updateAdminPasswordbyId(admin_id, { password: newPass })\r\n                .then(window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/adminprofile')}>OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const updateAdminPasswordbyId = (admin_id, data) => {\r\n        return new Promise((resolve, reject) => {\r\n        fetch(`https://apibounwe.herokuapp.com/adminpwd/${admin_id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'access_right': localStorage.getItem('access_right')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                // console.log(JSON.stringify(json))\r\n                return resolve(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                return reject(err);\r\n            });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-card\" fluid>\r\n            <Row className=\"admin-row\">\r\n                <h1 className=\"admin-header\">\r\n                    Change Password\r\n                </h1>\r\n                <div className=\"admin-line-div\"></div>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                <Form className=\"admin-form\">\r\n                    <Form.Group size=\"md\" className=\"admin-form__input-container\" controlId=\"email\">\r\n                        <Form.Label className=\"admin-form__label\">Current Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"admin-form__input\"\r\n                            onChange={(e) => setCurrentPass(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group size=\"md\" className=\"admin-form__input-container\" controlId=\"email\">\r\n                        <Form.Label className=\"admin-form__label\">New Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"admin-form__input\"\r\n                            onChange={(e) => setNewPass(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group size=\"md\" className=\"admin-form__input-container\" controlId=\"email\">\r\n                        <Form.Label className=\"admin-form__label\">Confirm New Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            className=\"admin-form__input\"\r\n                            onChange={(e) => setCfmPass(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Row className=\"admin-form__row\">\r\n                        <Popup\r\n                            modal\r\n                            closeOnDocumentClick={false}\r\n                            trigger={open =>\r\n                                <Button className=\"admin-form__button\" block size=\"lg\">\r\n                                    Save\r\n                                </Button>\r\n                            }\r\n                        >\r\n                            {close => <ConfirmPopup close={close} />}\r\n                        </Popup>\r\n                        <Button className=\"admin-form__button\" block size=\"lg\" onClick={onCancel}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Row>\r\n                </Form>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditAdminProfile;","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Button, Form } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\nimport EditAdminProfile from './EditAdminProfile';\r\n\r\nexport default function AdminProfile() {\r\n    const [admin, setAdmin] = useState({})\r\n    const [email, setEmail] = useState(\"\")\r\n    const [first_name, setFirstName] = useState(\"\")\r\n    const [last_name, setLastName] = useState(\"\")\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getAdminbyId(localStorage.getItem('admin_id')).then((admin) => {\r\n            setLastName(admin.last_name)\r\n            setFirstName(admin.first_name)\r\n            setEmail(admin.email)\r\n        })\r\n    }, [])\r\n\r\n    const getAdminbyId = (admin_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/admin/${admin_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    setAdmin(json[0])\r\n                    return resolve(json[0])\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const updateAdminPwdbyId = (admin_id, data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/admin/${admin_id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'access_right': localStorage.getItem('access_right')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(JSON.stringify(json))\r\n                return false;\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const adminLogout = () => {\r\n        localStorage.clear()\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/adminlogin'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"admin-container\" fluid>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/adminprofile\">\r\n                            <div className=\"admin-card\">\r\n                                <Row className=\"admin-row\">\r\n                                    <h3 className=\"admin-row__header\">Hello {admin.first_name}!</h3>\r\n                                </Row>\r\n                                <Row className=\"admin-row\"><span className=\"admin-row__text\">Name: {admin.first_name} {admin.last_name}</span></Row>\r\n                                <Row className=\"admin-row\"><span className=\"admin-row__text\">Email: {admin.email}</span></Row>\r\n                                <Row className=\"admin-row\"><span className=\"admin-row__text\">Access Rights: {admin.access_right}</span></Row>\r\n                                {\r\n                                    !edit\r\n                                        ? <Row className=\"admin-row\">\r\n                                            <Link to=\"/editadminprofile\"><Button className=\"admin-row__button\" variant=\"success\">Change Password</Button></Link>\r\n                                            <Button onClick={() => setEdit(!edit)}>Edit Profile</Button>\r\n                                            <Button onClick={() => adminLogout()} variant=\"danger\">Logout</Button>\r\n                                        </Row>\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    edit\r\n                                        ?\r\n                                        <div>\r\n                                            <Row className=\"admin-row\">\r\n                                                <Link to=\"/editadminprofile\"><Button className=\"admin-row__button\">Change Password</Button></Link>\r\n                                            </Row>\r\n                                            <br></br>\r\n                                            <Form className=\"admin-form\">\r\n                                                <Row className=\"admin-form__row\">\r\n                                                    <p className=\"admin-form__header\">\r\n                                                        Edit Profile:\r\n                                                    </p>\r\n                                                    <div className=\"admin-form__line\"></div>\r\n                                                </Row>\r\n                                                <Row className=\"admin-form__row\">\r\n                                                    <Form.Group className=\"admin-form__input-container\" size=\"md\" controlId=\"first-name\">\r\n                                                        <Form.Label className=\"admin-form__input-label\">First Name</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            className=\"admin-form__input\"\r\n                                                            type=\"text\"\r\n                                                            onChange={(e) => setFirstName(e.target.value)}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Form.Group className=\"admin-form__input\" size=\"md\" controlId=\"last-name\">\r\n                                                        <Form.Label className=\"admin-form__input-label\">Last Name</Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            className=\"admin-form__input\"\r\n                                                            onChange={(e) => setLastName(e.target.value)}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Form.Group className=\"admin-form__input\" size=\"md\" controlId=\"email\">\r\n                                                        <Form.Label>Email</Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"email\"\r\n                                                            className=\"admin-form__input\"\r\n                                                            onChange={(e) => setEmail(e.target.value)}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Button type=\"submit\" onClick={() => updateAdminPwdbyId(admin.admin_id, {\r\n                                                        email: email, first_name: first_name,\r\n                                                        last_name: last_name, access_right: admin.access_right\r\n                                                    })}>Save</Button>\r\n                                                    <Button variant=\"danger\" onClick={() => setEdit(!edit)}>Cancel</Button>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </div>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                        </Route>\r\n                        <Router path=\"/editadminprofile\">\r\n                            <EditAdminProfile admin_id={localStorage.getItem('admin_id')} />\r\n                        </Router>\r\n                    </Switch>\r\n                </Router>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import { Button } from 'react-bootstrap'\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport Popup from 'reactjs-popup';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ManageAdminRow({ admins, sn, getAdminDetail }) {\r\n    const deleteAdminbyId = (admin_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/admin/${admin_id}`, {\r\n                method: 'DELETE',\r\n                headers: { 'access_right': localStorage.getItem('access_right') }\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n    \r\n    const ConfirmDeletePopup = ({ id, close }) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Delete?</h3>\r\n                <Button className=\"popup-card__button\" type=\"submit\" onClick={() => deleteAdminbyId(id).then(window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageadmins')}>OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <tr className=\"admin-table__body-row\">\r\n            <td className=\"admin-table__body-data\">{sn}</td>\r\n            <td className=\"admin-table__body-data\">{admins.first_name + \" \" + admins.last_name}</td>\r\n            <td className=\"admin-table__body-data\">{admins.email}</td>\r\n            <td className=\"admin-table__body-data\">{admins.access_right} <Link to={`/editadmin/${admins.admin_id}`}><PencilSquare onClick={() => getAdminDetail(admins.admin_id)} className=\"admin-table__icon\"></PencilSquare></Link></td>\r\n            <td className=\"admin-table__body-data\">\r\n                <Popup modal closeOnDocumentClick={false} trigger={open => <Button variant=\"danger\">Delete Admin</Button>}>\r\n                    {close => <ConfirmDeletePopup id={admins.admin_id} close={close} />}\r\n                </Popup>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ManageAdminRow;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Container, Row, Col, Nav, Navbar, Button, Form, FormControl, Table } from 'react-bootstrap';\r\nimport '../css/manageadmins.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink, \r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport ManageAdminRow from './ManageAdminRow';\r\n\r\n\r\nfunction ManageAdmins({ admins, getAdminDetail }) {\r\n\r\n  const [search, setSearch] = useState(\"\")\r\n  return (\r\n    <Container className=\"admin-container\" fluid>\r\n      <Row className=\"admin-row\">\r\n        <Form className=\"admin-form\">\r\n          <Form.Group className=\"admin-form__input-container\">\r\n            <Form.Control onChange={(e) => setSearch(e.target.value)} className=\"admin-form__input-container\" type=\"text\" placeholder=\"Search\" />\r\n            <Link to={`/searchadmin/${search}`}><Button type=\"submit\">Search</Button></Link>\r\n          </Form.Group>\r\n        </Form>\r\n        <h1 className=\"admin-header\">\r\n          Manage Admin\r\n        </h1>\r\n        <div className=\"admin-line-div\"></div>\r\n      </Row>\r\n      <Row className=\"admin-row\">\r\n        <Breadcrumb className=\"admin-breadcrumb\">\r\n          <Breadcrumb.Item className=\"admin-breadcrumb__link\" href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item className=\"admin-breadcrumb__link\" active>Manage Admins</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      </Row>\r\n      <Link to=\"/addadmin\"><Button className=\"admin-button\">Add Admin</Button></Link>\r\n      <Row className=\"admin-row\">\r\n        <Table striped bordered hover className=\"admin-table\" id=\"manage-admins-table\">\r\n          <thead className=\"admin-table__header\">\r\n            <tr className=\"admin-table__header-row\">\r\n              <th className=\"admin-table__header-data\">S/N</th>\r\n              <th className=\"admin-table__header-data\">Name</th>\r\n              <th className=\"admin-table__header-data\">Email</th>\r\n              <th className=\"admin-table__header-data\">Access Rights</th>\r\n              <th className=\"admin-table__header-data\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"admin-table__body\">\r\n            {admins.map((admins, index) => (\r\n              <ManageAdminRow key={admins.admin_id} admins={admins} sn={index + 1} getAdminDetail={getAdminDetail} />\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ManageAdmins;","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport Popup from 'reactjs-popup';\r\n\r\nfunction ManageUserRow({ sn, id, name, pcontact, scontact, address, order, code }) {\r\n\r\n    const deleteUserbyId = (user_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/user/${user_id}`, {\r\n                method: 'DELETE'\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const ConfirmDeletePopup = ({ close }) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Delete?</h3>\r\n                <Button className=\"popup-card__button\" type=\"submit\" onClick={() => deleteUserbyId(id)\r\n                    .then(window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageusers')}>OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <tr className=\"admin-table__body-row\">\r\n            <td className=\"admin-table__body-data\">{sn}</td>\r\n            <td className=\"admin-table__body-data\">{name}</td>\r\n            <td className=\"admin-table__body-data\">{pcontact}</td>\r\n            <td className=\"admin-table__body-data\">{scontact}</td>\r\n            <td className=\"admin-table__body-data\">{address}</td>\r\n            <td className=\"admin-table__body-data\">{order}</td>\r\n            <td className=\"admin-table__body-data\">{code}\r\n                <Popup modal closeOnDocumentClick={false} trigger={open => <Button variant=\"danger\" className=\"delete-user-button\">Delete</Button>}>\r\n                    {close => <ConfirmDeletePopup close={close} />}\r\n                </Popup>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ManageUserRow;","import React, { useState } from 'react';\r\nimport { Table, Container, Row, Button, Form } from 'react-bootstrap';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport ManageUserRow from './ManageUserRow';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink, \r\n  Redirect, \r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nfunction ManageUsers({ users }) {\r\n  const [search, setSearch] = useState(\"\")\r\n\r\n  return (\r\n    <Container className=\"manage-users-container\" fluid>\r\n      <Row className=\"header-row\">\r\n        <Form className=\"admin-form\">\r\n          <Form.Group className=\"admin-form__input-container\">\r\n            <Form.Control onChange={(e) => setSearch(e.target.value)} className=\"admin-form__input-container\" type=\"text\" placeholder=\"Search\" />\r\n            <Link to={`/searchuser/${search}`}><Button type=\"submit\">Search</Button></Link>\r\n          </Form.Group>\r\n        </Form>\r\n        <h1 className=\"admin-header\">\r\n          Manage Users\r\n        </h1>\r\n        <div className=\"admin-line-div\"></div>\r\n      </Row>\r\n      <Row>\r\n        <Breadcrumb className=\"admin-breadcrumb\">\r\n          <Breadcrumb.Item className=\"admin-breadcrumb__link\" href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item className=\"admin-breadcrumb__link\" active>Manage Users</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      </Row>\r\n\r\n      <Table striped className=\"admin-table\" bordered hover>\r\n        <thead className=\"admin-table__header\">\r\n          <tr className=\"admin-table__header-row\">\r\n            <th className=\"admin-table__header-data\">S/N</th>\r\n            <th className=\"admin-table__header-data\">Name</th>\r\n            <th className=\"admin-table__header-data\">Primary Contact Number</th>\r\n            <th className=\"admin-table__header-data\">Secondary Contact Number</th>\r\n            <th className=\"admin-table__header-data\">Billing Address</th>\r\n            <th className=\"admin-table__header-data\">Last Order Invoice ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"admin-table__body\">\r\n          {users.map((users, index) => (\r\n            <ManageUserRow id={users.user_id} sn={index + 1} name={users.first_name + \" \" + users.last_name} pcontact={users.pcontact_no} scontact={users.scontact_no} address={users.address} order={users.invoice_id}/>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ManageUsers;","import { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from 'reactjs-popup';\r\nimport React from 'react';\r\n\r\nfunction ManageDiscountCodeRow({ sn, discountCode }) {\r\n\r\n    const deleteDiscountbyId = (discount_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/discount/${discount_id}`, {\r\n                'method': 'DELETE',\r\n                'headers': {\r\n                    'access_right': localStorage.getItem('access_right')\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    const ConfirmDeletePopup = ({ id, close }) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Delete?</h3>\r\n                <Button className=\"popup-card__button\" onClick={() => deleteDiscountbyId(id)\r\n                    .then(window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managediscountcode')\r\n                    } type=\"submit\">OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <tr className=\"admin-table__body-row\">\r\n            <td className=\"admin-table__body-data\">{sn}</td>\r\n            <td className=\"admin-table__body-data\">{discountCode.discount_name}</td>\r\n            <td className=\"admin-table__body-data\">{discountCode.discount_code}</td>\r\n            <td className=\"admin-table__body-data\">{discountCode.discount_amount}</td>\r\n            <td className=\"admin-table__body-data\">\r\n                <div id=\"status\">\r\n                    {discountCode.active\r\n                        ?\r\n                        <>\r\n                            Active\r\n                        </>\r\n                        :\r\n                        <>\r\n                            Inactive\r\n                        </>\r\n                    }\r\n                    <Link to={`/editdiscount/${discountCode.discount_id}`}><Button className=\"admin-table__button\">Edit Code</Button></Link>\r\n\r\n                </div>\r\n            </td>\r\n            <td className=\"admin-table__body-data\">\r\n                <Popup modal closeOnDocumentClick={false} trigger={open => <Button variant=\"danger\" className=\"admin-table__button\">Delete Code</Button>}>\r\n                    {close => <ConfirmDeletePopup id={discountCode.discount_id} close={close} />}\r\n                </Popup>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ManageDiscountCodeRow;","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Button, Table } from 'react-bootstrap';\r\nimport '../css/managediscountcode.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport ManageDiscountCodeRow from './ManageDiscountCodeRow';\r\n\r\nfunction ManageDiscountCode() {\r\n    const [discounts, setDiscounts] = useState([])\r\n\r\n    useEffect(() => {\r\n        getDiscounts()\r\n    }, [])\r\n    const deleteBtn = () => {\r\n        alert(\"delete button pressed\");\r\n        window.location.reload();\r\n    }\r\n\r\n    const getDiscounts = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/discount`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    // console.log(\"json \" + JSON.stringify(json));\r\n                    setDiscounts(json)\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <div className=\"admin-card\">\r\n                <Row className=\"admin-row admin-row--align\">\r\n                    <h1 className=\"admin-header\">\r\n                        Manage Discount Codes\r\n                    </h1>\r\n                    <div className=\"admin-line-div\"></div>\r\n                </Row>\r\n                <Row className=\"admin-row\">\r\n                    <Breadcrumb className=\"admin-row__breadcrumb\">\r\n                        <Breadcrumb.Item className=\"admin-row__breadcrumb-link\" href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item className=\"admin-row__breadcrumb-link\" active>Manage Discount Codes</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </Row>\r\n                <Link to=\"/adddiscount\"><Button className=\"admin__button\">Add Code</Button></Link>\r\n                <Row className=\"admin-row\">\r\n                    <Table striped bordered hover className=\"admin-table\" id=\"manage-discount_code-table\">\r\n                        <thead className=\"admin-table__header\">\r\n                            <tr className=\"admin-table__header-row\">\r\n                                <th className=\"admin-table__header-data\">No.</th>\r\n                                <th className=\"admin-table__header-data\">Code Name</th>\r\n                                <th className=\"admin-table__header-data\">Code</th>\r\n                                <th className=\"admin-table__header-data\">Code Discount Value</th>\r\n                                <th className=\"admin-table__header-data\">Code Status</th>\r\n                                <th className=\"admin-table__header-data\">Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"admin-table__body\">\r\n                            {discounts.map((code, index) => (\r\n                                <ManageDiscountCodeRow sn={index + 1} key={code.discount_id} discountCode={code} deleteFunction={deleteBtn} />\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ManageDiscountCode;","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Container, Row, Button, Form } from 'react-bootstrap';\r\nimport '../css/addadmin.css';\r\nimport Popup from 'reactjs-popup';\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\nimport '../css/addadmins.css'\r\n\r\n\r\nfunction AddAdmin() {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [accessRight, setAccessRight] = useState(\"\");\r\n    const [data, setData] = useState({})\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const validateForm = () => {\r\n        return email.length > 0 && firstName.length > 0 && lastName.length > 0 && password.length > 7;\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const addAdmin = (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/admin`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'access_right': localStorage.getItem('access_right')\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    if (json.err = \"The new email provided is in use. Please try again.\") {\r\n                        alert(json.err)\r\n                        return\r\n                    }\r\n                    alert(JSON.stringify(json))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    alert(JSON.stringify(err))\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        setData({ \"first_name\": firstName, \"last_name\": lastName, \"email\": email, \"password\": password, \"access_right\": accessRight })\r\n        console.log(JSON.stringify(data));\r\n        e.preventDefault();\r\n    }\r\n\r\n    const ConfirmPopup = ({ close }) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Details?</h3>\r\n                <Button className=\"popup-card__button\"\r\n                    onClick={() => addAdmin({\r\n                        \"first_name\": firstName, \"last_name\": lastName,\r\n                        \"email\": email, \"password\": password, \"access_right\": accessRight\r\n                    }).then(() => window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageadmins')}\r\n                    type=\"submit\">OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <div className=\"admin-card\">\r\n                <Form className=\"admin-form\">\r\n                    <Row className=\"admin-form__row\">\r\n                        <p className=\"admin-form__header\">\r\n                            Add Admin\r\n                        </p>\r\n                        <div className=\"admin-form__line\"></div>\r\n                    </Row>\r\n                    <Row className=\"admin-form__row\">\r\n                        <Form.Group className=\"admin-form__input-container\" size=\"md\" controlId=\"first-name\">\r\n                            <Form.Label className=\"admin-form__input-label\">First Name</Form.Label>\r\n                            <Form.Control\r\n                                autoFocus\r\n                                className=\"admin-form__input\"\r\n                                type=\"text\"\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"admin-form__input\" size=\"md\" controlId=\"last-name\">\r\n                            <Form.Label className=\"admin-form__input-label\">Last Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                className=\"admin-form__input\"\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"admin-form__input\" size=\"md\" controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                className=\"admin-form__input\"\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"admin-form__row\">\r\n                        <p className=\"admin-form__header\">Role</p>\r\n                        <div className=\"admin-form__line\"></div>\r\n                    </Row>\r\n                    <Row className=\"admin-form__row\">\r\n                        <Form.Group className=\"admin-form__checkbox-container\" controlId=\"formBasicCheckbox\">\r\n                            <Form.Check name=\"role\" id=\"ROOT_ADMIN\" className=\"admin-form__checkbox\" type=\"radio\" label=\"Root Admin\" onChange={(e) => setAccessRight(e.target.id)} />\r\n                            <Form.Check name=\"role\" id=\"OPERATIONS\" className=\"admin-form__checkbox\" type=\"radio\" label=\"Operations\" onChange={(e) => setAccessRight(e.target.id)} />\r\n                            <Form.Check name=\"role\" id=\"CONTENT\" className=\"admin-form__checkbox\" type=\"radio\" label=\"Content\" onChange={(e) => setAccessRight(e.target.id)} />\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row>\r\n                        <Form.Group className=\"admin-form__input\" size=\"md\" controlId=\"email\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                className=\"admin-form__input\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"admin-form__row\">\r\n                        <Popup\r\n                            modal\r\n                            closeOnDocumentClick={false}\r\n                            trigger={open =>\r\n                                <Button className=\"admin-form__button\" block size=\"lg\">\r\n                                    Save\r\n                                </Button>\r\n                            }\r\n                        >\r\n                            {close => <ConfirmPopup close={close} />}\r\n                        </Popup>\r\n                        <Button className=\"admin-form__button\" block size=\"lg\" onClick={onCancel}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddAdmin;","import { BrowserRouter as Router, Switch, Route, useHistory, Link } from \"react-router-dom\";\r\nimport { Container, Button, Form, Row } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport Popup from 'reactjs-popup';\r\n\r\nfunction AddDiscount() {\r\n    const [discount_name, setDiscountName] = useState(\"\")\r\n    const [discount_code, setDiscountCode] = useState(\"\")\r\n    const [discount_amount, setDiscountAmount] = useState(\"\")\r\n    const [active, setDiscountBoolean] = useState(false)\r\n    const history = useHistory();\r\n\r\n\r\n    const onCancel = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        addDiscount({ discount_name, discount_code, discount_amount, active })\r\n    }\r\n\r\n    const ConfirmPopup = ({ close }) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Details?</h3>\r\n                <Button className=\"popup-card__button\" onClick={() => onSubmit()} type=\"submit\">OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const addDiscount = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/discount`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'access_right': localStorage.getItem('access_right')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(\"json \" + JSON.stringify(json));\r\n                history.goBack()\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const discountAmountValidation = (e) => {\r\n        const validAmount = new RegExp(\"^([1-9][0-9]?|100)$\");\r\n        const amountValueString = e.target.value;\r\n        if (validAmount.test(amountValueString)) {\r\n            setDiscountAmount(parseInt(amountValueString));\r\n        } else {\r\n            alert(\"Enter a value Between 1 to 100\");\r\n            setDiscountAmount(\"\");\r\n        }\r\n    }\r\n\r\n    const onToggle = () => {\r\n        if (active) {\r\n            setDiscountBoolean(false)\r\n        } else {\r\n            setDiscountBoolean(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <div className=\"admin-card\">\r\n                <h1 className=\"admin-header\">Add Discount Code</h1>\r\n                <Form className=\"admin-form\">\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"discountName\">\r\n                        <Form.Label className=\"admin-form__label\">Discount Name</Form.Label>\r\n                        <Row className=\"admin-form__row\">\r\n                            <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter new discount name\" required\r\n                                value={discount_name} onChange={(e) => setDiscountName(e.target.value)} />\r\n                        </Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"admin-form\" controlId=\"discountCode\">\r\n                        <Form.Label className=\"admin-form__label\">Discount Code</Form.Label>\r\n                        <Row className=\"admin-form__row\">\r\n                            <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter new discount code\" required\r\n                                value={discount_code} onChange={(e) => setDiscountCode(e.target.value)} />\r\n                        </Row>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form\" controlId=\"discountAmount\">\r\n                        <Form.Label className=\"admin-form__label\">Discount Amount</Form.Label>\r\n                        <Row className=\"admin-form__row\">\r\n                            <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter value between 1 and 100 (1 and 100 inclusive)\" required\r\n                                value={discount_amount} onChange={e => discountAmountValidation(e)} />\r\n                        </Row>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form\" controlId=\"discountActive\">\r\n                        <Form.Label className=\"admin-form__label\">Activate/Deactivate Discount </Form.Label>\r\n                        {\r\n                            active\r\n                                ?\r\n                                <Row className=\"admin-form__row\">\r\n                                    Active\r\n                                    <div className='custom-control custom-switch'>\r\n                                        <input type='checkbox' className='custom-control-input' id='customSwitchesChecked' defaultChecked onChange={onToggle} />\r\n                                        <label className='custom-control-label' htmlFor='customSwitchesChecked'></label>\r\n                                    </div>\r\n                                </Row>\r\n                                :\r\n                                <Row className=\"admin-form__row\">\r\n                                    Inactive\r\n                                    <div className='custom-control custom-switch'>\r\n                                        <input type='checkbox' className='custom-control-input' id='customSwitches' readOnly onChange={onToggle} />\r\n                                        <label className='custom-control-label' htmlFor='customSwitches'></label>\r\n                                    </div>\r\n                                </Row>\r\n                        }\r\n                    </Form.Group>\r\n\r\n                    <Row className=\"admin-form__row\">\r\n                        <Popup\r\n                            modal\r\n                            closeOnDocumentClick={false}\r\n                            trigger={open =>\r\n                                <Button className=\"admin-form__button\" block size=\"lg\">\r\n                                    Save\r\n                                </Button>}\r\n                        >\r\n                            {close => <ConfirmPopup close={close} />}\r\n                        </Popup>\r\n                        <Button className=\"admin-form__button\" block size=\"lg\" onClick={onCancel}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default AddDiscount;","import React from 'react'\r\nimport {useState, useEffect } from 'react'\r\nimport { Container, Button, Form, Card } from 'react-bootstrap';\r\nimport '../css/createpasswordadmin.css';\r\n\r\nfunction CreatePasswordAdmin(){\r\n    const [newPass, setNewPass] = useState(\"\");\r\n    const [cfmPass, setCfmPass] = useState(\"\");\r\n\r\n    const [newPassInputText, setNewPassInputText] = useState(\"Password should only be 6 - 15 characters long, minimum 1 small letter, 1 big letter, 1 special character and you can only use these special characters ('!','@','#','*','_').\");\r\n    const [cfmPassInputText, setCfmPassInputText] = useState(\"Password should only be 6 - 15 characters long, minimum 1 small letter, 1 big letter, 1 special character and you can only use these special characters ('!','@','#','*','_').\");\r\n    \r\n    const [lengthFailText,setLengthFailText] = useState(\"\");\r\n    const [minimumOneSmallLetterFailText,setMinimumOneSmallLetterFailText] = useState(\"Minimum 1 small letter needed.\");\r\n    const [minimumOneBigLetterFailText,setMinimumOneBigLetterFailText] = useState(\"Minimum 1 capital letter needed.\");\r\n    const [minimumOneNumberFailText,setMinimumOneNumberFailText] = useState(\"Minimum 1 number needed\");\r\n    const [minimumOneSpecialCharacterFailText,setMinimumOneSpecialCharacterFailText] = useState(\"Minimum 1 special character needed\");\r\n    const [nonAllowedSpecialCharacterFoundText,setNonAllowedSpecialCharacterFoundText] = useState(\"\");\r\n    \r\n    const [newPassMainRegexFail,setNewPassMainRegexFail] = useState(false);\r\n    const [passwordValidateBoolean,setPasswordValidateBoolean] = useState(true);    \r\n    \r\n    const validateNewPassword = () =>{\r\n        var mainPasswordRegEx = new RegExp(\"(?=^.{6,15}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*\");\r\n        \r\n        var allowedSpecialCharactersRegEx = new RegExp(\"[!@#*_]+\");\r\n        \r\n        var nonAlphaNumericRegEx = new RegExp(\"[^A-Za-z0-9]\");\r\n        \r\n        var nonAlphaNumericRegEx = new RegExp(\"[^A-Za-z0-9]\");\r\n        var nonNumberRegEx = new RegExp(\"^[a-zA-Z]+$\");\r\n        var smallLetterRegEx = new RegExp(\"[a-z]\");\r\n        var bigLetterRegEx = new RegExp(\"[A-Z]\");\r\n        \r\n        const smallLetterArray = [];\r\n        const bigLetterArray = [];\r\n        const numberArray = [];\r\n        const specialCharacterArray = [];\r\n        const specialAllowedCharacterArray = [];\r\n        \r\n        const inputString = newPass;\r\n        const inputStringArray = inputString.split('');        \r\n        \r\n        const passwordInitialValidation = mainPasswordRegEx.test(inputString);\r\n\r\n        if(inputString.length===0){\r\n            const failArray = [setLengthFailText,setMinimumOneSmallLetterFailText,setMinimumOneBigLetterFailText,setMinimumOneNumberFailText,setMinimumOneSpecialCharacterFailText,setNonAllowedSpecialCharacterFoundText]\r\n            failArray.forEach((txt)=>{\r\n                txt(\"\");\r\n            })\r\n        } \r\n\r\n        const specialCharacterRegEx = (inputStringArray) =>{\r\n    \r\n            //for each character in the input:\r\n            inputStringArray.forEach((arrayCharacter)=>{\r\n                //takes out all non-alphanumeric characters (leaves in only special characters)\r\n                if(nonAlphaNumericRegEx.test(arrayCharacter)){\r\n                    //takes in all the non-allowed special characters\r\n                    if(!allowedSpecialCharactersRegEx.test(arrayCharacter)){\r\n                        //appends all to string and tests if its empty to make sure there are no non-allowed special characters\r\n                        specialCharacterArray.push(arrayCharacter);\r\n                        console.log(\"One  \"+specialCharacterArray);\r\n                        if(!(specialCharacterArray.join('') === '')){\r\n                            setNewPassInputText(\"Password Invalid\");\r\n                            setNewPassMainRegexFail(true);\r\n                            setNonAllowedSpecialCharacterFoundText(\"Illegal Special Characters used. Only these Special Characters are allowed ('!','@','#','*','_').\");\r\n                        } \r\n                    } \r\n                    console.log(\"acknowledged\")\r\n                    if(allowedSpecialCharactersRegEx.test(arrayCharacter)){\r\n                        if(specialCharacterArray.join('').length===0){\r\n                            setNewPassInputText(\"Password Valid\");    \r\n            \r\n                            setNewPassMainRegexFail(false);\r\n                            \r\n                            const failArray = [setLengthFailText,setMinimumOneSmallLetterFailText,setMinimumOneBigLetterFailText,setMinimumOneNumberFailText,setMinimumOneSpecialCharacterFailText,setNonAllowedSpecialCharacterFoundText]\r\n           \r\n                            failArray.forEach((txt)=>{\r\n                                txt(\"\");\r\n                            })\r\n                 \r\n                        }\r\n                    }\r\n                } else {\r\n                    setNonAllowedSpecialCharacterFoundText(\"\");\r\n                }\r\n            })\r\n        }\r\n        \r\n        const inputFailRegEx = (inputString, inputStringArray) =>{            \r\n            //judge length and set text according to failure\r\n            if (!(inputString.length >= 6 && inputString.length <= 15)){\r\n                (inputString.length < 6)?setLengthFailText(\"Password is too short.\"):setLengthFailText(\"Password is too long.\");\r\n            }\r\n            \r\n            if ((inputString.length >= 6 && inputString.length <= 15)||inputString.length===0){\r\n                setLengthFailText(\"\")\r\n            }\r\n            \r\n            if(inputString.length>0){\r\n                setMinimumOneSmallLetterFailText(\"Minimum 1 small letter needed.\");\r\n                setMinimumOneBigLetterFailText(\"Minimum 1 capital letter needed.\");\r\n                setMinimumOneNumberFailText(\"Minimum 1 number needed\");\r\n                setMinimumOneSpecialCharacterFailText(\"Minimum 1 special character needed\");\r\n            }  \r\n            //for each character in the input:\r\n            inputStringArray.forEach((arrayCharacter)=>{\r\n                //takes out all non-alphanumeric characters\r\n                if(!nonAlphaNumericRegEx.test(arrayCharacter)){\r\n                    //takes in all non-numeric characters\r\n                    if(nonNumberRegEx.test(arrayCharacter)){    \r\n                        //takes in all small letters\r\n                        if(smallLetterRegEx.test(arrayCharacter)){\r\n                            smallLetterArray.push(arrayCharacter);\r\n                            if((smallLetterArray.join('').length>0)){\r\n                                setMinimumOneSmallLetterFailText(\"\")\r\n                            } else {\r\n                                setMinimumOneSmallLetterFailText(\"Minimum 1 small letter needed.\")                            \r\n                            }                     \r\n                        }                     \r\n                        //takes in all big letters\r\n                        if(bigLetterRegEx.test(arrayCharacter)){\r\n                            bigLetterArray.push(arrayCharacter);\r\n                            if((bigLetterArray.join('').length>0)){\r\n                                setMinimumOneBigLetterFailText(\"\")\r\n                            } else {\r\n                                setMinimumOneBigLetterFailText(\"Minimum 1 capital letter needed.\")\r\n                            }                        \r\n                        }\r\n                        \r\n                        //takes in all numeric characters\r\n                    } else {\r\n                        numberArray.push(arrayCharacter);\r\n    \r\n                        if((numberArray.join('').length>0)){\r\n                            setMinimumOneNumberFailText(\"\")\r\n                        } else {\r\n                            setMinimumOneNumberFailText(\"Minimum 1 number needed.\")\r\n                        }  \r\n                    }\r\n                } else {\r\n                    specialAllowedCharacterArray.push(arrayCharacter);\r\n                    if((specialAllowedCharacterArray.join('').length>0)){\r\n                        setMinimumOneSpecialCharacterFailText(\"\")\r\n                    } else {\r\n                        setMinimumOneSpecialCharacterFailText(\"Minimum 1 special character needed.\")\r\n                    }  \r\n                }\r\n            })\r\n            \r\n        }\r\n\r\n        //Password needs 1 small, 1 large, 1 number, 1 special character\r\n        if(passwordInitialValidation){\r\n            setNewPassInputText(\"\");\r\n            specialCharacterRegEx(inputStringArray);\r\n        }\r\n    \r\n        //Fail\r\n        if(!mainPasswordRegEx.test(inputString)){\r\n            setNewPassInputText(\"Password Invalid\");\r\n            setNewPassMainRegexFail(true);\r\n            specialCharacterRegEx(inputStringArray);\r\n            inputFailRegEx(inputString, inputStringArray);\r\n        }\r\n\r\n    } \r\n    \r\n    const validateCfmPassword = () =>{\r\n        setPasswordValidateBoolean(newPass === cfmPass);\r\n        if(!passwordValidateBoolean){\r\n            setCfmPassInputText(\"Passwords are not the same\")\r\n        } else {\r\n            setCfmPassInputText(\"Passwords are the same!\");\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        if (newPass.length===0){\r\n            alert(\"Please Enter a Password.\")\r\n            e.preventDefault();\r\n        } else {\r\n            if(!newPassMainRegexFail){\r\n                if (passwordValidateBoolean){\r\n                    //insert proper POST function here\r\n                    alert(\"Password Confirmed\");\r\n                    e.preventDefault();\r\n                } else {\r\n                    alert(\"New password and confirm password are different. Please use the same one\");\r\n                    e.preventDefault();\r\n                }\r\n            } else {\r\n                alert(\"Password Invalid. Please try again.\")\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {    \r\n        validateNewPassword();\r\n        validateCfmPassword();\r\n    });\r\n\r\n    return(\r\n        <Container className=\"admin-container\" fluid>\r\n            <Card className=\"admin-card\">\r\n                <Form className=\"admin-form\" onSubmit={onSubmit}>\r\n                    <Form.Group size=\"md\" className=\"admin-form__form-group\"  controlId=\"new-password\">\r\n                        <Form.Label className=\"admin-form__input-label\">New Password</Form.Label>\r\n                        <Form.Control\r\n                            autoFocus\r\n                            className=\"admin-form__input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Create New Password\"\r\n                            onChange={(e) => setNewPass(e.target.value)}\r\n                            />\r\n                        {\r\n                            (newPass===\"\")\r\n                            ?                                \r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">Password should only be 6 - 15 characters long, minimum 1 small letter, 1 big letter, 1 special character and you can only use these special characters ('!','@','#','*','_').</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(newPass===\"\")\r\n                            ?                                \r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{newPass}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(newPass===\"\")\r\n                            ?                                \r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{newPassInputText}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(lengthFailText.length===0)\r\n                            ?\r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{lengthFailText}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(minimumOneSmallLetterFailText.length===0)\r\n                            ?\r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{minimumOneSmallLetterFailText}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(minimumOneBigLetterFailText.length===0)\r\n                            ?\r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{minimumOneBigLetterFailText}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(minimumOneNumberFailText.length===0)\r\n                            ?\r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{minimumOneNumberFailText}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(minimumOneSpecialCharacterFailText.length===0)\r\n                            ?\r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{minimumOneSpecialCharacterFailText}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(nonAllowedSpecialCharacterFoundText.length===0)\r\n                            ?\r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{nonAllowedSpecialCharacterFoundText}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group size=\"md\" className=\"admin-form__form-group\" controlId=\"confirm-password\">\r\n                        <Form.Label className=\"admin-form__input-label\">Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            className=\"admin-form__input\"\r\n                            placeholder=\"Confirm Password\"\r\n                            onChange={(e) => setCfmPass(e.target.value)}\r\n                            />\r\n                        {\r\n                            !(cfmPass === \"\")\r\n                            ?\r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{cfmPassInputText}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        {\r\n                            !(cfmPass === \"\")\r\n                            ?\r\n                            <>\r\n                            <Form.Label className=\"admin-form__input-sub-label\">{cfmPass}</Form.Label>\r\n                            <br/>\r\n                            </>\r\n                            :null\r\n                        }\r\n                        <br/>\r\n                    </Form.Group>\r\n                    <Button className=\"admin-form__button\" block size=\"lg\" type=\"submit\"> \r\n                        Submit \r\n                    </Button> \r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreatePasswordAdmin;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Button, Form, Row, Table } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction AdminOrderDetails() {\r\n    const [order, setOrder] = useState({})\r\n    const [orderItems, setOrderItems] = useState([])\r\n    const [delivery_date, setDeliveryDate] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [edit, setEdit] = useState(false)\r\n    const [time, setTime] = useState(\"\")\r\n    const [total, setTotal] = useState(\"\")\r\n\r\n\r\n    const onBack = () => {\r\n        window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageorders'\r\n    }\r\n\r\n    let status = order.status\r\n    let { order_id } = useParams();\r\n\r\n    const onToggle = () => {\r\n        if (status == \"Delivered\") {\r\n            status = \"Pending\"\r\n        } else {\r\n            status = \"Delivered\"\r\n        }\r\n        updateOrderByOrderId({\r\n            order_id: order.order_id, delivery_date: delivery_date.slice(0, 10),\r\n            delivery_time_range: order.delivery_time_range, total_amount: order.total_amount,\r\n            shipping_address: order.shipping_address, postal_code: order.postal_code, status: status\r\n        })\r\n        window.location.reload();\r\n    }\r\n\r\n    const updateOrderByOrderId = (data) => {\r\n        fetch(`https://apibounwe.herokuapp.com/order`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'access_right': localStorage.getItem('access_right')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                console.log(JSON.stringify(json))\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getOrderNamebyOrderId = (order_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/ordername/${order_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setOrder(json[0])\r\n                setDeliveryDate(json[0].delivery_date.slice(0, 10))\r\n                setDate(json[0].delivery_date.slice(0, 10))\r\n                setTime(json[0].delivery_time_range)\r\n                setTotal(json[0].total_amount.toFixed(2))\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getOrderItemByOrderId = (order_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/itemOrder/${order_id}`, { headers: { 'access_right': localStorage.getItem('access_right') } })\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                // console.log(\"json \" + JSON.stringify(json));\r\n                setOrderItems(json)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderNamebyOrderId(order_id)\r\n        getOrderItemByOrderId(order_id)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"admin-container\">\r\n                <Button className=\"admin-form__button\" block size=\"lg\" onClick={onBack}>\r\n                    Back\r\n                </Button>\r\n                <div className=\"admin-card\">\r\n                    <h3>Invoice #{order.order_id}</h3>\r\n                    <div>User: {order.first_name} {order.last_name}</div>\r\n                    <div>Delivery Date: {delivery_date}</div>\r\n                    <div>Delivery Time Range: {order.delivery_time_range}</div>\r\n                    <div>Total Amount: ${total}</div>\r\n                    <div>Shipping Address: {order.shipping_address}</div>\r\n                    <div>Postal Code: {order.postal_code}</div>\r\n                    <div>Order Made: {new Date(order.created_at).toUTCString().substring(0, 22)}</div>\r\n                    <div id=\"status\">Status: {order.status}\r\n                        {(order.status === \"Delivered\")\r\n                            ? <div className='custom-control custom-switch'>\r\n                                <input type='checkbox' className='custom-control-input' id='customSwitchesChecked' defaultChecked onChange={onToggle} />\r\n                                <label className='custom-control-label' htmlFor='customSwitchesChecked'></label>\r\n                            </div>\r\n                            : <div className='custom-control custom-switch'>\r\n                                <input type='checkbox' className='custom-control-input' id='customSwitches' readOnly onChange={onToggle} />\r\n                                <label className='custom-control-label' htmlFor='customSwitches'></label>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            !edit\r\n                                ?\r\n                                <div>\r\n                                    <Button onClick={() => setEdit(!edit)}>Edit Delivery Date and Time</Button>\r\n                                    <Table className=\"admin-table\" striped bordered hover>\r\n                                        <thead className=\"admin-table__header\">\r\n                                            <tr className=\"admin-table__header-row\">\r\n                                                <th className=\"admin-table__header-col\">Order Item</th>\r\n                                                <th className=\"admin-table__header-col\">Quantity</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {orderItems.map((orderItem) => (\r\n                                            <tr className=\"admin-table__body-row\">\r\n                                                <td className=\"admin-table__body-data\">{orderItem.product_name}, {orderItem.stock_size}</td>\r\n                                                <td className=\"admin-table__body-data\">{orderItem.quantity}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </Table>\r\n                                </div>\r\n                                : null\r\n                        }\r\n                        {\r\n                            edit\r\n                                ?\r\n                                <Form className=\"admin-form\">\r\n                                    <br></br>\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <p className=\"admin-form__header\">\r\n                                            Edit Delivery Date and Time:\r\n                                        </p>\r\n                                        <div className=\"admin-form__line\"></div>\r\n                                    </Row>\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Delivery Date</Form.Label>\r\n                                            <br></br>\r\n                                            <Form.Control placeholder=\"Format: YYYY-MM-DD\" onChange={(a) => setDate(a.target.value)}></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Row className=\"admin-form__row\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Delivery Time</Form.Label>\r\n                                            <Form.Control placeholder=\"Enter in 24-hr format (16:00-17:00)\" onChange={(a) => setTime(a.target.value)}></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Button type=\"submit\"\r\n                                            onClick={() => updateOrderByOrderId({\r\n                                                order_id: order.order_id, delivery_date: date,\r\n                                                delivery_time_range: time, total_amount: order.total_amount,\r\n                                                shipping_address: order.shipping_address, postal_code: order.postal_code, status: order.status\r\n                                            })}\r\n                                        >Save</Button>\r\n                                        <Button variant=\"danger\" onClick={() => setEdit(!edit)}>Cancel</Button>\r\n                                    </Row>\r\n                                </Form>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrderDetails","import { BrowserRouter as Router, Switch, Route, useHistory, Link, useParams } from \"react-router-dom\";\r\nimport { Container, Button, Form, Col, Row } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport Popup from 'reactjs-popup';\r\n\r\nfunction EditDiscountDetails() {\r\n    const [discount_name, setDiscountName] = useState('')\r\n    const [discount_code, setDiscountCode] = useState('')\r\n    const [discount_amount, setDiscountAmount] = useState('')\r\n    const [active, setDiscountBoolean] = useState(false)\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    let {discount_id} = useParams()\r\n\r\n    useEffect(() => {\r\n        getDiscountById(discount_id)\r\n    }, [])\r\n\r\n    const getDiscountById = (discount_id) => {\r\n        fetch(`https://apibounwe.herokuapp.com/discountbyid/${discount_id}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n                setDiscountName(json[0].discount_name)\r\n                setDiscountCode(json[0].discount_code)\r\n                setDiscountAmount(json[0].discount_amount)\r\n                setDiscountBoolean(json[0].active)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const updateDiscountById = (data) => {\r\n        alert(JSON.stringify(data))\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/updatediscount`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'access_right': localStorage.getItem('access_right')\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    reject(err)\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    const onSubmit = () => {\r\n        updateDiscountById({ discount_name, discount_code, discount_amount, \"active\": active ? 1 : 0, discount_id })\r\n        .then(() => window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/managediscountcode')\r\n    }\r\n\r\n    let [editName, setEditName] = useState(false)\r\n    let [editCode, setEditCode] = useState(false)\r\n    let [editAmount, setEditAmount] = useState(false)\r\n\r\n\r\n    const onClickName = () => {\r\n        setEditName(true)\r\n        let boolean_array = [setEditCode, setEditAmount];\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n    }\r\n\r\n    const onClickCode = () => {\r\n        setEditCode(true)\r\n        let boolean_array = [setEditName, setEditAmount];\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n\r\n    const onClickAmount = () => {\r\n        setEditAmount(true)\r\n        let boolean_array = [setEditName, setEditCode];\r\n        boolean_array.forEach((bool) => {\r\n            bool(false)\r\n        })\r\n\r\n    }\r\n\r\n    const discountAmountValidation = (e) => {\r\n        const validAmount = new RegExp(\"^([1-9][0-9]?|100)$\");\r\n        const amountValueString = e.target.value;\r\n        if (validAmount.test(amountValueString)) {\r\n            setDiscountAmount(parseInt(amountValueString));\r\n        } else {\r\n            alert(\"Enter a value Between 1 to 100\");\r\n            setDiscountAmount(\"\");\r\n        }\r\n    }\r\n\r\n    function onToggle() {\r\n        setDiscountBoolean(!active)\r\n    }\r\n\r\n    const ConfirmPopup = ({ close }) => {\r\n        return (\r\n            <div className=\"popup-card\">\r\n                <h3 className=\"popup-card__header\">Confirm Details?</h3>\r\n                <Button className=\"popup-card__button\" onClick={() => onSubmit()} type=\"submit\">OK</Button>\r\n                <Button className=\"popup-card__button\" onClick={close}>Cancel</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <div className=\"admin-card\">\r\n                <Button className=\"admin-button\" onClick={onBack}>Back</Button>\r\n                <h1 className=\"admin-header\">Edit discount details</h1>\r\n                <Form className=\"admin-form\">\r\n                    <Form.Group className=\"admin-form__input-container\" controlId=\"discountName\">\r\n                        <Form.Label className=\"admin-form__label\">Discount Name</Form.Label>\r\n                        {\r\n                            !editName\r\n                                ?\r\n                                <Row className=\"admin-form__row\">\r\n                                    <Col xs={10}>\r\n                                        <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={discount_name}>\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col xs={2}>\r\n                                        <PencilSquare onClick={onClickName} />\r\n                                    </Col>\r\n                                </Row>\r\n                                : null\r\n                        }\r\n                        {\r\n                            editName\r\n                                ?\r\n                                <Row className=\"admin-form__row\">\r\n                                    <Form.Control type=\"name\" className=\"admin-form__input\" placeholder=\"Enter new discount name\" required\r\n                                        value={discount_name} onChange={(e) => setDiscountName(e.target.value)} />\r\n                                </Row>\r\n                                : null\r\n                        }\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"admin-form\" controlId=\"discountCode\">\r\n                        <Form.Label className=\"admin-form__label\">Discount Code</Form.Label>\r\n                        {\r\n                            !editCode\r\n                                ?\r\n                                <Row className=\"admin-form__row\">\r\n                                    <Col xs={10}>\r\n                                        <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={discount_code}>\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col xs={2}>\r\n                                        <PencilSquare onClick={onClickCode} />\r\n                                    </Col>\r\n                                </Row>\r\n                                : null\r\n                        }\r\n                        {\r\n                            editCode\r\n                                ?\r\n                                <Row className=\"admin-form__row\">\r\n                                    <Form.Control type=\"text\" className=\"admin-form__input\" placeholder=\"Enter new discount code\" required\r\n                                        value={discount_code} onChange={(e) => setDiscountCode(e.target.value)} />\r\n                                </Row>\r\n                                : null\r\n                        }\r\n\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form\" controlId=\"discountAmount\">\r\n                        <Form.Label className=\"admin-form__label\">Discount Amount</Form.Label>\r\n                        {\r\n                            !editAmount\r\n                                ?\r\n                                <Row className=\"admin-form__row\">\r\n                                    <Col xs={10}>\r\n                                        <Form.Control plaintext readOnly className=\"admin-form__input-readonly\" defaultValue={discount_amount}>\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col xs={2}>\r\n                                        <PencilSquare onClick={onClickAmount} />\r\n                                    </Col>\r\n                                </Row>\r\n                                : null\r\n                        }\r\n                        {\r\n                            editAmount\r\n                                ?\r\n                                <Row className=\"admin-form__row\">\r\n                                    <Form.Control type=\"number\" className=\"admin-form__input\" placeholder=\"Enter value between 1 and 100 (1 and 100 inclusive)\" required\r\n                                        value={discount_amount} onChange={e => discountAmountValidation(e)} />\r\n                                </Row>\r\n                                : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group className=\"admin-form\" controlId=\"discountActive\">\r\n                        <Form.Label className=\"admin-form__label\">Activate/Deactivate Discount </Form.Label>\r\n                        {\r\n                            active == 1\r\n                                ?\r\n                                <Row className=\"admin-form__row\">\r\n                                    Active\r\n                                    <div className='custom-control custom-switch'>\r\n                                        <input type='checkbox' className='custom-control-input' id='customSwitchesChecked' defaultChecked onClick={() => onToggle()} />\r\n                                        <label className='custom-control-label' htmlFor='customSwitchesChecked'></label>\r\n                                    </div>\r\n                                </Row>\r\n                                :\r\n                                <Row className=\"admin-form__row\">\r\n                                    Inactive\r\n                                    <div className='custom-control custom-switch'>\r\n                                        <input type='checkbox' className='custom-control-input' id='customSwitches' readOnly onClick={() => onToggle()} />\r\n                                        <label className='custom-control-label' htmlFor='customSwitches'></label>\r\n                                    </div>\r\n                                </Row>\r\n                        }\r\n                    </Form.Group>\r\n\r\n                    <Popup\r\n                        modal\r\n                        closeOnDocumentClick={false}\r\n                        trigger={open =>\r\n                            <Button className=\"admin-form__button\" block size=\"lg\">\r\n                                Submit\r\n                            </Button>}\r\n                    >\r\n                        {close => <ConfirmPopup close={close} />}\r\n                    </Popup>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default EditDiscountDetails;","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Accordion } from 'react-bootstrap';\r\nimport '../css/adminsidebar.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { PersonCircle } from 'react-bootstrap-icons';\r\nimport '../css/sidebar.css'\r\n\r\n//Role checking middleware\r\nconst checkAccess = require('../access/permissions')\r\nconst perm = require('../access/roles')\r\nconst action = perm.actions\r\nconst roles = perm.roles\r\n\r\nconst activeStyleSidebar =  {\r\n        color: '#FCA311'\r\n}\r\n\r\nfunction AdminSidebar() {  \r\n    const [admin, setAdmin] = useState({})\r\n    useEffect(() => {\r\n        getAdminbyId(localStorage.getItem('admin_id'))\r\n    }, [])\r\n    \r\n    const getAdminbyId = (admin_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/admin/${admin_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    setAdmin(json[0])\r\n                    return resolve(json[0])\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    let user = JSON.stringify({access_right: localStorage.getItem('access_right')})\r\n    console.log(user)\r\n\r\n    return (\r\n        <>\r\n            <Accordion className=\"sidebar\" flush>\r\n                <Accordion.Item  className=\"sidebar__item\" eventKey='0'>\r\n                    <Link \r\n                        to={{\r\n                            pathname:`/adminprofile`\r\n                        }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">\r\n                                        <Col className=\"sidebar__col\">\r\n                                                <PersonCircle/>\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <Row className=\"sidebar__row sidebar__row--align\">\r\n                                                <span className=\"sidebar__row-text\">                                    \r\n                                                    {admin.first_name}\r\n                                                </span>\r\n                                            </Row>\r\n                                            <Row className=\"sidebar__row sidebar__row--align\">\r\n                                                <span className=\"sidebar__row-text\">                                    \r\n                                                    {admin.access_right}\r\n                                                </span>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                    </Link>       \r\n                </Accordion.Item>    \r\n                {checkAccess(user, action.EDIT_PRODUCTS) &&\r\n                    (<Accordion.Item  className=\"sidebar__item\" eventKey='0'>\r\n                    <Link \r\n                        to={{\r\n                            pathname:`/manageproducts`\r\n                        }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">Manage Products</span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                    </Link>       \r\n                </Accordion.Item>)}\r\n                {checkAccess(user, action.EDIT_PRODUCTS) &&\r\n                    (<Accordion.Item  className=\"sidebar__item\" eventKey='0'>\r\n                    <Link \r\n                        to={{\r\n                            pathname:`/manageusers`\r\n                        }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">Manage Users</span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                    </Link>       \r\n                </Accordion.Item>)}\r\n                {checkAccess(user, action.EDIT_PRODUCTS) &&\r\n                    (<Accordion.Item  className=\"sidebar__item\" eventKey='0'>\r\n                    <Link \r\n                        to={{\r\n                            pathname:`/manageadmins`\r\n                        }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">Manage Admins</span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                    </Link>       \r\n                </Accordion.Item>)}\r\n                {checkAccess(user, action.EDIT_RECIPES) &&\r\n                    (<Accordion.Item  className=\"sidebar__item\" eventKey='0'>\r\n                    <Link \r\n                        to={{\r\n                            pathname:`/managerecipes`\r\n                        }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">Manage Recipes</span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                    </Link>       \r\n                </Accordion.Item>)}\r\n                {checkAccess(user, action.EDIT_ORDERS) &&\r\n                    (<Accordion.Item className=\"sidebar__item\" eventKey='0'>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/manageorders`\r\n                            }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">Manage Orders</span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                        </Link>\r\n                    </Accordion.Item>)}\r\n                {checkAccess(user, action.EDIT_DISCOUNT) &&\r\n                    (<Accordion.Item className=\"sidebar__item\" eventKey='0'>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/managediscountcode`\r\n                            }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">Manage Discount Code</span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                        </Link>\r\n                    </Accordion.Item>)}\r\n                {/* <Accordion.Item  className=\"sidebar__item\" eventKey='0'>\r\n                    <Link \r\n                        to={{\r\n                            pathname:`/createpasswordadmin`\r\n                        }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">Create Password (TEMP)</span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                    </Link>       \r\n                </Accordion.Item>     */}\r\n                <Accordion.Item  className=\"sidebar__item\" eventKey='0'>\r\n                    <Link \r\n                        to={{\r\n                            pathname:`/home`\r\n                        }}>\r\n                            <Accordion.Header className=\"sidebar__header sidebar__header--inactive\">\r\n                                <div className=\"sidebar__header-card sidebar__header-card--inactive\">\r\n                                    <span className=\"sidebar__header-card-span\">Switch to User Side</span>\r\n                                </div>\r\n                            </Accordion.Header>\r\n                    </Link>       \r\n                </Accordion.Item> \r\n        </Accordion>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminSidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Row } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, Link, useParams } from \"react-router-dom\";\r\n\r\nfunction EditAdmins() {\r\n    const [access_right, setAccessRight] = useState(\"\")\r\n    const [admin, setAdmin] = useState({})\r\n    const history = useHistory();\r\n\r\n    const onBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    let { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getAdminbyId(id)\r\n    }, [])\r\n\r\n    const getAdminbyId = (admin_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/admin/${admin_id}`)\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    setAdmin(json[0]);\r\n                    return resolve(json[0]);\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    const updateAdminbyId = (admin_id, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`https://apibounwe.herokuapp.com/admin/${admin_id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'access_right': localStorage.getItem('access_right')\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => res.json())\r\n                .then((json) => {\r\n                    console.log(\"json \" + JSON.stringify(json));\r\n                    console.log(JSON.stringify(data))\r\n                    return resolve(json)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    return reject(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-card\">\r\n            <Button className=\"admin-button\" onClick={onBack}>Back</Button>\r\n            <h1 clasName=\"admin-header\">Edit Admin Details</h1>\r\n            <h5>Name: {admin.first_name} {admin.last_name}</h5>\r\n            <h5>Email: {admin.email}</h5>\r\n            <h5>Current Role: {admin.access_right}</h5>\r\n            <h5>New Role: </h5>\r\n            <Form className=\"admin-form\">\r\n                <Row className=\"admin-form__row\">\r\n                    <Form.Group className=\"admin-form__checkbox-container\" controlId=\"formBasicCheckbox\">\r\n                        <Form.Check name=\"role\" id=\"Root Admin\" className=\"admin-form__checkbox\" type=\"radio\" label=\"Root Admin\" onChange={(e) => setAccessRight(e.target.id)} />\r\n                        <Form.Check name=\"role\" id=\"Operations\" className=\"admin-form__checkbox\" type=\"radio\" label=\"Operations\" onChange={(e) => setAccessRight(e.target.id)} />\r\n                        <Form.Check name=\"role\" id=\"Content\" className=\"admin-form__checkbox\" type=\"radio\" label=\"Content\" onChange={(e) => setAccessRight(e.target.id)} />\r\n                    </Form.Group>\r\n                </Row>\r\n            </Form>\r\n            <Button className=\"admin-form__button\" variant=\"primary\"\r\n                onClick={() => updateAdminbyId(admin.admin_id, {\r\n                    access_right: access_right, email: admin.email,\r\n                    first_name: admin.first_name, last_name: admin.last_name\r\n                })\r\n                    .then(window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/manageadmins')\r\n                }>\r\n                Submit\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditAdmins;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Button, Form, Table } from 'react-bootstrap';\r\nimport '../css/manageadmins.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    NavLink,\r\n    Redirect,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport ManageAdminRow from './ManageAdminRow';\r\n\r\n\r\nfunction AdminSearch({ getAdminDetail }) {\r\n    const [newSearch, setNewSearch] = useState(\"\")\r\n    const [admins, setAdmins] = useState([])\r\n    let { search } = useParams()\r\n\r\n    const onSearch = () => {\r\n        search = newSearch\r\n        window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/searchadmin/\" + search\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchAdmin(search)\r\n    }, [])\r\n\r\n    const searchAdmin = (search) => {\r\n        return new Promise((resolve, reject) => {\r\n          fetch(`https://apibounwe.herokuapp.com/searchadmin/${search}`)\r\n            .then(res => res.json())\r\n            .then((json) => {\r\n              console.log(\"json \" + JSON.stringify(json));\r\n              setAdmins(json)\r\n              return resolve(json)\r\n            }).catch((err) => {\r\n              console.log(err);\r\n              return reject(err);\r\n            });\r\n        })\r\n      }\r\n\r\n    return (\r\n        <Container className=\"admin-container\" fluid>\r\n            <Row className=\"admin-row\">\r\n                <Form className=\"admin-form\">\r\n                    <Form.Group className=\"admin-form__input-container\">\r\n                        <Form.Control onChange={(e) => setNewSearch(e.target.value)} className=\"admin-form__input-container\" type=\"text\" placeholder=\"Search\" />\r\n                        <Link to={`/searchadmin/${search}`}><Button type=\"submit\" onClick={() => onSearch(search)}>Search</Button></Link>\r\n                    </Form.Group>\r\n                </Form>\r\n                <h1 className=\"admin-header\">\r\n                    Manage Admin\r\n                </h1>\r\n                <div className=\"admin-line-div\"></div>\r\n            </Row>\r\n            <Row className=\"admin-row\">\r\n                <Breadcrumb className=\"admin-breadcrumb\">\r\n                    <Breadcrumb.Item className=\"admin-breadcrumb__link\" href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item className=\"admin-breadcrumb__link\" active>Manage Admins</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Link to=\"/addadmin\"><Button className=\"admin-button\">Add Admin</Button></Link>\r\n            <Row className=\"admin-row\">\r\n                <Table striped bordered hover className=\"admin-table\" id=\"manage-admins-table\">\r\n                    <thead className=\"admin-table__header\">\r\n                        <tr className=\"admin-table__header-row\">\r\n                            <th className=\"admin-table__header-data\">S/N</th>\r\n                            <th className=\"admin-table__header-data\">Name</th>\r\n                            <th className=\"admin-table__header-data\">Email</th>\r\n                            <th className=\"admin-table__header-data\">Access Rights</th>\r\n                            <th className=\"admin-table__header-data\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"admin-table__body\">\r\n                        {admins.map((admins, index) => (\r\n                            <ManageAdminRow key={admins.admin_id} admins={admins} sn={index + 1} getAdminDetail={getAdminDetail} />\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminSearch;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Table, Container, Row, Col, Nav, Navbar, Button, Form, FormControl } from 'react-bootstrap';\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport ManageUserRow from './ManageUserRow';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  Redirect,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nfunction UserSearch() {\r\n  const [users, setUsers] = useState([])\r\n  const [newSearch, setNewSearch] = useState(\"\")\r\n  let { search } = useParams()\r\n\r\n  const onSearch = () => {\r\n    search = newSearch\r\n    window.location.href = \"https://anarchygene.github.io/fyp-frontend/#/searchuser/\" + search\r\n}\r\n\r\nuseEffect(() => {\r\n  searchUser(search)\r\n}, [])\r\n\r\n\r\nconst searchUser = (search) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`https://apibounwe.herokuapp.com/searchuser/${search}`)\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        console.log(\"json \" + JSON.stringify(json));\r\n        setUsers(json)\r\n        return resolve(json)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n        return reject(err);\r\n      });\r\n  })\r\n}\r\n\r\n\r\n  return (\r\n    <Container className=\"manage-users-container\" fluid>\r\n      <Row className=\"header-row\">\r\n        <Form className=\"admin-form\">\r\n          <Form.Group className=\"admin-form__input-container\">\r\n            <Form.Control onChange={(e) => setNewSearch(e.target.value)} className=\"admin-form__input-container\" type=\"text\" placeholder=\"Search\" />\r\n            <Link to={`/searchuser/${search}`}><Button type=\"submit\" onClick={() => onSearch()}>Search</Button></Link>\r\n          </Form.Group>\r\n        </Form>\r\n        <h1 className=\"admin-header\">\r\n          Manage Users\r\n        </h1>\r\n        <div className=\"admin-line-div\"></div>\r\n      </Row>\r\n      <Row>\r\n        <Breadcrumb className=\"admin-breadcrumb\">\r\n          <Breadcrumb.Item className=\"admin-breadcrumb__link\" href=\"/adminprofile\">Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item className=\"admin-breadcrumb__link\" active>Manage Users</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      </Row>\r\n\r\n      <Table striped className=\"admin-table\" bordered hover>\r\n        <thead className=\"admin-table__header\">\r\n          <tr className=\"admin-table__header-row\">\r\n            <th className=\"admin-table__header-data\">S/N</th>\r\n            <th className=\"admin-table__header-data\">Name</th>\r\n            <th className=\"admin-table__header-data\">Primary Contact Number</th>\r\n            <th className=\"admin-table__header-data\">Secondary Contact Number</th>\r\n            <th className=\"admin-table__header-data\">Billing Address</th>\r\n            <th className=\"admin-table__header-data\">Last Order Number</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"admin-table__body\">\r\n          {users.map((users, index) => (\r\n            <ManageUserRow id={users.user_id} sn={index + 1} name={users.first_name + \" \" + users.last_name} pcontact={users.pcontact_no} scontact={users.scontact_no} address={users.address} order={users.order_id}/>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserSearch;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory, Link, HashRouter } from \"react-router-dom\";\r\n\r\n//User Side Components\r\nimport Navigation from './components/usersidecomponents/Navbar.jsx';\r\nimport UserLogin from './components/usersidecomponents/Login';\r\nimport Homepage from './components/usersidecomponents/Homepage';\r\nimport About from './components/usersidecomponents/About';\r\nimport Product from './components/usersidecomponents/Products'\r\nimport Recipe from './components/usersidecomponents/Recipes'\r\nimport ProductDetails from './components/usersidecomponents/ProductDetails'\r\nimport RecipeDetails from './components/usersidecomponents/RecipeDetails';\r\nimport UserAccountDetails from './components/usersidecomponents/UserAccountDetails';\r\nimport ShoppingCart from './components/usersidecomponents/ShoppingCart';\r\nimport RegisterPage from './components/usersidecomponents/RegisterPage.jsx'\r\nimport RecipeSidebar from './components/usersidecomponents/RecipeSidebar.jsx';\r\nimport ProductSidebar from './components/usersidecomponents/ProductSidebar.jsx';\r\nimport UserDetailSidebar from './components/usersidecomponents/UserDetailSidebar';\r\nimport Payment from './components/usersidecomponents/Payment'\r\nimport Search from './components/usersidecomponents/Search';\r\nimport SuccessfulOrder from './components/usersidecomponents/SuccessfulOrder.jsx';\r\n//\r\n//Admin Side Components\r\nimport AdminLogin from './components/adminsidecomponents/AdminLogin.jsx';\r\nimport AdminProducts from './components/adminsidecomponents/AdminProducts';\r\nimport AdminRecipes from './components/adminsidecomponents/AdminRecipes';\r\nimport AdminOrders from './components/adminsidecomponents/AdminOrders';\r\nimport AdminProfile from './components/adminsidecomponents/AdminProfile';\r\nimport ManageAdmins from './components/adminsidecomponents/ManageAdmins';\r\nimport ManageUsers from './components/adminsidecomponents/ManageUsers';\r\nimport ManageDiscountCode from './components/adminsidecomponents/ManageDiscountCode'\r\nimport AddAdmin from './components/adminsidecomponents/AddAdmins';\r\nimport AddDiscount from './components/adminsidecomponents/AddDiscount'\r\nimport CreatePasswordAdmin from './components/adminsidecomponents/CreatePasswordAdmin';\r\nimport EditAdminProfile from './components/adminsidecomponents/EditAdminProfile.jsx';\r\nimport AdminOrderDetails from './components/adminsidecomponents/AdminOrderDetails';\r\nimport EditDiscountDetails from './components/adminsidecomponents/EditDiscountDetails';\r\nimport AdminSidebar from './components/adminsidecomponents/AdminSidebar.jsx';\r\nimport EditAdmins from './components/adminsidecomponents/EditAdmins';\r\nimport AdminSearch from './components/adminsidecomponents/AdminSearch';\r\nimport UserSearch from './components/adminsidecomponents/UserSearch';\r\n\r\nimport './App.css';\r\nimport './components/css/adminsideglobal.css';\r\nimport './components/css/usersideglobal.css'\r\n\r\nconst App = () => {\r\n  const [users, setUsers] = useState([])\r\n  const [admins, setAdmins] = useState([])\r\n  const [admin, setAdmin] = useState([])\r\n  const [orderDetail, setOrderDetail] = useState({})\r\n\r\n  const [productCategories, setProductCategories] = useState([])\r\n  const [productSubCategories, setProductSubCategories] = useState([])\r\n  const [products, setProducts] = useState([])\r\n  const [productStock, setProductStock] = useState([])\r\n\r\n  const [recipeCategories, setRecipeCategories] = useState([])\r\n  const [recipes, setRecipes] = useState([])\r\n\r\n  useEffect(() => {\r\n    getOrderNamebyOrderId({})\r\n    getUserRecentOrder()\r\n    getAdmins()\r\n\r\n    getAllProductCategories()\r\n    getAllProductSubCategories()\r\n    getAllProducts()\r\n    getAllProductStock()\r\n\r\n    getAllRecipeCategories()\r\n    getAllRecipes()\r\n\r\n  }, [])\r\n\r\n  // admins\r\n  const getAdmins = () => {\r\n    fetch(`https://apibounwe.herokuapp.com/admin`)\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        // alert(\"json \" + JSON.stringify(json));\r\n        setAdmins(json)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const getAdminbyId = (admin_id) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://apibounwe.herokuapp.com/admin/${admin_id}`)\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          // console.log(\"json \" + JSON.stringify(json));\r\n          setAdmin(json[0]);\r\n          return resolve(json[0]);\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          return reject(err);\r\n        });\r\n    })\r\n  }\r\n\r\n  // products\r\n  const getAllProductCategories = () => {\r\n    fetch(`https://apibounwe.herokuapp.com/productCategory`)\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        // alert(\"json \" + JSON.stringify(json));\r\n        setProductCategories(json)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const getAllProductSubCategories = () => {\r\n    fetch(`https://apibounwe.herokuapp.com/productSubCategories`)\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        // console.log(\"json \" + JSON.stringify(json));\r\n        setProductSubCategories(json)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const getAllProducts = () => {\r\n    fetch(`https://apibounwe.herokuapp.com/product`)\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        setProducts(json)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  const getAllProductStock = () => {\r\n    fetch(`https://apibounwe.herokuapp.com/productStock`)\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        setProductStock(json)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // recipes\r\n  const getAllRecipeCategories = () => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://apibounwe.herokuapp.com/recipeCategories`)\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          // console.log(\"json \" + JSON.stringify(json));\r\n          setRecipeCategories(json)\r\n          return resolve(json)\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          return reject(err);\r\n        });\r\n    })\r\n  }\r\n\r\n  const getAllRecipes = () => {\r\n    fetch(`https://apibounwe.herokuapp.com/recipes`, { headers: { 'access_right': \"USER\" } })\r\n      .then(res => res.json())\r\n      .then((json) => {\r\n        setRecipes(json)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // order\r\n  const getOrderNamebyOrderId = (order_id) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://apibounwe.herokuapp.com/ordername/${order_id}`, {\r\n        headers: { 'access_right': localStorage.getItem('access_right') }\r\n      })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          console.log(\"json \" + JSON.stringify(json));\r\n          //alert(json)\r\n          setOrderDetail(json[0])\r\n          // alert(JSON.stringify(json))\r\n          return resolve(json[0])\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          return reject(err);\r\n        });\r\n    })\r\n  }\r\n\r\n  const getUserRecentOrder = () => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`https://apibounwe.herokuapp.com/userorder`, {\r\n        headers: { authorization: `Bearer ${window.localStorage.getItem('jwttoken')}` }\r\n      })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n          // console.log(\"json \" + JSON.stringify(json));\r\n          setUsers(json)\r\n          return resolve(json)\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          return reject(err);\r\n        });\r\n    })\r\n  }\r\n\r\n\r\n  const ensureAdminIsLoggedIn = () => {\r\n    if (localStorage.getItem('access_right') === undefined || localStorage.getItem('access_right') === null) {\r\n      alert(\"You are not supposed to be in the admin page\")\r\n      window.location.href = 'https://anarchygene.github.io/fyp-frontend/#/adminlogin'\r\n    }\r\n  }\r\n  const AdminRoutes = () => {\r\n    useEffect(() => {\r\n      ensureAdminIsLoggedIn()\r\n    }, [])\r\n    return (\r\n      <Row style={{ margin: '0' }}>\r\n        <Col xs={2} id=\"sidebar-wrapper-admin\">\r\n          <AdminSidebar />\r\n        </Col>\r\n        <Col xs={10} id=\"page-content-wrapper\">\r\n          <Route path=\"/manageproducts\">\r\n            <AdminProducts products={productStock} />\r\n          </Route>\r\n          <Route exact path=\"/editproducts/:product_id\">\r\n            <AdminProducts />\r\n          </Route>\r\n          <Route path=\"/adminaddproduct\">\r\n            <AdminProducts />\r\n          </Route>\r\n          <Route exact path=\"/editproductcat\">\r\n            <AdminProducts />\r\n          </Route>\r\n          <Route exact path=\"/searchproduct/:search\">\r\n            <AdminProducts />\r\n          </Route>\r\n          <Route path=\"/managerecipes\">\r\n            <AdminRecipes recipes={recipes} />\r\n          </Route>\r\n          <Route path=\"/adminaddrecipe\">\r\n            <AdminRecipes />\r\n          </Route>\r\n          <Route path=\"/adminaddrecipe2/:id\">\r\n            <AdminRecipes />\r\n          </Route>\r\n          <Route exact path=\"/editrecipes/:id\">\r\n            <AdminRecipes />\r\n          </Route>\r\n          <Route exact path=\"/editrecipes2/:recipe_id\">\r\n            <AdminRecipes />\r\n          </Route>\r\n          <Route path=\"/searchrecipe/:search\">\r\n            <AdminRecipes />\r\n          </Route>\r\n          <Route path=\"/editrecipecat\">\r\n            <AdminRecipes />\r\n          </Route>\r\n          <Route exact path=\"/editingredientprod/:ingredient_id\">\r\n            <AdminRecipes />\r\n          </Route>\r\n          <Route path=\"/manageadmins\">\r\n            <ManageAdmins admins={admins} getAdminDetail={getAdminbyId} />\r\n          </Route>\r\n          <Route path=\"/manageusers\">\r\n            <ManageUsers users={users} />\r\n          </Route>\r\n          <Route path=\"/searchuser/:search\">\r\n            <UserSearch />\r\n          </Route>\r\n          <Route path=\"/addadmin\">\r\n            <AddAdmin />\r\n          </Route>\r\n          <Route path=\"/createpasswordadmin\">\r\n            <CreatePasswordAdmin />\r\n          </Route>\r\n          <Route path=\"/adminprofile\">\r\n            <AdminProfile />\r\n          </Route>\r\n          <Route path=\"/manageorders\">\r\n            {/* <AdminOrders orders={orders} getOrderDetail={getOrderNamebyOrderId} /> */}\r\n            <AdminOrders />\r\n          </Route>\r\n          <Route path=\"/adminorderdetails/:order_id\">\r\n            <AdminOrderDetails />\r\n          </Route>\r\n          <Route path=\"/editadminprofile\">\r\n            <EditAdminProfile />\r\n          </Route>\r\n          <Route path=\"/managediscountcode\">\r\n            <ManageDiscountCode />\r\n          </Route>\r\n          <Route exact path=\"/editdiscount/:discount_id\">\r\n            <EditDiscountDetails />\r\n          </Route>\r\n          <Route exact path=\"/editadmin/:id\">\r\n            <EditAdmins admin={admin} />\r\n          </Route>\r\n          <Route path=\"/searchadmin/:search\">\r\n            <AdminSearch getAdminDetail={getAdminbyId} />\r\n          </Route>\r\n          <Route path=\"/adddiscount\">\r\n            <AddDiscount />\r\n          </Route>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  const UserRoutes = () => {\r\n    return (\r\n      <>\r\n        <Navigation />\r\n        <Route path=\"/home\">\r\n          <Homepage products={productStock} recipes={recipes} />\r\n        </Route>\r\n        <Route path=\"/search/:search\">\r\n          <Search />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <UserLogin />\r\n        </Route>\r\n        <Route path=\"/aboutus\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/shoppingcart\">\r\n          <ShoppingCart />\r\n        </Route>\r\n        <Route path=\"/useraccountdetails/accountdetails\">\r\n          <Row style={{ margin: '0' }} className=\"row-container row-container-sizing\">\r\n            <Col xs={2} id=\"sidebar-wrapper-user\">\r\n              <UserDetailSidebar />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <UserAccountDetails />\r\n            </Col>\r\n          </Row>\r\n        </Route>\r\n        <Route path=\"/useraccountdetails/orderhistory\">\r\n          <Row style={{ margin: '0' }}>\r\n            <Col xs={2} id=\"sidebar-wrapper-user\">\r\n              <UserDetailSidebar />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <UserAccountDetails />\r\n            </Col>\r\n          </Row>\r\n        </Route>\r\n        <Route path={[\"/products\", \"/products/:category\", \"/products/:category/:subcategory\"]}>\r\n          <Row style={{ margin: '0' }} className=\"row-container row-container-sizing\">\r\n            <Product pcat={productCategories} psubcat={productSubCategories} products={productStock} />\r\n          </Row>\r\n        </Route>\r\n        <Route path=\"/productdetails/:id\">\r\n          <Row style={{ margin: '0' }} className=\"row-container row-container-sizing\">\r\n            <Col xs={2} id=\"sidebar-wrapper-user\">\r\n              <ProductSidebar pcat={productCategories} psubcat={productSubCategories} />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <ProductDetails />\r\n            </Col>\r\n          </Row>\r\n        </Route>\r\n        <Route path={[\"/recipes\", \"/recipes/:category\"]}>\r\n          <Row style={{ margin: '0' }} className=\"row-container row-container-sizing\">\r\n            <Recipe recipes={recipes} rcat={recipeCategories} />\r\n          </Row>\r\n        </Route>\r\n        <Route path=\"/recipedetails/:id\">\r\n          <Row style={{ margin: '0' }} className=\"row-container row-container-sizing\">\r\n            <Col xs={2} id=\"sidebar-wrapper-user\">\r\n              <RecipeSidebar rcat={recipeCategories} />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <RecipeDetails />\r\n            </Col>\r\n          </Row>\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <RegisterPage />\r\n        </Route>\r\n        <Route path=\"/payment\">\r\n          <Payment />\r\n        </Route>\r\n        <Route exact path=\"/successfulorder/:id\">\r\n          <SuccessfulOrder />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Homepage products={productStock} recipes={recipes} />\r\n        </Route>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container fluid=\"wrapper\">\r\n      <HashRouter>\r\n        <Switch>\r\n\r\n          <Route path=\"/adminlogin\">\r\n            <AdminLogin />\r\n          </Route>\r\n          <Route path={[\"/adminaddrecipe\", \"/adminaddrecipe2\", \"/searchuser/:search\", \"/searchadmin/:search\", \"/searchrecipe\", \"/searchproduct\", \"/manageproducts\", \"/editrecipecat\", \"/editdiscount/:discount_id\", \"/managerecipes\", \"/manageadmins\", \"/manageusers\", \"/manageorders\", \"/adminaddproduct\", \"/managediscountcode\", \"/addadmin\", \"/createpasswordadmin\", \"/adminprofile\", \"/editadminprofile\", \"/editproducts/:product_id\", \"/adminorderdetails\", \"/adddiscount\", \"/editadmin/:id\", \"/editproductcat\", \"/editrecipes/:id\", \"/editrecipes2/:recipe_id\", \"/editingredientprod/:ingredient_id\"]}>\r\n            <AdminRoutes />\r\n          </Route>\r\n          <Route path={[\"/\", \"/search/:search\", \"/register\", \"/home\", \"/login\", \"/aboutus\", \"/products\", \"/products/:category\", \"/products/:category/:subcategory\", \"/products/productdetails\", \"/recipes\", \"/useraccountdetails/accountdetails\", \"/useraccountdetails/accountdetails/edit\", \"/useraccountdetails/orderhistory\", \"/successfulorder/:id\"]}>\r\n            <UserRoutes />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//React Bootstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}